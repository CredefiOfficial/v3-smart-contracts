{
	"id": "da112887131e0867541375098ec5ff48",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CREDIWhale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./interface/IERC20_Decimals.sol\";\r\nimport \"./interface/ICREDIWhale.sol\";\r\n\r\ncontract CREDIWhale is Ownable, ICREDIWhale  \r\n{\r\n    address immutable public CREDI;\r\n    uint private _whaleThreshold = 500000;\r\n\r\n    constructor(address _CREDI) Ownable(_msgSender())\r\n    { \r\n        CREDI = _CREDI;\r\n        _whaleThreshold = _whaleThreshold*10**IERC20_Decimals(CREDI).decimals();\r\n    }\r\n\r\n    function isWhale(address user_address) external view returns (bool)\r\n    {\r\n        return IERC20(CREDI).balanceOf(user_address) >= _whaleThreshold;\r\n    }\r\n\r\n    function setWhaleThreshold(uint new_threshold) external onlyOwner\r\n    {\r\n        _whaleThreshold = new_threshold*10**IERC20_Decimals(CREDI).decimals();\r\n    }\r\n\r\n    function whaleThreshold() external view returns (uint)\r\n    {\r\n        return _whaleThreshold;\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/ICREDIWhale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ICREDIWhale \r\n{\r\n    function isWhale(address user_address) external view returns (bool);\r\n    function whaleThreshold() external view returns (uint); \r\n}"
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC20_Decimals \r\n{\r\n    function decimals() external view returns (uint8);   \r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CREDIWhale.sol": {
				"CREDIWhale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_CREDI",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								}
							],
							"name": "isWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "new_threshold",
									"type": "uint256"
								}
							],
							"name": "setWhaleThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whaleThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/CREDIWhale.sol\":378:384  500000 */\n  0x07a120\n    /* \"contracts/CREDIWhale.sol\":347:384  uint private _whaleThreshold = 500000 */\n  0x01\n  sstore\n    /* \"contracts/CREDIWhale.sol\":393:564  constructor(address _CREDI) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/CREDIWhale.sol\":460:474  CREDI = _CREDI */\n  dup2\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"contracts/CREDIWhale.sol\":523:556  IERC20_Decimals(CREDI).decimals() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x313ce567)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/CREDIWhale.sol\":523:554  IERC20_Decimals(CREDI).decimals */\n  0x313ce567\n  swap2\n    /* \"contracts/CREDIWhale.sol\":523:556  IERC20_Decimals(CREDI).decimals() */\n  0x04\n  dup1\n  dup3\n  add\n  swap3\n  0x20\n  swap3\n  swap1\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/CREDIWhale.sol\":460:474  CREDI = _CREDI */\n  dup7\n    /* \"contracts/CREDIWhale.sol\":523:556  IERC20_Decimals(CREDI).decimals() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_16\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_16:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/CREDIWhale.sol\":519:556  10**IERC20_Decimals(CREDI).decimals() */\n  tag_19\n  swap1\n    /* \"contracts/CREDIWhale.sol\":519:521  10 */\n  0x0a\n    /* \"contracts/CREDIWhale.sol\":519:556  10**IERC20_Decimals(CREDI).decimals() */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/CREDIWhale.sol\":503:518  _whaleThreshold */\n  sload(0x01)\n    /* \"contracts/CREDIWhale.sol\":503:556  _whaleThreshold*10**IERC20_Decimals(CREDI).decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/CREDIWhale.sol\":485:500  _whaleThreshold */\n  0x01\n    /* \"contracts/CREDIWhale.sol\":485:556  _whaleThreshold = _whaleThreshold*10**IERC20_Decimals(CREDI).decimals() */\n  sstore\n  pop\n    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_31:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_32:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":517:790   */\ntag_18:\n    /* \"#utility.yul\":585:591   */\n  0x00\n    /* \"#utility.yul\":638:640   */\n  0x20\n    /* \"#utility.yul\":626:635   */\n  dup3\n    /* \"#utility.yul\":617:624   */\n  dup5\n    /* \"#utility.yul\":613:636   */\n  sub\n    /* \"#utility.yul\":609:641   */\n  slt\n    /* \"#utility.yul\":606:658   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":654:655   */\n  0x00\n    /* \"#utility.yul\":651:652   */\n  0x00\n    /* \"#utility.yul\":644:656   */\n  revert\n    /* \"#utility.yul\":606:658   */\ntag_35:\n    /* \"#utility.yul\":686:695   */\n  dup2\n    /* \"#utility.yul\":680:696   */\n  mload\n    /* \"#utility.yul\":736:740   */\n  0xff\n    /* \"#utility.yul\":729:734   */\n  dup2\n    /* \"#utility.yul\":725:741   */\n  and\n    /* \"#utility.yul\":718:723   */\n  dup2\n    /* \"#utility.yul\":715:742   */\n  eq\n    /* \"#utility.yul\":705:760   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":756:757   */\n  0x00\n    /* \"#utility.yul\":753:754   */\n  0x00\n    /* \"#utility.yul\":746:758   */\n  revert\n    /* \"#utility.yul\":795:922   */\ntag_26:\n    /* \"#utility.yul\":856:866   */\n  0x4e487b71\n    /* \"#utility.yul\":851:854   */\n  0xe0\n    /* \"#utility.yul\":847:867   */\n  shl\n    /* \"#utility.yul\":844:845   */\n  0x00\n    /* \"#utility.yul\":837:868   */\n  mstore\n    /* \"#utility.yul\":887:891   */\n  0x11\n    /* \"#utility.yul\":884:885   */\n  0x04\n    /* \"#utility.yul\":877:892   */\n  mstore\n    /* \"#utility.yul\":911:915   */\n  0x24\n    /* \"#utility.yul\":908:909   */\n  0x00\n    /* \"#utility.yul\":901:916   */\n  revert\n    /* \"#utility.yul\":927:1302   */\ntag_27:\n    /* \"#utility.yul\":1015:1016   */\n  0x01\n    /* \"#utility.yul\":1033:1038   */\n  dup2\n    /* \"#utility.yul\":1047:1296   */\ntag_39:\n    /* \"#utility.yul\":1068:1069   */\n  0x01\n    /* \"#utility.yul\":1058:1066   */\n  dup5\n    /* \"#utility.yul\":1055:1070   */\n  gt\n    /* \"#utility.yul\":1047:1296   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1118:1122   */\n  dup1\n    /* \"#utility.yul\":1113:1116   */\n  dup6\n    /* \"#utility.yul\":1109:1123   */\n  div\n    /* \"#utility.yul\":1103:1107   */\n  dup2\n    /* \"#utility.yul\":1100:1124   */\n  gt\n    /* \"#utility.yul\":1097:1147   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1127:1145   */\n  tag_43\n  tag_26\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1177:1178   */\n  0x01\n    /* \"#utility.yul\":1167:1175   */\n  dup5\n    /* \"#utility.yul\":1163:1179   */\n  and\n    /* \"#utility.yul\":1160:1209   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1191:1207   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":1160:1209   */\ntag_44:\n    /* \"#utility.yul\":1274:1275   */\n  0x01\n    /* \"#utility.yul\":1270:1286   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":1230:1245   */\n  dup1\n  mul\n    /* \"#utility.yul\":1047:1296   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":927:1302   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:2209   */\ntag_28:\n    /* \"#utility.yul\":1356:1361   */\n  0x00\n    /* \"#utility.yul\":1386:1394   */\n  dup3\n    /* \"#utility.yul\":1376:1456   */\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":1427:1428   */\n  0x01\n    /* \"#utility.yul\":1441:1446   */\n  jump(tag_45)\n    /* \"#utility.yul\":1376:1456   */\ntag_46:\n    /* \"#utility.yul\":1475:1479   */\n  dup2\n    /* \"#utility.yul\":1465:1541   */\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":1512:1513   */\n  0x00\n    /* \"#utility.yul\":1526:1531   */\n  jump(tag_45)\n    /* \"#utility.yul\":1465:1541   */\ntag_47:\n    /* \"#utility.yul\":1557:1561   */\n  dup2\n    /* \"#utility.yul\":1575:1576   */\n  0x01\n    /* \"#utility.yul\":1570:1629   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1643:1644   */\n  0x02\n    /* \"#utility.yul\":1638:1812   */\n  dup2\n  eq\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1550:1812   */\n  jump(tag_48)\n    /* \"#utility.yul\":1570:1629   */\ntag_49:\n    /* \"#utility.yul\":1600:1601   */\n  0x01\n    /* \"#utility.yul\":1591:1601   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1619   */\n  pop\n  jump(tag_45)\n    /* \"#utility.yul\":1638:1812   */\ntag_50:\n    /* \"#utility.yul\":1675:1678   */\n  0xff\n    /* \"#utility.yul\":1665:1673   */\n  dup5\n    /* \"#utility.yul\":1662:1679   */\n  gt\n    /* \"#utility.yul\":1659:1702   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1682:1700   */\n  tag_52\n  tag_26\n  jump\t// in\ntag_52:\n  pop\n  pop\n    /* \"#utility.yul\":1738:1739   */\n  0x01\n    /* \"#utility.yul\":1724:1740   */\n  dup3\n  shl\n    /* \"#utility.yul\":1797:1802   */\n  jump(tag_45)\n    /* \"#utility.yul\":1550:1812   */\ntag_48:\n  pop\n    /* \"#utility.yul\":1896:1898   */\n  0x20\n    /* \"#utility.yul\":1886:1894   */\n  dup4\n    /* \"#utility.yul\":1883:1899   */\n  lt\n    /* \"#utility.yul\":1877:1880   */\n  0x0133\n    /* \"#utility.yul\":1871:1875   */\n  dup4\n    /* \"#utility.yul\":1868:1881   */\n  lt\n    /* \"#utility.yul\":1864:1900   */\n  and\n    /* \"#utility.yul\":1858:1860   */\n  0x4e\n    /* \"#utility.yul\":1848:1856   */\n  dup5\n    /* \"#utility.yul\":1845:1861   */\n  lt\n    /* \"#utility.yul\":1840:1842   */\n  0x0b\n    /* \"#utility.yul\":1834:1838   */\n  dup5\n    /* \"#utility.yul\":1831:1843   */\n  lt\n    /* \"#utility.yul\":1827:1862   */\n  and\n    /* \"#utility.yul\":1824:1901   */\n  or\n    /* \"#utility.yul\":1821:2024   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":1933:1952   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":2009:2014   */\n  jump(tag_45)\n    /* \"#utility.yul\":1821:2024   */\ntag_53:\n    /* \"#utility.yul\":2056:2098   */\n  tag_54\n  not(0x00)\n    /* \"#utility.yul\":2081:2089   */\n  dup5\n    /* \"#utility.yul\":2075:2079   */\n  dup5\n    /* \"#utility.yul\":2056:2098   */\n  tag_27\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2134:2140   */\n  dup1\n    /* \"#utility.yul\":2130:2131   */\n  0x00\n    /* \"#utility.yul\":2126:2132   */\n  not\n    /* \"#utility.yul\":2122:2141   */\n  div\n    /* \"#utility.yul\":2113:2120   */\n  dup3\n    /* \"#utility.yul\":2110:2142   */\n  gt\n    /* \"#utility.yul\":2107:2165   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2145:2163   */\n  tag_56\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2183:2203   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":1307:2209   */\ntag_45:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2214:2354   */\ntag_20:\n    /* \"#utility.yul\":2272:2277   */\n  0x00\n    /* \"#utility.yul\":2301:2348   */\n  tag_32\n    /* \"#utility.yul\":2342:2346   */\n  0xff\n    /* \"#utility.yul\":2332:2340   */\n  dup5\n    /* \"#utility.yul\":2328:2347   */\n  and\n    /* \"#utility.yul\":2322:2326   */\n  dup4\n    /* \"#utility.yul\":2301:2348   */\n  tag_28\n  jump\t// in\n    /* \"#utility.yul\":2359:2527   */\ntag_22:\n    /* \"#utility.yul\":2432:2441   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":2463:2472   */\n  dup2\n  iszero\n    /* \"#utility.yul\":2480:2495   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":2474:2496   */\n  dup5\n  eq\n    /* \"#utility.yul\":2460:2497   */\n  or\n    /* \"#utility.yul\":2450:2521   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2501:2519   */\n  tag_45\n  tag_26\n  jump\t// in\n    /* \"#utility.yul\":2359:2527   */\ntag_29:\n    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ef1e259\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8ef1e259\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9a3bfdf5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xffdd60f9\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_10:\n      dup1\n      0x6db08f25\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CREDIWhale.sol\":310:340  address immutable public CREDI */\n    tag_3:\n      tag_11\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:233   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/CREDIWhale.sol\":310:340  address immutable public CREDI */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_11)\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n    tag_6:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":724:738   */\n      swap1\n      iszero\n        /* \"#utility.yul\":717:739   */\n      iszero\n        /* \"#utility.yul\":699:740   */\n      dup2\n      mstore\n        /* \"#utility.yul\":687:689   */\n      0x20\n        /* \"#utility.yul\":672:690   */\n      add\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n      tag_13\n        /* \"#utility.yul\":559:746   */\n      jump\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n    tag_7:\n        /* \"contracts/CREDIWhale.sol\":980:995  _whaleThreshold */\n      sload(0x01)\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n      mload(0x40)\n        /* \"#utility.yul\":897:922   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":885:887   */\n      0x20\n        /* \"#utility.yul\":870:888   */\n      add\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n      tag_13\n        /* \"#utility.yul\":751:928   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_15\n      tag_31\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n    tag_9:\n      tag_15\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n    tag_23:\n        /* \"contracts/CREDIWhale.sol\":704:719  _whaleThreshold */\n      sload(0x01)\n        /* \"contracts/CREDIWhale.sol\":663:700  IERC20(CREDI).balanceOf(user_address) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:233   */\n      dup4\n      dup2\n      and\n        /* \"contracts/CREDIWhale.sol\":663:700  IERC20(CREDI).balanceOf(user_address) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n      0x00\n      swap3\n        /* \"contracts/CREDIWhale.sol\":704:719  _whaleThreshold */\n      swap2\n        /* \"contracts/CREDIWhale.sol\":670:675  CREDI */\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n        /* \"contracts/CREDIWhale.sol\":663:686  IERC20(CREDI).balanceOf */\n      swap1\n      swap2\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/CREDIWhale.sol\":663:700  IERC20(CREDI).balanceOf(user_address) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/CREDIWhale.sol\":663:719  IERC20(CREDI).balanceOf(user_address) >= _whaleThreshold */\n      lt\n      iszero\n      swap3\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/CREDIWhale.sol\":869:874  CREDI */\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CREDIWhale.sol\":853:884  IERC20_Decimals(CREDI).decimals */\n      and\n      0x313ce567\n        /* \"contracts/CREDIWhale.sol\":853:886  IERC20_Decimals(CREDI).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/CREDIWhale.sol\":849:886  10**IERC20_Decimals(CREDI).decimals() */\n      tag_64\n      swap1\n        /* \"contracts/CREDIWhale.sol\":849:851  10 */\n      0x0a\n        /* \"contracts/CREDIWhale.sol\":849:886  10**IERC20_Decimals(CREDI).decimals() */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/CREDIWhale.sol\":835:886  new_threshold*10**IERC20_Decimals(CREDI).decimals() */\n      tag_66\n      swap1\n        /* \"contracts/CREDIWhale.sol\":835:848  new_threshold */\n      dup3\n        /* \"contracts/CREDIWhale.sol\":835:886  new_threshold*10**IERC20_Decimals(CREDI).decimals() */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/CREDIWhale.sol\":817:832  _whaleThreshold */\n      0x01\n        /* \"contracts/CREDIWhale.sol\":817:886  _whaleThreshold = new_threshold*10**IERC20_Decimals(CREDI).decimals() */\n      sstore\n      pop\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_41\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:234   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_55\n        /* \"#utility.yul\":14:240   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:554   */\n    tag_22:\n        /* \"#utility.yul\":304:310   */\n      0x00\n        /* \"#utility.yul\":357:359   */\n      0x20\n        /* \"#utility.yul\":345:354   */\n      dup3\n        /* \"#utility.yul\":336:343   */\n      dup5\n        /* \"#utility.yul\":332:355   */\n      sub\n        /* \"#utility.yul\":328:360   */\n      slt\n        /* \"#utility.yul\":325:377   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":373:374   */\n      0x00\n        /* \"#utility.yul\":370:371   */\n      0x00\n        /* \"#utility.yul\":363:375   */\n      revert\n        /* \"#utility.yul\":325:377   */\n    tag_83:\n        /* \"#utility.yul\":412:421   */\n      dup2\n        /* \"#utility.yul\":399:422   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":455:460   */\n      dup2\n        /* \"#utility.yul\":451:505   */\n      and\n        /* \"#utility.yul\":444:449   */\n      dup2\n        /* \"#utility.yul\":441:506   */\n      eq\n        /* \"#utility.yul\":431:524   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":520:521   */\n      0x00\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":510:522   */\n      revert\n        /* \"#utility.yul\":431:524   */\n    tag_84:\n        /* \"#utility.yul\":543:548   */\n      swap4\n        /* \"#utility.yul\":245:554   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1113   */\n    tag_35:\n        /* \"#utility.yul\":992:998   */\n      0x00\n        /* \"#utility.yul\":1045:1047   */\n      0x20\n        /* \"#utility.yul\":1033:1042   */\n      dup3\n        /* \"#utility.yul\":1024:1031   */\n      dup5\n        /* \"#utility.yul\":1020:1043   */\n      sub\n        /* \"#utility.yul\":1016:1048   */\n      slt\n        /* \"#utility.yul\":1013:1065   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":1061:1062   */\n      0x00\n        /* \"#utility.yul\":1058:1059   */\n      0x00\n        /* \"#utility.yul\":1051:1063   */\n      revert\n        /* \"#utility.yul\":1013:1065   */\n    tag_88:\n      pop\n        /* \"#utility.yul\":1084:1107   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":933:1113   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1302   */\n    tag_49:\n        /* \"#utility.yul\":1188:1194   */\n      0x00\n        /* \"#utility.yul\":1241:1243   */\n      0x20\n        /* \"#utility.yul\":1229:1238   */\n      dup3\n        /* \"#utility.yul\":1220:1227   */\n      dup5\n        /* \"#utility.yul\":1216:1239   */\n      sub\n        /* \"#utility.yul\":1212:1244   */\n      slt\n        /* \"#utility.yul\":1209:1261   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1257:1258   */\n      0x00\n        /* \"#utility.yul\":1254:1255   */\n      0x00\n        /* \"#utility.yul\":1247:1259   */\n      revert\n        /* \"#utility.yul\":1209:1261   */\n    tag_90:\n      pop\n        /* \"#utility.yul\":1280:1296   */\n      mload\n      swap2\n        /* \"#utility.yul\":1118:1302   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1307:1580   */\n    tag_63:\n        /* \"#utility.yul\":1375:1381   */\n      0x00\n        /* \"#utility.yul\":1428:1430   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1407:1414   */\n      dup5\n        /* \"#utility.yul\":1403:1426   */\n      sub\n        /* \"#utility.yul\":1399:1431   */\n      slt\n        /* \"#utility.yul\":1396:1448   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":1444:1445   */\n      0x00\n        /* \"#utility.yul\":1441:1442   */\n      0x00\n        /* \"#utility.yul\":1434:1446   */\n      revert\n        /* \"#utility.yul\":1396:1448   */\n    tag_92:\n        /* \"#utility.yul\":1476:1485   */\n      dup2\n        /* \"#utility.yul\":1470:1486   */\n      mload\n        /* \"#utility.yul\":1526:1530   */\n      0xff\n        /* \"#utility.yul\":1519:1524   */\n      dup2\n        /* \"#utility.yul\":1515:1531   */\n      and\n        /* \"#utility.yul\":1508:1513   */\n      dup2\n        /* \"#utility.yul\":1505:1532   */\n      eq\n        /* \"#utility.yul\":1495:1550   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1546:1547   */\n      0x00\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1548   */\n      revert\n        /* \"#utility.yul\":1585:1769   */\n    tag_77:\n        /* \"#utility.yul\":1637:1714   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1634:1635   */\n      0x00\n        /* \"#utility.yul\":1627:1715   */\n      mstore\n        /* \"#utility.yul\":1734:1738   */\n      0x11\n        /* \"#utility.yul\":1731:1732   */\n      0x04\n        /* \"#utility.yul\":1724:1739   */\n      mstore\n        /* \"#utility.yul\":1758:1762   */\n      0x24\n        /* \"#utility.yul\":1755:1756   */\n      0x00\n        /* \"#utility.yul\":1748:1763   */\n      revert\n        /* \"#utility.yul\":1774:2149   */\n    tag_78:\n        /* \"#utility.yul\":1862:1863   */\n      0x01\n        /* \"#utility.yul\":1880:1885   */\n      dup2\n        /* \"#utility.yul\":1894:2143   */\n    tag_96:\n        /* \"#utility.yul\":1915:1916   */\n      0x01\n        /* \"#utility.yul\":1905:1913   */\n      dup5\n        /* \"#utility.yul\":1902:1917   */\n      gt\n        /* \"#utility.yul\":1894:2143   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1965:1969   */\n      dup1\n        /* \"#utility.yul\":1960:1963   */\n      dup6\n        /* \"#utility.yul\":1956:1970   */\n      div\n        /* \"#utility.yul\":1950:1954   */\n      dup2\n        /* \"#utility.yul\":1947:1971   */\n      gt\n        /* \"#utility.yul\":1944:1994   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1974:1992   */\n      tag_100\n      tag_77\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2024:2025   */\n      0x01\n        /* \"#utility.yul\":2014:2022   */\n      dup5\n        /* \"#utility.yul\":2010:2026   */\n      and\n        /* \"#utility.yul\":2007:2056   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2038:2054   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":2007:2056   */\n    tag_101:\n        /* \"#utility.yul\":2121:2122   */\n      0x01\n        /* \"#utility.yul\":2117:2133   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":2077:2092   */\n      dup1\n      mul\n        /* \"#utility.yul\":1894:2143   */\n      jump(tag_96)\n    tag_98:\n        /* \"#utility.yul\":1774:2149   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2154:3056   */\n    tag_79:\n        /* \"#utility.yul\":2203:2208   */\n      0x00\n        /* \"#utility.yul\":2233:2241   */\n      dup3\n        /* \"#utility.yul\":2223:2303   */\n      tag_103\n      jumpi\n      pop\n        /* \"#utility.yul\":2274:2275   */\n      0x01\n        /* \"#utility.yul\":2288:2293   */\n      jump(tag_102)\n        /* \"#utility.yul\":2223:2303   */\n    tag_103:\n        /* \"#utility.yul\":2322:2326   */\n      dup2\n        /* \"#utility.yul\":2312:2388   */\n      tag_104\n      jumpi\n      pop\n        /* \"#utility.yul\":2359:2360   */\n      0x00\n        /* \"#utility.yul\":2373:2378   */\n      jump(tag_102)\n        /* \"#utility.yul\":2312:2388   */\n    tag_104:\n        /* \"#utility.yul\":2404:2408   */\n      dup2\n        /* \"#utility.yul\":2422:2423   */\n      0x01\n        /* \"#utility.yul\":2417:2476   */\n      dup2\n      eq\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2490:2491   */\n      0x02\n        /* \"#utility.yul\":2485:2659   */\n      dup2\n      eq\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2397:2659   */\n      jump(tag_105)\n        /* \"#utility.yul\":2417:2476   */\n    tag_106:\n        /* \"#utility.yul\":2447:2448   */\n      0x01\n        /* \"#utility.yul\":2438:2448   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2466   */\n      pop\n      jump(tag_102)\n        /* \"#utility.yul\":2485:2659   */\n    tag_107:\n        /* \"#utility.yul\":2522:2525   */\n      0xff\n        /* \"#utility.yul\":2512:2520   */\n      dup5\n        /* \"#utility.yul\":2509:2526   */\n      gt\n        /* \"#utility.yul\":2506:2549   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2529:2547   */\n      tag_109\n      tag_77\n      jump\t// in\n    tag_109:\n      pop\n      pop\n        /* \"#utility.yul\":2585:2586   */\n      0x01\n        /* \"#utility.yul\":2571:2587   */\n      dup3\n      shl\n        /* \"#utility.yul\":2644:2649   */\n      jump(tag_102)\n        /* \"#utility.yul\":2397:2659   */\n    tag_105:\n      pop\n        /* \"#utility.yul\":2743:2745   */\n      0x20\n        /* \"#utility.yul\":2733:2741   */\n      dup4\n        /* \"#utility.yul\":2730:2746   */\n      lt\n        /* \"#utility.yul\":2724:2727   */\n      0x0133\n        /* \"#utility.yul\":2718:2722   */\n      dup4\n        /* \"#utility.yul\":2715:2728   */\n      lt\n        /* \"#utility.yul\":2711:2747   */\n      and\n        /* \"#utility.yul\":2705:2707   */\n      0x4e\n        /* \"#utility.yul\":2695:2703   */\n      dup5\n        /* \"#utility.yul\":2692:2708   */\n      lt\n        /* \"#utility.yul\":2687:2689   */\n      0x0b\n        /* \"#utility.yul\":2681:2685   */\n      dup5\n        /* \"#utility.yul\":2678:2690   */\n      lt\n        /* \"#utility.yul\":2674:2709   */\n      and\n        /* \"#utility.yul\":2671:2748   */\n      or\n        /* \"#utility.yul\":2668:2871   */\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"#utility.yul\":2780:2799   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":2856:2861   */\n      jump(tag_102)\n        /* \"#utility.yul\":2668:2871   */\n    tag_110:\n        /* \"#utility.yul\":2903:2945   */\n      tag_111\n      not(0x00)\n        /* \"#utility.yul\":2928:2936   */\n      dup5\n        /* \"#utility.yul\":2922:2926   */\n      dup5\n        /* \"#utility.yul\":2903:2945   */\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2981:2987   */\n      dup1\n        /* \"#utility.yul\":2977:2978   */\n      0x00\n        /* \"#utility.yul\":2973:2979   */\n      not\n        /* \"#utility.yul\":2969:2988   */\n      div\n        /* \"#utility.yul\":2960:2967   */\n      dup3\n        /* \"#utility.yul\":2957:2989   */\n      gt\n        /* \"#utility.yul\":2954:3012   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2992:3010   */\n      tag_113\n      tag_77\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3030:3050   */\n      mul\n      swap1\n      pop\n        /* \"#utility.yul\":2154:3056   */\n    tag_102:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3061:3201   */\n    tag_65:\n        /* \"#utility.yul\":3119:3124   */\n      0x00\n        /* \"#utility.yul\":3148:3195   */\n      tag_84\n        /* \"#utility.yul\":3189:3193   */\n      0xff\n        /* \"#utility.yul\":3179:3187   */\n      dup5\n        /* \"#utility.yul\":3175:3194   */\n      and\n        /* \"#utility.yul\":3169:3173   */\n      dup4\n        /* \"#utility.yul\":3148:3195   */\n      tag_79\n      jump\t// in\n        /* \"#utility.yul\":3206:3374   */\n    tag_67:\n        /* \"#utility.yul\":3279:3288   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3310:3319   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3327:3342   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3321:3343   */\n      dup5\n      eq\n        /* \"#utility.yul\":3307:3344   */\n      or\n        /* \"#utility.yul\":3297:3368   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":3348:3366   */\n      tag_102\n      tag_77\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220104cd8d7463f4e369b2652d471e657f8530854ac779ef9d0d47c48ecb47753b764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_296": {
									"entryPoint": null,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 241,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2529:6",
										"nodeType": "YulBlock",
										"src": "0:2529:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:6",
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:6",
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:6",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:6",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nativeSrc": "143:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nativeSrc": "143:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nativeSrc": "112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nativeSrc": "108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nativeSrc": "105:52:6",
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nativeSrc": "166:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nativeSrc": "179:16:6",
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:6",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:6",
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:6",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:6",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nativeSrc": "260:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nativeSrc": "260:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:6",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:6",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nativeSrc": "239:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:6",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nativeSrc": "235:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nativeSrc": "224:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nativeSrc": "214:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nativeSrc": "207:50:6",
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nativeSrc": "204:70:6",
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nativeSrc": "283:15:6",
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:6",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:6",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:6",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:6",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											},
											{
												"body": {
													"nativeSrc": "410:102:6",
													"nodeType": "YulBlock",
													"src": "410:102:6",
													"statements": [
														{
															"nativeSrc": "420:26:6",
															"nodeType": "YulAssignment",
															"src": "420:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:6",
																		"nodeType": "YulLiteral",
																		"src": "443:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:6"
																},
																"nativeSrc": "428:18:6",
																"nodeType": "YulFunctionCall",
																"src": "428:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:6",
																								"nodeType": "YulLiteral",
																								"src": "493:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:6",
																								"nodeType": "YulLiteral",
																								"src": "498:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:6"
																						},
																						"nativeSrc": "489:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:6",
																						"nodeType": "YulLiteral",
																						"src": "502:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:6"
																				},
																				"nativeSrc": "485:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:6"
																		},
																		"nativeSrc": "473:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:6"
																},
																"nativeSrc": "455:51:6",
																"nodeType": "YulFunctionCall",
																"src": "455:51:6"
															},
															"nativeSrc": "455:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:6",
														"nodeType": "YulTypedName",
														"src": "379:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:6",
														"nodeType": "YulTypedName",
														"src": "390:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:6",
														"nodeType": "YulTypedName",
														"src": "401:4:6",
														"type": ""
													}
												],
												"src": "309:203:6"
											},
											{
												"body": {
													"nativeSrc": "596:194:6",
													"nodeType": "YulBlock",
													"src": "596:194:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "642:16:6",
																"nodeType": "YulBlock",
																"src": "642:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "651:1:6",
																					"nodeType": "YulLiteral",
																					"src": "651:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "654:1:6",
																					"nodeType": "YulLiteral",
																					"src": "654:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "644:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "644:6:6"
																			},
																			"nativeSrc": "644:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "644:12:6"
																		},
																		"nativeSrc": "644:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "644:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "617:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "617:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "626:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "626:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "613:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:6"
																		},
																		"nativeSrc": "613:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "613:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "638:2:6",
																		"nodeType": "YulLiteral",
																		"src": "638:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "609:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:6"
																},
																"nativeSrc": "609:32:6",
																"nodeType": "YulFunctionCall",
																"src": "609:32:6"
															},
															"nativeSrc": "606:52:6",
															"nodeType": "YulIf",
															"src": "606:52:6"
														},
														{
															"nativeSrc": "667:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "667:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "686:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "686:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "680:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "680:5:6"
																},
																"nativeSrc": "680:16:6",
																"nodeType": "YulFunctionCall",
																"src": "680:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "671:5:6",
																	"nodeType": "YulTypedName",
																	"src": "671:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "744:16:6",
																"nodeType": "YulBlock",
																"src": "744:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "753:1:6",
																					"nodeType": "YulLiteral",
																					"src": "753:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "756:1:6",
																					"nodeType": "YulLiteral",
																					"src": "756:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "746:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "746:6:6"
																			},
																			"nativeSrc": "746:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "746:12:6"
																		},
																		"nativeSrc": "746:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "746:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "718:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "718:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "729:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "729:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "736:4:6",
																						"nodeType": "YulLiteral",
																						"src": "736:4:6",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "725:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "725:3:6"
																				},
																				"nativeSrc": "725:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "725:16:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "715:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "715:2:6"
																		},
																		"nativeSrc": "715:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "715:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:6"
																},
																"nativeSrc": "708:35:6",
																"nodeType": "YulFunctionCall",
																"src": "708:35:6"
															},
															"nativeSrc": "705:55:6",
															"nodeType": "YulIf",
															"src": "705:55:6"
														},
														{
															"nativeSrc": "769:15:6",
															"nodeType": "YulAssignment",
															"src": "769:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "779:5:6",
																"nodeType": "YulIdentifier",
																"src": "779:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "769:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "517:273:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "562:9:6",
														"nodeType": "YulTypedName",
														"src": "562:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "573:7:6",
														"nodeType": "YulTypedName",
														"src": "573:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "585:6:6",
														"nodeType": "YulTypedName",
														"src": "585:6:6",
														"type": ""
													}
												],
												"src": "517:273:6"
											},
											{
												"body": {
													"nativeSrc": "827:95:6",
													"nodeType": "YulBlock",
													"src": "827:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "844:1:6",
																		"nodeType": "YulLiteral",
																		"src": "844:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "851:3:6",
																				"nodeType": "YulLiteral",
																				"src": "851:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "856:10:6",
																				"nodeType": "YulLiteral",
																				"src": "856:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "847:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "847:3:6"
																		},
																		"nativeSrc": "847:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "847:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "837:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:6"
																},
																"nativeSrc": "837:31:6",
																"nodeType": "YulFunctionCall",
																"src": "837:31:6"
															},
															"nativeSrc": "837:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "837:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "884:1:6",
																		"nodeType": "YulLiteral",
																		"src": "884:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "887:4:6",
																		"nodeType": "YulLiteral",
																		"src": "887:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "877:6:6"
																},
																"nativeSrc": "877:15:6",
																"nodeType": "YulFunctionCall",
																"src": "877:15:6"
															},
															"nativeSrc": "877:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "877:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "908:1:6",
																		"nodeType": "YulLiteral",
																		"src": "908:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "911:4:6",
																		"nodeType": "YulLiteral",
																		"src": "911:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "901:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:6"
																},
																"nativeSrc": "901:15:6",
																"nodeType": "YulFunctionCall",
																"src": "901:15:6"
															},
															"nativeSrc": "901:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "901:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "795:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "795:127:6"
											},
											{
												"body": {
													"nativeSrc": "996:306:6",
													"nodeType": "YulBlock",
													"src": "996:306:6",
													"statements": [
														{
															"nativeSrc": "1006:10:6",
															"nodeType": "YulAssignment",
															"src": "1006:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1015:1:6",
																"nodeType": "YulLiteral",
																"src": "1015:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1006:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1006:5:6"
																}
															]
														},
														{
															"nativeSrc": "1025:13:6",
															"nodeType": "YulAssignment",
															"src": "1025:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "1033:5:6",
																"nodeType": "YulIdentifier",
																"src": "1033:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "1025:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1083:213:6",
																"nodeType": "YulBlock",
																"src": "1083:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "1125:22:6",
																			"nodeType": "YulBlock",
																			"src": "1125:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "1127:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "1127:16:6"
																						},
																						"nativeSrc": "1127:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1127:18:6"
																					},
																					"nativeSrc": "1127:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1127:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1103:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1103:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "1113:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1113:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "1118:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1118:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "1109:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1109:3:6"
																					},
																					"nativeSrc": "1109:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1109:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1100:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1100:2:6"
																			},
																			"nativeSrc": "1100:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1100:24:6"
																		},
																		"nativeSrc": "1097:50:6",
																		"nodeType": "YulIf",
																		"src": "1097:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "1180:29:6",
																			"nodeType": "YulBlock",
																			"src": "1180:29:6",
																			"statements": [
																				{
																					"nativeSrc": "1182:25:6",
																					"nodeType": "YulAssignment",
																					"src": "1182:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1195:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1195:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1202:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1202:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1191:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1191:3:6"
																						},
																						"nativeSrc": "1191:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1191:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1182:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1182:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1167:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "1167:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1177:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1163:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1163:3:6"
																			},
																			"nativeSrc": "1163:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1163:16:6"
																		},
																		"nativeSrc": "1160:49:6",
																		"nodeType": "YulIf",
																		"src": "1160:49:6"
																	},
																	{
																		"nativeSrc": "1222:23:6",
																		"nodeType": "YulAssignment",
																		"src": "1222:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1234:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1234:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1240:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1240:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1230:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1230:3:6"
																			},
																			"nativeSrc": "1230:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1230:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1222:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1222:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1258:28:6",
																		"nodeType": "YulAssignment",
																		"src": "1258:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1274:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1274:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1277:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "1277:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "1270:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1270:3:6"
																			},
																			"nativeSrc": "1270:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1270:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1258:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1258:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1058:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1058:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1068:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1068:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1055:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1055:2:6"
																},
																"nativeSrc": "1055:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1055:15:6"
															},
															"nativeSrc": "1047:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1071:3:6",
																"nodeType": "YulBlock",
																"src": "1071:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1051:3:6",
																"nodeType": "YulBlock",
																"src": "1051:3:6",
																"statements": []
															},
															"src": "1047:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "927:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "955:5:6",
														"nodeType": "YulTypedName",
														"src": "955:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "962:8:6",
														"nodeType": "YulTypedName",
														"src": "962:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "972:3:6",
														"nodeType": "YulTypedName",
														"src": "972:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "980:5:6",
														"nodeType": "YulTypedName",
														"src": "980:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "987:4:6",
														"nodeType": "YulTypedName",
														"src": "987:4:6",
														"type": ""
													}
												],
												"src": "927:375:6"
											},
											{
												"body": {
													"nativeSrc": "1366:843:6",
													"nodeType": "YulBlock",
													"src": "1366:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1404:52:6",
																"nodeType": "YulBlock",
																"src": "1404:52:6",
																"statements": [
																	{
																		"nativeSrc": "1418:10:6",
																		"nodeType": "YulAssignment",
																		"src": "1418:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1427:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1427:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1418:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1418:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1441:5:6",
																		"nodeType": "YulLeave",
																		"src": "1441:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1386:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1386:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:6"
																},
																"nativeSrc": "1379:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1379:16:6"
															},
															"nativeSrc": "1376:80:6",
															"nodeType": "YulIf",
															"src": "1376:80:6"
														},
														{
															"body": {
																"nativeSrc": "1489:52:6",
																"nodeType": "YulBlock",
																"src": "1489:52:6",
																"statements": [
																	{
																		"nativeSrc": "1503:10:6",
																		"nodeType": "YulAssignment",
																		"src": "1503:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1512:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1512:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1503:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1503:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1526:5:6",
																		"nodeType": "YulLeave",
																		"src": "1526:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1475:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1475:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1468:6:6"
																},
																"nativeSrc": "1468:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1468:12:6"
															},
															"nativeSrc": "1465:76:6",
															"nodeType": "YulIf",
															"src": "1465:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1577:52:6",
																		"nodeType": "YulBlock",
																		"src": "1577:52:6",
																		"statements": [
																			{
																				"nativeSrc": "1591:10:6",
																				"nodeType": "YulAssignment",
																				"src": "1591:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1600:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1591:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1591:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1614:5:6",
																				"nodeType": "YulLeave",
																				"src": "1614:5:6"
																			}
																		]
																	},
																	"nativeSrc": "1570:59:6",
																	"nodeType": "YulCase",
																	"src": "1570:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1645:167:6",
																		"nodeType": "YulBlock",
																		"src": "1645:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1680:22:6",
																					"nodeType": "YulBlock",
																					"src": "1680:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1682:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "1682:16:6"
																								},
																								"nativeSrc": "1682:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1682:18:6"
																							},
																							"nativeSrc": "1682:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "1682:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1665:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "1665:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1675:3:6",
																							"nodeType": "YulLiteral",
																							"src": "1675:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1662:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1662:2:6"
																					},
																					"nativeSrc": "1662:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1662:17:6"
																				},
																				"nativeSrc": "1659:43:6",
																				"nodeType": "YulIf",
																				"src": "1659:43:6"
																			},
																			{
																				"nativeSrc": "1715:25:6",
																				"nodeType": "YulAssignment",
																				"src": "1715:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1728:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "1728:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1738:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1738:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1724:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:6"
																					},
																					"nativeSrc": "1724:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1724:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1715:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1715:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1753:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1753:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1763:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1763:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "1757:2:6",
																						"nodeType": "YulTypedName",
																						"src": "1757:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1777:7:6",
																				"nodeType": "YulAssignment",
																				"src": "1777:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1783:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1783:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "1777:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1777:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1797:5:6",
																				"nodeType": "YulLeave",
																				"src": "1797:5:6"
																			}
																		]
																	},
																	"nativeSrc": "1638:174:6",
																	"nodeType": "YulCase",
																	"src": "1638:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1643:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1643:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1557:4:6",
																"nodeType": "YulIdentifier",
																"src": "1557:4:6"
															},
															"nativeSrc": "1550:262:6",
															"nodeType": "YulSwitch",
															"src": "1550:262:6"
														},
														{
															"body": {
																"nativeSrc": "1910:114:6",
																"nodeType": "YulBlock",
																"src": "1910:114:6",
																"statements": [
																	{
																		"nativeSrc": "1924:28:6",
																		"nodeType": "YulAssignment",
																		"src": "1924:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1937:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1937:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1943:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "1943:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1933:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1933:3:6"
																			},
																			"nativeSrc": "1933:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1933:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1924:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1924:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1965:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1965:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1975:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1975:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1969:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1969:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1989:7:6",
																		"nodeType": "YulAssignment",
																		"src": "1989:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1995:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1995:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "1989:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1989:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2009:5:6",
																		"nodeType": "YulLeave",
																		"src": "2009:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1834:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1834:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1840:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1840:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1831:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1831:2:6"
																				},
																				"nativeSrc": "1831:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1831:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1848:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1848:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1858:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1858:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1845:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1845:2:6"
																				},
																				"nativeSrc": "1845:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1845:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1827:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:6"
																		},
																		"nativeSrc": "1827:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1871:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1871:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1877:3:6",
																						"nodeType": "YulLiteral",
																						"src": "1877:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1868:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1868:2:6"
																				},
																				"nativeSrc": "1868:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1868:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1886:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1886:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1896:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1896:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1883:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1883:2:6"
																				},
																				"nativeSrc": "1883:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1883:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1864:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:6"
																		},
																		"nativeSrc": "1864:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1864:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1824:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:6"
																},
																"nativeSrc": "1824:77:6",
																"nodeType": "YulFunctionCall",
																"src": "1824:77:6"
															},
															"nativeSrc": "1821:203:6",
															"nodeType": "YulIf",
															"src": "1821:203:6"
														},
														{
															"nativeSrc": "2033:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2033:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2075:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2075:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2081:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2081:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2095:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2095:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2091:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:6"
																		},
																		"nativeSrc": "2091:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2056:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:18:6"
																},
																"nativeSrc": "2056:42:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2037:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2037:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "2046:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2046:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2143:22:6",
																"nodeType": "YulBlock",
																"src": "2143:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2145:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2145:16:6"
																			},
																			"nativeSrc": "2145:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2145:18:6"
																		},
																		"nativeSrc": "2145:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2145:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "2113:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2113:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2130:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2130:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2126:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2126:3:6"
																				},
																				"nativeSrc": "2126:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2126:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "2134:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2122:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:6"
																		},
																		"nativeSrc": "2122:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2110:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2110:2:6"
																},
																"nativeSrc": "2110:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2110:32:6"
															},
															"nativeSrc": "2107:58:6",
															"nodeType": "YulIf",
															"src": "2107:58:6"
														},
														{
															"nativeSrc": "2174:29:6",
															"nodeType": "YulAssignment",
															"src": "2174:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "2187:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2187:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "2196:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2196:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2183:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:6"
																},
																"nativeSrc": "2183:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2183:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2174:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2174:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1307:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1337:4:6",
														"nodeType": "YulTypedName",
														"src": "1337:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1343:8:6",
														"nodeType": "YulTypedName",
														"src": "1343:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1356:5:6",
														"nodeType": "YulTypedName",
														"src": "1356:5:6",
														"type": ""
													}
												],
												"src": "1307:902:6"
											},
											{
												"body": {
													"nativeSrc": "2282:72:6",
													"nodeType": "YulBlock",
													"src": "2282:72:6",
													"statements": [
														{
															"nativeSrc": "2292:56:6",
															"nodeType": "YulAssignment",
															"src": "2292:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2322:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2322:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "2332:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:8:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2342:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2342:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2328:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:6"
																		},
																		"nativeSrc": "2328:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2301:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "2301:20:6"
																},
																"nativeSrc": "2301:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2301:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2292:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2292:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2214:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2253:4:6",
														"nodeType": "YulTypedName",
														"src": "2253:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2259:8:6",
														"nodeType": "YulTypedName",
														"src": "2259:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2272:5:6",
														"nodeType": "YulTypedName",
														"src": "2272:5:6",
														"type": ""
													}
												],
												"src": "2214:140:6"
											},
											{
												"body": {
													"nativeSrc": "2411:116:6",
													"nodeType": "YulBlock",
													"src": "2411:116:6",
													"statements": [
														{
															"nativeSrc": "2421:20:6",
															"nodeType": "YulAssignment",
															"src": "2421:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2436:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2436:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2439:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2439:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:6"
																},
																"nativeSrc": "2432:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2432:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2421:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2421:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2499:22:6",
																"nodeType": "YulBlock",
																"src": "2499:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2501:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2501:16:6"
																			},
																			"nativeSrc": "2501:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2501:18:6"
																		},
																		"nativeSrc": "2501:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2501:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2470:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2470:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2463:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2463:6:6"
																				},
																				"nativeSrc": "2463:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2477:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2477:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2484:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2484:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2493:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "2493:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2480:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2480:3:6"
																						},
																						"nativeSrc": "2480:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2480:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2474:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2474:2:6"
																				},
																				"nativeSrc": "2474:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2474:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2460:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2460:2:6"
																		},
																		"nativeSrc": "2460:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2460:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2453:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:6"
																},
																"nativeSrc": "2453:45:6",
																"nodeType": "YulFunctionCall",
																"src": "2453:45:6"
															},
															"nativeSrc": "2450:71:6",
															"nodeType": "YulIf",
															"src": "2450:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2359:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2390:1:6",
														"nodeType": "YulTypedName",
														"src": "2390:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2393:1:6",
														"nodeType": "YulTypedName",
														"src": "2393:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2399:7:6",
														"nodeType": "YulTypedName",
														"src": "2399:7:6",
														"type": ""
													}
												],
												"src": "2359:168:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526207a120600155348015610016575f5ffd5b5060405161085c38038061085c83398101604081905261003591610140565b338061005a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b610063816100f1565b506001600160a01b03811660808190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa1580156100ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100d0919061016d565b6100db90600a610286565b6001546100e89190610294565b600155506102ab565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610150575f5ffd5b81516001600160a01b0381168114610166575f5ffd5b9392505050565b5f6020828403121561017d575f5ffd5b815160ff81168114610166575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156101dc578085048111156101c0576101c061018d565b60018416156101ce57908102905b60019390931c9280026101a5565b935093915050565b5f826101f257506001610280565b816101fe57505f610280565b8160018114610214576002811461021e5761023a565b6001915050610280565b60ff84111561022f5761022f61018d565b50506001821b610280565b5060208310610133831016604e8410600b841016171561025d575081810a610280565b6102695f1984846101a1565b805f190482111561027c5761027c61018d565b0290505b92915050565b5f61016660ff8416836101e4565b80820281158282048414176102805761028061018d565b60805161058c6102d05f395f8181608301528181610187015261025f015261058c5ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c80638ef1e259116100585780638ef1e259146100dc5780639a3bfdf5146100ff578063f2fde38b14610110578063ffdd60f914610123575f5ffd5b80636db08f251461007e578063715018a6146100c25780638da5cb5b146100cc575b5f5ffd5b6100a57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ca610136565b005b5f546001600160a01b03166100a5565b6100ef6100ea3660046103a4565b610149565b60405190151581526020016100b9565b6001546040519081526020016100b9565b6100ca61011e3660046103a4565b6101fa565b6100ca6101313660046103d1565b610255565b61013e6102f8565b6101475f61033d565b565b6001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301525f92917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156101ce573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f291906103e8565b101592915050565b6102026102f8565b6001600160a01b038116610249576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102528161033d565b50565b61025d6102f8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102dd91906103ff565b6102e890600a610531565b6102f2908261053f565b60015550565b5f546001600160a01b03163314610147576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610240565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156103b4575f5ffd5b81356001600160a01b03811681146103ca575f5ffd5b9392505050565b5f602082840312156103e1575f5ffd5b5035919050565b5f602082840312156103f8575f5ffd5b5051919050565b5f6020828403121561040f575f5ffd5b815160ff811681146103ca575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6001815b60018411156104875780850481111561046b5761046b61041f565b600184161561047957908102905b60019390931c928002610450565b935093915050565b5f8261049d5750600161052b565b816104a957505f61052b565b81600181146104bf57600281146104c9576104e5565b600191505061052b565b60ff8411156104da576104da61041f565b50506001821b61052b565b5060208310610133831016604e8410600b8410161715610508575081810a61052b565b6105145f19848461044c565b805f19048211156105275761052761041f565b0290505b92915050565b5f6103ca60ff84168361048f565b808202811582820484141761052b5761052b61041f56fea2646970667358221220104cd8d7463f4e369b2652d471e657f8530854ac779ef9d0d47c48ecb47753b764736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH3 0x7A120 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x85C CODESIZE SUB DUP1 PUSH2 0x85C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x35 SWAP2 PUSH2 0x140 JUMP JUMPDEST CALLER DUP1 PUSH2 0x5A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63 DUP2 PUSH2 0xF1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x16D JUMP JUMPDEST PUSH2 0xDB SWAP1 PUSH1 0xA PUSH2 0x286 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 SSTORE POP PUSH2 0x2AB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1DC JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1C0 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1CE JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1A5 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1F2 JUMPI POP PUSH1 0x1 PUSH2 0x280 JUMP JUMPDEST DUP2 PUSH2 0x1FE JUMPI POP PUSH0 PUSH2 0x280 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x214 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x21E JUMPI PUSH2 0x23A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x280 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x22F JUMPI PUSH2 0x22F PUSH2 0x18D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x280 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x25D JUMPI POP DUP2 DUP2 EXP PUSH2 0x280 JUMP JUMPDEST PUSH2 0x269 PUSH0 NOT DUP5 DUP5 PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27C PUSH2 0x18D JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x166 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1E4 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x280 JUMPI PUSH2 0x280 PUSH2 0x18D JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x58C PUSH2 0x2D0 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x83 ADD MSTORE DUP2 DUP2 PUSH2 0x187 ADD MSTORE PUSH2 0x25F ADD MSTORE PUSH2 0x58C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EF1E259 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8EF1E259 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x9A3BFDF5 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xFFDD60F9 EQ PUSH2 0x123 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xCA PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x147 PUSH0 PUSH2 0x33D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x202 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x33D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x2E8 SWAP1 PUSH1 0xA PUSH2 0x531 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 DUP3 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x240 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x487 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x479 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x450 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x49D JUMPI POP PUSH1 0x1 PUSH2 0x52B JUMP JUMPDEST DUP2 PUSH2 0x4A9 JUMPI POP PUSH0 PUSH2 0x52B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4BF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4C9 JUMPI PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x52B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4DA PUSH2 0x41F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x52B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x508 JUMPI POP DUP2 DUP2 EXP PUSH2 0x52B JUMP JUMPDEST PUSH2 0x514 PUSH0 NOT DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x527 PUSH2 0x41F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3CA PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x48F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x52B JUMPI PUSH2 0x52B PUSH2 0x41F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x4C 0xD8 0xD7 CHAINID EXTCODEHASH 0x4E CALLDATASIZE SWAP12 0x26 MSTORE 0xD4 PUSH18 0xE657F8530854AC779EF9D0D47C48ECB47753 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "256:752:3:-:0;;;378:6;347:37;;393:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:2;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:6;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;460:14:3;::::1;;::::0;;;523:33:::1;::::0;;-1:-1:-1;;;523:33:3;;;;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;460:14;523:33:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;519:37;::::0;:2:::1;:37;:::i;:::-;503:15;;:53;;;;:::i;:::-;485:15;:71:::0;-1:-1:-1;256:752:3;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;517:273::-;585:6;638:2;626:9;617:7;613:23;609:32;606:52;;;654:1;651;644:12;606:52;686:9;680:16;736:4;729:5;725:16;718:5;715:27;705:55;;756:1;753;746:12;795:127;856:10;851:3;847:20;844:1;837:31;887:4;884:1;877:15;911:4;908:1;901:15;927:375;1015:1;1033:5;1047:249;1068:1;1058:8;1055:15;1047:249;;;1118:4;1113:3;1109:14;1103:4;1100:24;1097:50;;;1127:18;;:::i;:::-;1177:1;1167:8;1163:16;1160:49;;;1191:16;;;;1160:49;1274:1;1270:16;;;;;1230:15;;1047:249;;;927:375;;;;;;:::o;1307:902::-;1356:5;1386:8;1376:80;;-1:-1:-1;1427:1:6;1441:5;;1376:80;1475:4;1465:76;;-1:-1:-1;1512:1:6;1526:5;;1465:76;1557:4;1575:1;1570:59;;;;1643:1;1638:174;;;;1550:262;;1570:59;1600:1;1591:10;;1614:5;;;1638:174;1675:3;1665:8;1662:17;1659:43;;;1682:18;;:::i;:::-;-1:-1:-1;;1738:1:6;1724:16;;1797:5;;1550:262;;1896:2;1886:8;1883:16;1877:3;1871:4;1868:13;1864:36;1858:2;1848:8;1845:16;1840:2;1834:4;1831:12;1827:35;1824:77;1821:203;;;-1:-1:-1;1933:19:6;;;2009:5;;1821:203;2056:42;-1:-1:-1;;2081:8:6;2075:4;2056:42;:::i;:::-;2134:6;2130:1;2126:6;2122:19;2113:7;2110:32;2107:58;;;2145:18;;:::i;:::-;2183:20;;-1:-1:-1;1307:902:6;;;;;:::o;2214:140::-;2272:5;2301:47;2342:4;2332:8;2328:19;2322:4;2301:47;:::i;2359:168::-;2432:9;;;2463;;2480:15;;;2474:22;;2460:37;2450:71;;2501:18;;:::i;2359:168::-;256:752:3;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_267": {
									"entryPoint": null,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 760,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 829,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isWhale_313": {
									"entryPoint": 329,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 310,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setWhaleThreshold_333": {
									"entryPoint": 597,
									"id": 333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 506,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whaleThreshold_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3376:6",
										"nodeType": "YulBlock",
										"src": "0:3376:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:125:6",
													"nodeType": "YulBlock",
													"src": "115:125:6",
													"statements": [
														{
															"nativeSrc": "125:26:6",
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nativeSrc": "133:18:6",
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "190:42:6",
																				"nodeType": "YulLiteral",
																				"src": "190:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nativeSrc": "178:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "178:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nativeSrc": "160:74:6",
																"nodeType": "YulFunctionCall",
																"src": "160:74:6"
															},
															"nativeSrc": "160:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "160:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:6",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:6",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:6",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:226:6"
											},
											{
												"body": {
													"nativeSrc": "315:239:6",
													"nodeType": "YulBlock",
													"src": "315:239:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "361:16:6",
																"nodeType": "YulBlock",
																"src": "361:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "370:1:6",
																					"nodeType": "YulLiteral",
																					"src": "370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "373:1:6",
																					"nodeType": "YulLiteral",
																					"src": "373:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "363:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:6"
																			},
																			"nativeSrc": "363:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "363:12:6"
																		},
																		"nativeSrc": "363:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "363:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "336:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "336:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "345:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "345:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "332:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "332:3:6"
																		},
																		"nativeSrc": "332:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "332:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "357:2:6",
																		"nodeType": "YulLiteral",
																		"src": "357:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "328:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:6"
																},
																"nativeSrc": "328:32:6",
																"nodeType": "YulFunctionCall",
																"src": "328:32:6"
															},
															"nativeSrc": "325:52:6",
															"nodeType": "YulIf",
															"src": "325:52:6"
														},
														{
															"nativeSrc": "386:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "386:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "412:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "412:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "399:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:12:6"
																},
																"nativeSrc": "399:23:6",
																"nodeType": "YulFunctionCall",
																"src": "399:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "390:5:6",
																	"nodeType": "YulTypedName",
																	"src": "390:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "508:16:6",
																"nodeType": "YulBlock",
																"src": "508:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "517:1:6",
																					"nodeType": "YulLiteral",
																					"src": "517:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "520:1:6",
																					"nodeType": "YulLiteral",
																					"src": "520:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:6"
																			},
																			"nativeSrc": "510:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "510:12:6"
																		},
																		"nativeSrc": "510:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "510:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "444:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "455:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "455:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "462:42:6",
																						"nodeType": "YulLiteral",
																						"src": "462:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "451:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:6"
																				},
																				"nativeSrc": "451:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "451:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "441:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "441:2:6"
																		},
																		"nativeSrc": "441:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "441:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:6"
																},
																"nativeSrc": "434:73:6",
																"nodeType": "YulFunctionCall",
																"src": "434:73:6"
															},
															"nativeSrc": "431:93:6",
															"nodeType": "YulIf",
															"src": "431:93:6"
														},
														{
															"nativeSrc": "533:15:6",
															"nodeType": "YulAssignment",
															"src": "533:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "543:5:6",
																"nodeType": "YulIdentifier",
																"src": "543:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "245:309:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "281:9:6",
														"nodeType": "YulTypedName",
														"src": "281:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "292:7:6",
														"nodeType": "YulTypedName",
														"src": "292:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "304:6:6",
														"nodeType": "YulTypedName",
														"src": "304:6:6",
														"type": ""
													}
												],
												"src": "245:309:6"
											},
											{
												"body": {
													"nativeSrc": "654:92:6",
													"nodeType": "YulBlock",
													"src": "654:92:6",
													"statements": [
														{
															"nativeSrc": "664:26:6",
															"nodeType": "YulAssignment",
															"src": "664:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "676:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "687:2:6",
																		"nodeType": "YulLiteral",
																		"src": "687:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "672:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "672:3:6"
																},
																"nativeSrc": "672:18:6",
																"nodeType": "YulFunctionCall",
																"src": "672:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "664:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "664:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "706:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "731:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "731:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "724:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "724:6:6"
																				},
																				"nativeSrc": "724:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "724:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "717:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "717:6:6"
																		},
																		"nativeSrc": "717:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "717:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "699:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:6"
																},
																"nativeSrc": "699:41:6",
																"nodeType": "YulFunctionCall",
																"src": "699:41:6"
															},
															"nativeSrc": "699:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "699:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "559:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "623:9:6",
														"nodeType": "YulTypedName",
														"src": "623:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "634:6:6",
														"nodeType": "YulTypedName",
														"src": "634:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "645:4:6",
														"nodeType": "YulTypedName",
														"src": "645:4:6",
														"type": ""
													}
												],
												"src": "559:187:6"
											},
											{
												"body": {
													"nativeSrc": "852:76:6",
													"nodeType": "YulBlock",
													"src": "852:76:6",
													"statements": [
														{
															"nativeSrc": "862:26:6",
															"nodeType": "YulAssignment",
															"src": "862:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "874:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "874:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "885:2:6",
																		"nodeType": "YulLiteral",
																		"src": "885:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "870:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "870:3:6"
																},
																"nativeSrc": "870:18:6",
																"nodeType": "YulFunctionCall",
																"src": "870:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "862:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "862:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "904:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "904:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "915:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "915:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "897:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:6"
																},
																"nativeSrc": "897:25:6",
																"nodeType": "YulFunctionCall",
																"src": "897:25:6"
															},
															"nativeSrc": "897:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "897:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "751:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "821:9:6",
														"nodeType": "YulTypedName",
														"src": "821:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "832:6:6",
														"nodeType": "YulTypedName",
														"src": "832:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "843:4:6",
														"nodeType": "YulTypedName",
														"src": "843:4:6",
														"type": ""
													}
												],
												"src": "751:177:6"
											},
											{
												"body": {
													"nativeSrc": "1003:110:6",
													"nodeType": "YulBlock",
													"src": "1003:110:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1049:16:6",
																"nodeType": "YulBlock",
																"src": "1049:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1058:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1051:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1051:6:6"
																			},
																			"nativeSrc": "1051:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1051:12:6"
																		},
																		"nativeSrc": "1051:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1051:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1024:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1024:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1020:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1020:3:6"
																		},
																		"nativeSrc": "1020:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1020:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1045:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1045:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1016:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1016:3:6"
																},
																"nativeSrc": "1016:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1016:32:6"
															},
															"nativeSrc": "1013:52:6",
															"nodeType": "YulIf",
															"src": "1013:52:6"
														},
														{
															"nativeSrc": "1074:33:6",
															"nodeType": "YulAssignment",
															"src": "1074:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1097:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1097:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1084:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1084:12:6"
																},
																"nativeSrc": "1084:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1084:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1074:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "933:180:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "969:9:6",
														"nodeType": "YulTypedName",
														"src": "969:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "980:7:6",
														"nodeType": "YulTypedName",
														"src": "980:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "992:6:6",
														"nodeType": "YulTypedName",
														"src": "992:6:6",
														"type": ""
													}
												],
												"src": "933:180:6"
											},
											{
												"body": {
													"nativeSrc": "1199:103:6",
													"nodeType": "YulBlock",
													"src": "1199:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1245:16:6",
																"nodeType": "YulBlock",
																"src": "1245:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1254:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1254:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1257:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1257:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1247:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1247:6:6"
																			},
																			"nativeSrc": "1247:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1247:12:6"
																		},
																		"nativeSrc": "1247:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1247:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1220:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1220:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1229:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1229:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1216:3:6"
																		},
																		"nativeSrc": "1216:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1216:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1241:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1241:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1212:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:3:6"
																},
																"nativeSrc": "1212:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1212:32:6"
															},
															"nativeSrc": "1209:52:6",
															"nodeType": "YulIf",
															"src": "1209:52:6"
														},
														{
															"nativeSrc": "1270:26:6",
															"nodeType": "YulAssignment",
															"src": "1270:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1286:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1286:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1280:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1280:5:6"
																},
																"nativeSrc": "1280:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1280:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1118:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1165:9:6",
														"nodeType": "YulTypedName",
														"src": "1165:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1176:7:6",
														"nodeType": "YulTypedName",
														"src": "1176:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1188:6:6",
														"nodeType": "YulTypedName",
														"src": "1188:6:6",
														"type": ""
													}
												],
												"src": "1118:184:6"
											},
											{
												"body": {
													"nativeSrc": "1386:194:6",
													"nodeType": "YulBlock",
													"src": "1386:194:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1432:16:6",
																"nodeType": "YulBlock",
																"src": "1432:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1441:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1441:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1444:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1444:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1434:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1434:6:6"
																			},
																			"nativeSrc": "1434:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1434:12:6"
																		},
																		"nativeSrc": "1434:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1434:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1407:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1407:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1416:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1416:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1403:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:6"
																		},
																		"nativeSrc": "1403:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1403:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1428:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1428:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:6"
																},
																"nativeSrc": "1399:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1399:32:6"
															},
															"nativeSrc": "1396:52:6",
															"nodeType": "YulIf",
															"src": "1396:52:6"
														},
														{
															"nativeSrc": "1457:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1476:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1476:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1470:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:6"
																},
																"nativeSrc": "1470:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1470:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1461:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1461:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1534:16:6",
																"nodeType": "YulBlock",
																"src": "1534:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1543:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1543:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1546:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1546:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1536:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1536:6:6"
																			},
																			"nativeSrc": "1536:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1536:12:6"
																		},
																		"nativeSrc": "1536:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1536:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1508:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1519:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1519:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1526:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1526:4:6",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1515:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1515:3:6"
																				},
																				"nativeSrc": "1515:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1515:16:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1505:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1505:2:6"
																		},
																		"nativeSrc": "1505:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1505:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1498:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1498:6:6"
																},
																"nativeSrc": "1498:35:6",
																"nodeType": "YulFunctionCall",
																"src": "1498:35:6"
															},
															"nativeSrc": "1495:55:6",
															"nodeType": "YulIf",
															"src": "1495:55:6"
														},
														{
															"nativeSrc": "1559:15:6",
															"nodeType": "YulAssignment",
															"src": "1559:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1569:5:6",
																"nodeType": "YulIdentifier",
																"src": "1569:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1559:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1559:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "1307:273:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1352:9:6",
														"nodeType": "YulTypedName",
														"src": "1352:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1363:7:6",
														"nodeType": "YulTypedName",
														"src": "1363:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1375:6:6",
														"nodeType": "YulTypedName",
														"src": "1375:6:6",
														"type": ""
													}
												],
												"src": "1307:273:6"
											},
											{
												"body": {
													"nativeSrc": "1617:152:6",
													"nodeType": "YulBlock",
													"src": "1617:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1634:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1634:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1637:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1637:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:6"
																},
																"nativeSrc": "1627:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1627:88:6"
															},
															"nativeSrc": "1627:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1627:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1731:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1731:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1734:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1734:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:6"
																},
																"nativeSrc": "1724:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1724:15:6"
															},
															"nativeSrc": "1724:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1724:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1755:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1755:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1758:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1758:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1748:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1748:6:6"
																},
																"nativeSrc": "1748:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1748:15:6"
															},
															"nativeSrc": "1748:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1748:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1585:184:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1585:184:6"
											},
											{
												"body": {
													"nativeSrc": "1843:306:6",
													"nodeType": "YulBlock",
													"src": "1843:306:6",
													"statements": [
														{
															"nativeSrc": "1853:10:6",
															"nodeType": "YulAssignment",
															"src": "1853:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1862:1:6",
																"nodeType": "YulLiteral",
																"src": "1862:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1853:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1853:5:6"
																}
															]
														},
														{
															"nativeSrc": "1872:13:6",
															"nodeType": "YulAssignment",
															"src": "1872:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "1880:5:6",
																"nodeType": "YulIdentifier",
																"src": "1880:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "1872:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1872:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1930:213:6",
																"nodeType": "YulBlock",
																"src": "1930:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "1972:22:6",
																			"nodeType": "YulBlock",
																			"src": "1972:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "1974:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "1974:16:6"
																						},
																						"nativeSrc": "1974:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1974:18:6"
																					},
																					"nativeSrc": "1974:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1974:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1950:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1950:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "1960:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1960:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "1965:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1965:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "1956:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1956:3:6"
																					},
																					"nativeSrc": "1956:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1956:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1947:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1947:2:6"
																			},
																			"nativeSrc": "1947:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1947:24:6"
																		},
																		"nativeSrc": "1944:50:6",
																		"nodeType": "YulIf",
																		"src": "1944:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "2027:29:6",
																			"nodeType": "YulBlock",
																			"src": "2027:29:6",
																			"statements": [
																				{
																					"nativeSrc": "2029:25:6",
																					"nodeType": "YulAssignment",
																					"src": "2029:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "2042:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2042:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "2049:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "2049:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "2038:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2038:3:6"
																						},
																						"nativeSrc": "2038:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2038:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "2029:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2029:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "2014:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2014:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2010:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2010:3:6"
																			},
																			"nativeSrc": "2010:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2010:16:6"
																		},
																		"nativeSrc": "2007:49:6",
																		"nodeType": "YulIf",
																		"src": "2007:49:6"
																	},
																	{
																		"nativeSrc": "2069:23:6",
																		"nodeType": "YulAssignment",
																		"src": "2069:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2081:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2081:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "2087:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2087:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "2077:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:3:6"
																			},
																			"nativeSrc": "2077:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2077:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "2069:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2069:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2105:28:6",
																		"nodeType": "YulAssignment",
																		"src": "2105:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2121:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2121:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "2124:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2124:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "2117:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2117:3:6"
																			},
																			"nativeSrc": "2117:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2117:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "2105:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2105:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1905:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1905:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1915:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1915:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1902:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1902:2:6"
																},
																"nativeSrc": "1902:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1902:15:6"
															},
															"nativeSrc": "1894:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1918:3:6",
																"nodeType": "YulBlock",
																"src": "1918:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "1898:3:6",
																"nodeType": "YulBlock",
																"src": "1898:3:6",
																"statements": []
															},
															"src": "1894:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "1774:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "1802:5:6",
														"nodeType": "YulTypedName",
														"src": "1802:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1809:8:6",
														"nodeType": "YulTypedName",
														"src": "1809:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1819:3:6",
														"nodeType": "YulTypedName",
														"src": "1819:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1827:5:6",
														"nodeType": "YulTypedName",
														"src": "1827:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "1834:4:6",
														"nodeType": "YulTypedName",
														"src": "1834:4:6",
														"type": ""
													}
												],
												"src": "1774:375:6"
											},
											{
												"body": {
													"nativeSrc": "2213:843:6",
													"nodeType": "YulBlock",
													"src": "2213:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2251:52:6",
																"nodeType": "YulBlock",
																"src": "2251:52:6",
																"statements": [
																	{
																		"nativeSrc": "2265:10:6",
																		"nodeType": "YulAssignment",
																		"src": "2265:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2274:1:6",
																			"nodeType": "YulLiteral",
																			"src": "2274:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "2265:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2265:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2288:5:6",
																		"nodeType": "YulLeave",
																		"src": "2288:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2233:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2233:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2226:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:6"
																},
																"nativeSrc": "2226:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2226:16:6"
															},
															"nativeSrc": "2223:80:6",
															"nodeType": "YulIf",
															"src": "2223:80:6"
														},
														{
															"body": {
																"nativeSrc": "2336:52:6",
																"nodeType": "YulBlock",
																"src": "2336:52:6",
																"statements": [
																	{
																		"nativeSrc": "2350:10:6",
																		"nodeType": "YulAssignment",
																		"src": "2350:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2359:1:6",
																			"nodeType": "YulLiteral",
																			"src": "2359:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "2350:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2350:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2373:5:6",
																		"nodeType": "YulLeave",
																		"src": "2373:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2322:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2322:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:6"
																},
																"nativeSrc": "2315:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2315:12:6"
															},
															"nativeSrc": "2312:76:6",
															"nodeType": "YulIf",
															"src": "2312:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2424:52:6",
																		"nodeType": "YulBlock",
																		"src": "2424:52:6",
																		"statements": [
																			{
																				"nativeSrc": "2438:10:6",
																				"nodeType": "YulAssignment",
																				"src": "2438:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2447:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "2438:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2438:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "2461:5:6",
																				"nodeType": "YulLeave",
																				"src": "2461:5:6"
																			}
																		]
																	},
																	"nativeSrc": "2417:59:6",
																	"nodeType": "YulCase",
																	"src": "2417:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2492:167:6",
																		"nodeType": "YulBlock",
																		"src": "2492:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "2527:22:6",
																					"nodeType": "YulBlock",
																					"src": "2527:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "2529:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "2529:16:6"
																								},
																								"nativeSrc": "2529:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2529:18:6"
																							},
																							"nativeSrc": "2529:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2529:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "2512:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "2512:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2522:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2522:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "2509:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2509:2:6"
																					},
																					"nativeSrc": "2509:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2509:17:6"
																				},
																				"nativeSrc": "2506:43:6",
																				"nodeType": "YulIf",
																				"src": "2506:43:6"
																			},
																			{
																				"nativeSrc": "2562:25:6",
																				"nodeType": "YulAssignment",
																				"src": "2562:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "2575:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "2575:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2585:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2585:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2571:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2571:3:6"
																					},
																					"nativeSrc": "2571:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2571:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "2562:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2562:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "2600:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2600:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2610:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2610:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "2604:2:6",
																						"nodeType": "YulTypedName",
																						"src": "2604:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2624:7:6",
																				"nodeType": "YulAssignment",
																				"src": "2624:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2630:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2630:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "2624:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2624:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "2644:5:6",
																				"nodeType": "YulLeave",
																				"src": "2644:5:6"
																			}
																		]
																	},
																	"nativeSrc": "2485:174:6",
																	"nodeType": "YulCase",
																	"src": "2485:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2490:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "2404:4:6",
																"nodeType": "YulIdentifier",
																"src": "2404:4:6"
															},
															"nativeSrc": "2397:262:6",
															"nodeType": "YulSwitch",
															"src": "2397:262:6"
														},
														{
															"body": {
																"nativeSrc": "2757:114:6",
																"nodeType": "YulBlock",
																"src": "2757:114:6",
																"statements": [
																	{
																		"nativeSrc": "2771:28:6",
																		"nodeType": "YulAssignment",
																		"src": "2771:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2784:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2784:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "2790:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2790:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "2780:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2780:3:6"
																			},
																			"nativeSrc": "2780:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2780:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "2771:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2771:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2812:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2812:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2822:1:6",
																			"nodeType": "YulLiteral",
																			"src": "2822:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "2816:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2816:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2836:7:6",
																		"nodeType": "YulAssignment",
																		"src": "2836:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2842:1:6",
																			"nodeType": "YulLiteral",
																			"src": "2842:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "2836:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2836:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2856:5:6",
																		"nodeType": "YulLeave",
																		"src": "2856:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "2681:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2681:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2687:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2687:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2678:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2678:2:6"
																				},
																				"nativeSrc": "2678:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "2695:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "2695:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2705:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2705:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2692:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2692:2:6"
																				},
																				"nativeSrc": "2692:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2692:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2674:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:6"
																		},
																		"nativeSrc": "2674:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2674:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "2718:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2718:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2724:3:6",
																						"nodeType": "YulLiteral",
																						"src": "2724:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2715:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2715:2:6"
																				},
																				"nativeSrc": "2715:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2715:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "2733:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2743:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2743:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2730:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2730:2:6"
																				},
																				"nativeSrc": "2730:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2730:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2711:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2711:3:6"
																		},
																		"nativeSrc": "2711:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2671:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2671:2:6"
																},
																"nativeSrc": "2671:77:6",
																"nodeType": "YulFunctionCall",
																"src": "2671:77:6"
															},
															"nativeSrc": "2668:203:6",
															"nodeType": "YulIf",
															"src": "2668:203:6"
														},
														{
															"nativeSrc": "2880:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2880:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2922:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2922:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2928:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2928:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2942:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2942:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2938:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:6"
																		},
																		"nativeSrc": "2938:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2938:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2903:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2903:18:6"
																},
																"nativeSrc": "2903:42:6",
																"nodeType": "YulFunctionCall",
																"src": "2903:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2884:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2884:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "2893:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2893:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2990:22:6",
																"nodeType": "YulBlock",
																"src": "2990:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2992:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2992:16:6"
																			},
																			"nativeSrc": "2992:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2992:18:6"
																		},
																		"nativeSrc": "2992:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2992:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "2960:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2960:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2977:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2977:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2973:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2973:3:6"
																				},
																				"nativeSrc": "2973:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2973:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "2981:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2969:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:6"
																		},
																		"nativeSrc": "2969:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2969:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2957:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:2:6"
																},
																"nativeSrc": "2957:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2957:32:6"
															},
															"nativeSrc": "2954:58:6",
															"nodeType": "YulIf",
															"src": "2954:58:6"
														},
														{
															"nativeSrc": "3021:29:6",
															"nodeType": "YulAssignment",
															"src": "3021:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3034:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "3043:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3043:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3030:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3030:3:6"
																},
																"nativeSrc": "3030:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3030:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3021:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3021:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "2154:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2184:4:6",
														"nodeType": "YulTypedName",
														"src": "2184:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2190:8:6",
														"nodeType": "YulTypedName",
														"src": "2190:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2203:5:6",
														"nodeType": "YulTypedName",
														"src": "2203:5:6",
														"type": ""
													}
												],
												"src": "2154:902:6"
											},
											{
												"body": {
													"nativeSrc": "3129:72:6",
													"nodeType": "YulBlock",
													"src": "3129:72:6",
													"statements": [
														{
															"nativeSrc": "3139:56:6",
															"nodeType": "YulAssignment",
															"src": "3139:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3169:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3179:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3179:8:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3189:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3189:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3175:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:6"
																		},
																		"nativeSrc": "3175:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3175:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "3148:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "3148:20:6"
																},
																"nativeSrc": "3148:47:6",
																"nodeType": "YulFunctionCall",
																"src": "3148:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3139:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "3061:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3100:4:6",
														"nodeType": "YulTypedName",
														"src": "3100:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3106:8:6",
														"nodeType": "YulTypedName",
														"src": "3106:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3119:5:6",
														"nodeType": "YulTypedName",
														"src": "3119:5:6",
														"type": ""
													}
												],
												"src": "3061:140:6"
											},
											{
												"body": {
													"nativeSrc": "3258:116:6",
													"nodeType": "YulBlock",
													"src": "3258:116:6",
													"statements": [
														{
															"nativeSrc": "3268:20:6",
															"nodeType": "YulAssignment",
															"src": "3268:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3283:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3283:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3286:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3286:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3279:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:6"
																},
																"nativeSrc": "3279:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3279:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3268:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3268:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3346:22:6",
																"nodeType": "YulBlock",
																"src": "3346:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3348:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3348:16:6"
																			},
																			"nativeSrc": "3348:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3348:18:6"
																		},
																		"nativeSrc": "3348:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3348:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3317:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3317:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3310:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3310:6:6"
																				},
																				"nativeSrc": "3310:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3310:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3324:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3324:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3331:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "3331:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3340:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "3340:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3327:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3327:3:6"
																						},
																						"nativeSrc": "3327:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3327:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3321:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3321:2:6"
																				},
																				"nativeSrc": "3321:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3321:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3307:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3307:2:6"
																		},
																		"nativeSrc": "3307:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3307:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3300:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:6"
																},
																"nativeSrc": "3300:45:6",
																"nodeType": "YulFunctionCall",
																"src": "3300:45:6"
															},
															"nativeSrc": "3297:71:6",
															"nodeType": "YulIf",
															"src": "3297:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3206:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3237:1:6",
														"nodeType": "YulTypedName",
														"src": "3237:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3240:1:6",
														"nodeType": "YulTypedName",
														"src": "3240:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3246:7:6",
														"nodeType": "YulTypedName",
														"src": "3246:7:6",
														"type": ""
													}
												],
												"src": "3206:168:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"267": [
									{
										"length": 32,
										"start": 131
									},
									{
										"length": 32,
										"start": 391
									},
									{
										"length": 32,
										"start": 607
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007a575f3560e01c80638ef1e259116100585780638ef1e259146100dc5780639a3bfdf5146100ff578063f2fde38b14610110578063ffdd60f914610123575f5ffd5b80636db08f251461007e578063715018a6146100c25780638da5cb5b146100cc575b5f5ffd5b6100a57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ca610136565b005b5f546001600160a01b03166100a5565b6100ef6100ea3660046103a4565b610149565b60405190151581526020016100b9565b6001546040519081526020016100b9565b6100ca61011e3660046103a4565b6101fa565b6100ca6101313660046103d1565b610255565b61013e6102f8565b6101475f61033d565b565b6001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301525f92917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156101ce573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f291906103e8565b101592915050565b6102026102f8565b6001600160a01b038116610249576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b6102528161033d565b50565b61025d6102f8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102dd91906103ff565b6102e890600a610531565b6102f2908261053f565b60015550565b5f546001600160a01b03163314610147576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610240565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156103b4575f5ffd5b81356001600160a01b03811681146103ca575f5ffd5b9392505050565b5f602082840312156103e1575f5ffd5b5035919050565b5f602082840312156103f8575f5ffd5b5051919050565b5f6020828403121561040f575f5ffd5b815160ff811681146103ca575f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b6001815b60018411156104875780850481111561046b5761046b61041f565b600184161561047957908102905b60019390931c928002610450565b935093915050565b5f8261049d5750600161052b565b816104a957505f61052b565b81600181146104bf57600281146104c9576104e5565b600191505061052b565b60ff8411156104da576104da61041f565b50506001821b61052b565b5060208310610133831016604e8410600b8410161715610508575081810a61052b565b6105145f19848461044c565b805f19048211156105275761052761041f565b0290505b92915050565b5f6103ca60ff84168361048f565b808202811582820484141761052b5761052b61041f56fea2646970667358221220104cd8d7463f4e369b2652d471e657f8530854ac779ef9d0d47c48ecb47753b764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EF1E259 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8EF1E259 EQ PUSH2 0xDC JUMPI DUP1 PUSH4 0x9A3BFDF5 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xFFDD60F9 EQ PUSH2 0x123 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5 JUMP JUMPDEST PUSH2 0xEF PUSH2 0xEA CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH2 0xCA PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x147 PUSH0 PUSH2 0x33D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH0 SWAP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x3E8 JUMP JUMPDEST LT ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x202 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x249 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x252 DUP2 PUSH2 0x33D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D PUSH2 0x2F8 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x2E8 SWAP1 PUSH1 0xA PUSH2 0x531 JUMP JUMPDEST PUSH2 0x2F2 SWAP1 DUP3 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x240 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x487 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x46B JUMPI PUSH2 0x46B PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x479 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x450 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x49D JUMPI POP PUSH1 0x1 PUSH2 0x52B JUMP JUMPDEST DUP2 PUSH2 0x4A9 JUMPI POP PUSH0 PUSH2 0x52B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4BF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4C9 JUMPI PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x52B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4DA JUMPI PUSH2 0x4DA PUSH2 0x41F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x52B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x508 JUMPI POP DUP2 DUP2 EXP PUSH2 0x52B JUMP JUMPDEST PUSH2 0x514 PUSH0 NOT DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x527 PUSH2 0x41F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3CA PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x48F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x52B JUMPI PUSH2 0x52B PUSH2 0x41F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x4C 0xD8 0xD7 CHAINID EXTCODEHASH 0x4E CALLDATASIZE SWAP12 0x26 MSTORE 0xD4 PUSH18 0xE657F8530854AC779EF9D0D47C48ECB47753 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "256:752:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:30;;;;;;;;-1:-1:-1;;;;;178:55:6;;;160:74;;148:2;133:18;310:30:3;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;572:155:3;;;;;;:::i;:::-;;:::i;:::-;;;724:14:6;;717:22;699:41;;687:2;672:18;572:155:3;559:187:6;902:101:3;980:15;;902:101;;897:25:6;;;885:2;870:18;902:101:3;751:177:6;2543:215:0;;;;;;:::i;:::-;;:::i;735:159:3:-;;;;;;:::i;:::-;;:::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;572:155:3:-;704:15;;663:37;;;;;-1:-1:-1;;;;;178:55:6;;;663:37:3;;;160:74:6;-1:-1:-1;;704:15:3;670:5;663:23;;;;;;133:18:6;;663:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;572:155;-1:-1:-1;;572:155:3:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;160:74:6::0;133:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;735:159:3:-;1531:13:0;:11;:13::i;:::-;869:5:3::1;-1:-1:-1::0;;;;;853:31:3::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:37;::::0;:2:::1;:37;:::i;:::-;835:51;::::0;:13;:51:::1;:::i;:::-;817:15;:69:::0;-1:-1:-1;735:159:3:o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;;;;735:10:2;1901:40:0;;;160:74:6;133:18;;1901:40:0;14:226:6;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;245:309:6:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;-1:-1:-1;;;;;455:5:6;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:6:o;933:180::-;992:6;1045:2;1033:9;1024:7;1020:23;1016:32;1013:52;;;1061:1;1058;1051:12;1013:52;-1:-1:-1;1084:23:6;;933:180;-1:-1:-1;933:180:6:o;1118:184::-;1188:6;1241:2;1229:9;1220:7;1216:23;1212:32;1209:52;;;1257:1;1254;1247:12;1209:52;-1:-1:-1;1280:16:6;;1118:184;-1:-1:-1;1118:184:6:o;1307:273::-;1375:6;1428:2;1416:9;1407:7;1403:23;1399:32;1396:52;;;1444:1;1441;1434:12;1396:52;1476:9;1470:16;1526:4;1519:5;1515:16;1508:5;1505:27;1495:55;;1546:1;1543;1536:12;1585:184;1637:77;1634:1;1627:88;1734:4;1731:1;1724:15;1758:4;1755:1;1748:15;1774:375;1862:1;1880:5;1894:249;1915:1;1905:8;1902:15;1894:249;;;1965:4;1960:3;1956:14;1950:4;1947:24;1944:50;;;1974:18;;:::i;:::-;2024:1;2014:8;2010:16;2007:49;;;2038:16;;;;2007:49;2121:1;2117:16;;;;;2077:15;;1894:249;;;1774:375;;;;;;:::o;2154:902::-;2203:5;2233:8;2223:80;;-1:-1:-1;2274:1:6;2288:5;;2223:80;2322:4;2312:76;;-1:-1:-1;2359:1:6;2373:5;;2312:76;2404:4;2422:1;2417:59;;;;2490:1;2485:174;;;;2397:262;;2417:59;2447:1;2438:10;;2461:5;;;2485:174;2522:3;2512:8;2509:17;2506:43;;;2529:18;;:::i;:::-;-1:-1:-1;;2585:1:6;2571:16;;2644:5;;2397:262;;2743:2;2733:8;2730:16;2724:3;2718:4;2715:13;2711:36;2705:2;2695:8;2692:16;2687:2;2681:4;2678:12;2674:35;2671:77;2668:203;;;-1:-1:-1;2780:19:6;;;2856:5;;2668:203;2903:42;-1:-1:-1;;2928:8:6;2922:4;2903:42;:::i;:::-;2981:6;2977:1;2973:6;2969:19;2960:7;2957:32;2954:58;;;2992:18;;:::i;:::-;3030:20;;-1:-1:-1;2154:902:6;;;;;:::o;3061:140::-;3119:5;3148:47;3189:4;3179:8;3175:19;3169:4;3148:47;:::i;3206:168::-;3279:9;;;3310;;3327:15;;;3321:22;;3307:37;3297:71;;3348:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "284000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"isWhale(address)": "infinite",
								"owner()": "2363",
								"renounceOwnership()": "infinite",
								"setWhaleThreshold(uint256)": "infinite",
								"transferOwnership(address)": "28323",
								"whaleThreshold()": "2301"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 378,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "7A120"
								},
								{
									"begin": 347,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 384,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 393,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 460,
									"end": 474,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 460,
									"end": 474,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "313CE567"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "313CE567"
								},
								{
									"begin": 523,
									"end": 554,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 523,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 519,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 521,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 518,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 503,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 485,
									"end": 500,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 556,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 517,
									"end": 790,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 517,
									"end": 790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 585,
									"end": 591,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 640,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 626,
									"end": 635,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 617,
									"end": 624,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 613,
									"end": 636,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 609,
									"end": 641,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 606,
									"end": 658,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 606,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 606,
									"end": 658,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 654,
									"end": 655,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 652,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 656,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 606,
									"end": 658,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 606,
									"end": 658,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 686,
									"end": 695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 680,
									"end": 696,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 740,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 729,
									"end": 734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 725,
									"end": 741,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 718,
									"end": 723,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 715,
									"end": 742,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 705,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 705,
									"end": 760,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 756,
									"end": 757,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 754,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 758,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 795,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 795,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 856,
									"end": 866,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 851,
									"end": 854,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 847,
									"end": 867,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 844,
									"end": 845,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 837,
									"end": 868,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 887,
									"end": 891,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 884,
									"end": 885,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 877,
									"end": 892,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 911,
									"end": 915,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 908,
									"end": 909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 901,
									"end": 916,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1015,
									"end": 1016,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1033,
									"end": 1038,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1068,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1066,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1055,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1122,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1116,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1123,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1107,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1124,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1147,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1097,
									"end": 1147,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1127,
									"end": 1145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1127,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1177,
									"end": 1178,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1167,
									"end": 1175,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1179,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1209,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1160,
									"end": 1209,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1207,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1207,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1207,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1191,
									"end": 1207,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1209,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1160,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1274,
									"end": 1275,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1286,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1245,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1230,
									"end": 1245,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1047,
									"end": 1296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 927,
									"end": 1302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1361,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1386,
									"end": 1394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1376,
									"end": 1456,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1427,
									"end": 1428,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1441,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1441,
									"end": 1446,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1456,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1376,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1479,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1465,
									"end": 1541,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1526,
									"end": 1531,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1541,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1465,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1557,
									"end": 1561,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1576,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1644,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1550,
									"end": 1812,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1570,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1591,
									"end": 1601,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1591,
									"end": 1601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1619,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1619,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1638,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1678,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1665,
									"end": 1673,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1662,
									"end": 1679,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1702,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1659,
									"end": 1702,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1682,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1682,
									"end": 1700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1700,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1682,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1738,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1724,
									"end": 1740,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1797,
									"end": 1802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1797,
									"end": 1802,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1812,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1550,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1812,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 1898,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1886,
									"end": 1894,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 1899,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1880,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 1871,
									"end": 1875,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1868,
									"end": 1881,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1864,
									"end": 1900,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1860,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 1848,
									"end": 1856,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1845,
									"end": 1861,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1842,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1834,
									"end": 1838,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 1843,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1862,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1824,
									"end": 1901,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 2024,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 2024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1821,
									"end": 2024,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1933,
									"end": 1952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1933,
									"end": 1952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1933,
									"end": 1952,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2009,
									"end": 2014,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 2024,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1821,
									"end": 2024,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2081,
									"end": 2089,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2075,
									"end": 2079,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2056,
									"end": 2098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2098,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2134,
									"end": 2140,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2130,
									"end": 2131,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2122,
									"end": 2141,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2113,
									"end": 2120,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2110,
									"end": 2142,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2165,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2107,
									"end": 2165,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2145,
									"end": 2163,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2203,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2203,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 2209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2214,
									"end": 2354,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2214,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2272,
									"end": 2277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2301,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2342,
									"end": 2346,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 2332,
									"end": 2340,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2301,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2301,
									"end": 2348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2527,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2359,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2463,
									"end": 2472,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2463,
									"end": 2472,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2495,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2495,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2496,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2474,
									"end": 2496,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2460,
									"end": 2497,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2450,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2450,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2501,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2501,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2501,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2527,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2359,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "267"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220104cd8d7463f4e369b2652d471e657f8530854ac779ef9d0d47c48ecb47753b764736f6c634300081e0033",
									".code": [
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8EF1E259"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8EF1E259"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "9A3BFDF5"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "FFDD60F9"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "6DB08F25"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 724,
											"end": 738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 724,
											"end": 738,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 717,
											"end": 739,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 699,
											"end": 740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 699,
											"end": 740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 687,
											"end": 689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 746,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 980,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 980,
											"end": 995,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 897,
											"end": 922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 897,
											"end": 922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 897,
											"end": 922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 751,
											"end": 928,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 178,
											"end": 233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 704,
											"end": 719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 670,
											"end": 675,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 663,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 663,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 663,
											"end": 719,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 719,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 853,
											"end": 884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 853,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 849,
											"end": 886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 849,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 849,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 835,
											"end": 886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 848,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 835,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 886,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 245,
											"end": 554,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 245,
											"end": 554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 304,
											"end": 310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 359,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 336,
											"end": 343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 332,
											"end": 355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 328,
											"end": 360,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 325,
											"end": 377,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 325,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 325,
											"end": 377,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 375,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 325,
											"end": 377,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 325,
											"end": 377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 412,
											"end": 421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 455,
											"end": 460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 451,
											"end": 505,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 444,
											"end": 449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 506,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 431,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 431,
											"end": 524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 520,
											"end": 521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 522,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 431,
											"end": 524,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 431,
											"end": 524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 543,
											"end": 548,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 245,
											"end": 554,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 245,
											"end": 554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1113,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 933,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1024,
											"end": 1031,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1048,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1065,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1013,
											"end": 1065,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1063,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1013,
											"end": 1065,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1013,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 933,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1302,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1118,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1227,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1259,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1209,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1296,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1580,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1396,
											"end": 1448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1396,
											"end": 1448,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1396,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1486,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1495,
											"end": 1550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1548,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1769,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1585,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1738,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1724,
											"end": 1739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1763,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1905,
											"end": 1913,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1917,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1965,
											"end": 1969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1963,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1970,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1971,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1994,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1944,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1944,
											"end": 1994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1974,
											"end": 1992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2007,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2117,
											"end": 2133,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2133,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2133,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2133,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2092,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1894,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 2149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2223,
											"end": 2303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2303,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2223,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2312,
											"end": 2388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2373,
											"end": 2378,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2312,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2397,
											"end": 2659,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2417,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2485,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2512,
											"end": 2520,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2509,
											"end": 2526,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2506,
											"end": 2549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2529,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2587,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2659,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2397,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2733,
											"end": 2741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2746,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2728,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 2695,
											"end": 2703,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2708,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2690,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2748,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2871,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2668,
											"end": 2871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 2799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2799,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2799,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2871,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2668,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2936,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2903,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2989,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3012,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2954,
											"end": 3012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3061,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3189,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3194,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3148,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3374,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3206,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3342,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3344,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3297,
											"end": 3368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3348,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CREDIWhale.sol",
								"contracts/interface/ICREDIWhale.sol",
								"contracts/interface/IERC20_Decimals.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"isWhale(address)": "8ef1e259",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setWhaleThreshold(uint256)": "ffdd60f9",
							"transferOwnership(address)": "f2fde38b",
							"whaleThreshold()": "9a3bfdf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CREDI\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"new_threshold\",\"type\":\"uint256\"}],\"name\":\"setWhaleThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whaleThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CREDIWhale.sol\":\"CREDIWhale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CREDIWhale.sol\":{\"keccak256\":\"0xe0b054a02681427024ad05b21daa1249aac326d02cd98a37e381aa5c3f31f3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e7f8540055ac91b147706205a0d39ed4e60410558b2faa5b14a2d126fe2d800\",\"dweb:/ipfs/Qmc2QFKUU3qeK3oKN2ki6iS1sZ7AWS1HKgmRk8SbbvhsyU\"]},\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]},\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/CREDIWhale.sol:CREDIWhale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 270,
								"contract": "contracts/CREDIWhale.sol:CREDIWhale",
								"label": "_whaleThreshold",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ICREDIWhale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								}
							],
							"name": "isWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whaleThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isWhale(address)": "8ef1e259",
							"whaleThreshold()": "9a3bfdf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whaleThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/ICREDIWhale.sol\":\"ICREDIWhale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"IERC20_Decimals": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20_Decimals.sol\":\"IERC20_Decimals\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/CREDIWhale.sol": {
				"ast": {
					"absolutePath": "contracts/CREDIWhale.sol",
					"exportedSymbols": {
						"CREDIWhale": [
							342
						],
						"Context": [
							255
						],
						"ICREDIWhale": [
							357
						],
						"IERC20": [
							225
						],
						"IERC20_Decimals": [
							365
						],
						"Ownable": [
							147
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 148,
							"src": "60:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 226,
							"src": "114:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IERC20_Decimals.sol",
							"file": "./interface/IERC20_Decimals.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 366,
							"src": "172:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/ICREDIWhale.sol",
							"file": "./interface/ICREDIWhale.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 358,
							"src": "215:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 262,
										"name": "Ownable",
										"nameLocations": [
											"279:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "279:7:3"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:3"
								},
								{
									"baseName": {
										"id": 264,
										"name": "ICREDIWhale",
										"nameLocations": [
											"288:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 357,
										"src": "288:11:3"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "288:11:3"
								}
							],
							"canonicalName": "CREDIWhale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								357,
								147,
								255
							],
							"name": "CREDIWhale",
							"nameLocation": "265:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 267,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "335:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "310:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 270,
									"mutability": "mutable",
									"name": "_whaleThreshold",
									"nameLocation": "360:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "347:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "347:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030303030",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"value": "500000"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "448:116:3",
										"statements": [
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 279,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "460:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 280,
														"name": "_CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "468:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "460:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "460:14:3"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 283,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "485:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 284,
															"name": "_whaleThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "503:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "519:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 287,
																				"name": "CREDI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "539:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 286,
																			"name": "IERC20_Decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "523:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_Decimals_$365_$",
																				"typeString": "type(contract IERC20_Decimals)"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "523:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_Decimals_$365",
																			"typeString": "contract IERC20_Decimals"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "546:8:3",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "523:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "523:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "519:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "503:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "485:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "485:71:3"
											}
										]
									},
									"id": 296,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 275,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "429:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "429:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 277,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 274,
												"name": "Ownable",
												"nameLocations": [
													"421:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "421:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "421:21:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_CREDI",
												"nameLocation": "413:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:16:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:3"
									},
									"scope": 342,
									"src": "393:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "645:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 307,
																"name": "user_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "687:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "CREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "670:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 303,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "663:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "663:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "677:9:3",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "663:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "663:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 309,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "704:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 302,
												"id": 311,
												"nodeType": "Return",
												"src": "656:63:3"
											}
										]
									},
									"functionSelector": "8ef1e259",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhale",
									"nameLocation": "581:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "597:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "589:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:22:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "634:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "634:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:6:3"
									},
									"scope": 342,
									"src": "572:155:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "806:88:3",
										"statements": [
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "817:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 321,
															"name": "new_threshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "835:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "849:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 324,
																				"name": "CREDI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "869:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 323,
																			"name": "IERC20_Decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "853:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_Decimals_$365_$",
																				"typeString": "type(contract IERC20_Decimals)"
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "853:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_Decimals_$365",
																			"typeString": "contract IERC20_Decimals"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "876:8:3",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "853:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "853:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "849:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "835:51:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "817:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "817:69:3"
											}
										]
									},
									"functionSelector": "ffdd60f9",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 317,
												"name": "onlyOwner",
												"nameLocations": [
													"791:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "791:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "791:9:3"
										}
									],
									"name": "setWhaleThreshold",
									"nameLocation": "744:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "new_threshold",
												"nameLocation": "767:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "762:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:20:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:3"
									},
									"scope": 342,
									"src": "735:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										356
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "962:41:3",
										"statements": [
											{
												"expression": {
													"id": 338,
													"name": "_whaleThreshold",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 270,
													"src": "980:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "973:22:3"
											}
										]
									},
									"functionSelector": "9a3bfdf5",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whaleThreshold",
									"nameLocation": "911:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "951:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:3"
									},
									"scope": 342,
									"src": "902:101:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "256:752:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:977:3"
				},
				"id": 3
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ast": {
					"absolutePath": "contracts/interface/ICREDIWhale.sol",
					"exportedSymbols": {
						"ICREDIWhale": [
							357
						]
					},
					"id": 358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICREDIWhale",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 357,
							"linearizedBaseContracts": [
								357
							],
							"name": "ICREDIWhale",
							"nameLocation": "70:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ef1e259",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhale",
									"nameLocation": "100:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "116:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "108:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:22:4"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "153:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:6:4"
									},
									"scope": 357,
									"src": "91:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a3bfdf5",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whaleThreshold",
									"nameLocation": "174:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "214:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "214:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:6:4"
									},
									"scope": 357,
									"src": "165:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 358,
							"src": "60:164:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:191:4"
				},
				"id": 4
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IERC20_Decimals.sol",
					"exportedSymbols": {
						"IERC20_Decimals": [
							365
						]
					},
					"id": 366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20_Decimals",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "IERC20_Decimals",
							"nameLocation": "71:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "105:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:5"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "139:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 361,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "139:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:7:5"
									},
									"scope": 365,
									"src": "96:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "61:91:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:121:5"
				},
				"id": 5
			}
		}
	}
}