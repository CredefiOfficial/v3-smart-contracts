{
	"id": "df21912c8f56ceaeea56ef89bf60ed18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ModuleX_immutable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./interface/IModuleX.sol\";\r\n\r\ncontract ModuleX is IModuleX, Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakeDetails\r\n    {\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n    }\r\n\r\n    bool public stopped = false; \r\n    uint96 constant public MATURITY = 180 days;\r\n    uint immutable private DIFFICULTY; // Initial DIFFICULTY\r\n    uint immutable public DIFFICULTY_INTERVAL;\r\n    IERC20 immutable public CREDI;\r\n    IERC20 immutable public xCREDI;\r\n    \r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    uint public total_staked = 0;\r\n    uint public pending_payments = 0;\r\n\r\n    event RewardAdded(uint amount);\r\n    event RewardWithdrawn(address indexed to, uint amount);\r\n    event Staked(address indexed user, uint stake_id, uint96 maturity, uint stake_amount, uint rewards_amount);\r\n    event CREDIWithdrawn(uint stake_id, uint amount);\r\n    event RewardPaid(uint stake_id);\r\n    event Stopped();\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())\r\n    { \r\n        CREDI = IERC20(_credi_addr);\r\n        xCREDI = IERC20(_xcredi_addr);\r\n        DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL;\r\n        DIFFICULTY = _DIFFICULTY;\r\n    }\r\n    \r\n    function getCREDIAddress() external view returns(address)\r\n    {\r\n        return address(CREDI);\r\n    }\r\n\r\n    function getxCREDIAddress() external view returns(address)\r\n    {\r\n        return address(xCREDI);\r\n    }\r\n\r\n    function getStakesCount() external view returns(uint)\r\n    {\r\n        return stakes_count - 1;\r\n    }\r\n\r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (\r\n        address owner,\r\n        uint maturity,\r\n        uint stake_amount,\r\n        uint reward_amount)\r\n    {\r\n        return (\r\n            stakes[stake_id].owner,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount);\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function calculateReward(uint stake_amount) public view returns(uint)\r\n    { \r\n        uint SCALE_FACTOR = 1e18;\r\n        uint curr_total = total_staked + stake_amount;\r\n        uint low_d = total_staked/DIFFICULTY_INTERVAL;\r\n        uint high_d = curr_total/DIFFICULTY_INTERVAL;\r\n        if(low_d == high_d)\r\n        {\r\n            return stake_amount/(low_d + DIFFICULTY);\r\n        }\r\n        else \r\n        {\r\n            uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY);\r\n            uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY);\r\n            uint middle_r = 0;\r\n            for(uint i=low_d + 1; i < high_d; i++)\r\n            {\r\n                middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY);\r\n            }\r\n            return (low_r + middle_r + high_r)/SCALE_FACTOR;\r\n        }\r\n    }\r\n\r\n    function getDifficulty() external view returns(uint)\r\n    {\r\n        return total_staked/DIFFICULTY_INTERVAL + DIFFICULTY;\r\n    }\r\n\r\n    function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)\r\n    {\r\n        require(!stopped, \"ModuleX:STOPPED!\");\r\n        require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\");\r\n        require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\");\r\n        CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint96 maturity = time_now() + lock_period;\r\n        uint reward_amount = calculateReward(stake_amount);\r\n        uint stake_id = stakes_count;\r\n        stakes[stake_id] = StakeDetails({\r\n            owner: _msgSender(),\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount\r\n        });\r\n        \r\n        total_staked += stake_amount; \r\n        pending_payments += reward_amount;\r\n        emit Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount);\r\n        stakes_count++;\r\n        return(stake_id, reward_amount);\r\n    }\r\n\r\n    function claim(uint stake_id) external validate_stake(stake_id) returns(uint)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\");\r\n        require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"ModuleX:Nothing to claim\");\r\n        uint reward_amount = details.reward_amount;\r\n        xCREDI.safeTransfer(_msgSender(), reward_amount);     \r\n        pending_payments -= reward_amount;\r\n        details.reward_amount = 0; \r\n        emit RewardPaid(stake_id); \r\n        return reward_amount;\r\n    }\r\n\r\n    function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\"); \r\n        require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\"); \r\n        CREDI.safeTransfer(_msgSender(), details.stake_amount);\r\n        details.stake_amount -= amount;\r\n        emit CREDIWithdrawn(stake_id, amount);\r\n    }\r\n\r\n    function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner\r\n    {\r\n        uint total_amount = 0;\r\n        for(uint i = 0; i < stake_ids.length; i++)\r\n        {\r\n            require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n            StakeDetails storage details = stakes[stake_ids[i]];\r\n            require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\");\r\n            total_amount += details.stake_amount;\r\n            details.stake_amount = 0;          \r\n            emit CREDIWithdrawn(stake_ids[i], details.stake_amount);\r\n        }\r\n        require(total_amount > 0, \"ModuleX:Total amount is 0!\"); \r\n        CREDI.safeTransfer(_msgSender(), total_amount);\r\n    }\r\n\r\n    function addRewards(uint amount) external \r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        xCREDI.safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(amount);\r\n    }\r\n\r\n    function withdrawRewards(address to, uint amount) external onlyOwner\r\n    {\r\n        require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\");\r\n        xCREDI.safeTransfer(to, amount);\r\n        emit RewardWithdrawn(to, amount);\r\n    }\r\n\r\n    function stop() external onlyOwner\r\n    {\r\n        stopped = true;\r\n        emit Stopped();\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IModuleX\r\n{\r\n    function getCREDIAddress() external view returns(address);\r\n\r\n    function getxCREDIAddress() external view returns(address);\r\n\r\n    function getStakesCount() external view returns(uint);\r\n    \r\n    function getDifficulty() external view returns(uint);\r\n    \r\n    function calculateReward(uint stake_amount) external returns(uint);\r\n\r\n    function stake(uint96 lock_period, uint amount) external returns(uint stake_id, uint xCREDI_reward);\r\n\r\n    function claim(uint stake_id) external returns(uint xCREDI_reward);\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PC 0xBE 0xC2 DUP10 0xDA 0xDD 0x25 XOR PUSH9 0x2E54B37F79FEC356D4 0x21 DUP8 0xEB ISZERO 0xA8 0xAF PUSH12 0xD712CF3855AE64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PC 0xBE 0xC2 DUP10 0xDA 0xDD 0x25 XOR PUSH9 0x2E54B37F79FEC356D4 0x21 DUP8 0xEB ISZERO 0xA8 0xAF PUSH12 0xD712CF3855AE64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b58bec289dadd2518682e54b37f79fec356d42187eb15a8af6bd712cf3855ae64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX_immutable.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ModuleX_immutable.sol": {
				"ModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_credi_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xcredi_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY_INTERVAL",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CREDIWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Stopped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATURITY",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "stake_ids",
									"type": "uint256[]"
								}
							],
							"name": "batchWithdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maturity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xCREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ModuleX_immutable.sol\":278:7234  contract ModuleX is IModuleX, Ownable ... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/ModuleX_immutable.sol\":530:535  false */\n  0x00\n    /* \"contracts/ModuleX_immutable.sol\":508:535  bool public stopped = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n  0x01\n    /* \"contracts/ModuleX_immutable.sol\":833:862  uint private stakes_count = 1 */\n  0x02\n  sstore\n    /* \"contracts/ModuleX_immutable.sol\":869:897  uint public total_staked = 0 */\n  0x03\n  dup2\n  swap1\n  sstore\n    /* \"contracts/ModuleX_immutable.sol\":904:936  uint public pending_payments = 0 */\n  0x04\n  sstore\n    /* \"contracts/ModuleX_immutable.sol\":1434:1736  constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ModuleX_immutable.sol\":1573:1600  CREDI = IERC20(_credi_addr) */\n  swap4\n  dup5\n  and\n  0xc0\n  mstore\n    /* \"contracts/ModuleX_immutable.sol\":1611:1640  xCREDI = IERC20(_xcredi_addr) */\n  swap2\n  swap1\n  swap3\n  and\n  0xe0\n  mstore\n    /* \"contracts/ModuleX_immutable.sol\":1651:1693  DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL */\n  0xa0\n  mstore\n    /* \"contracts/ModuleX_immutable.sol\":1704:1728  DIFFICULTY = _DIFFICULTY */\n  0x80\n  mstore\n    /* \"contracts/ModuleX_immutable.sol\":278:7234  contract ModuleX is IModuleX, Ownable ... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_18:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_21:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_23:\n    /* \"#utility.yul\":410:450   */\n  tag_24\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_25\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_18\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":580:582   */\n  0x40\n    /* \"#utility.yul\":565:583   */\n  dup7\n  add\n    /* \"#utility.yul\":559:584   */\n  mload\n    /* \"#utility.yul\":674:676   */\n  0x60\n    /* \"#utility.yul\":659:677   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":653:678   */\n  mload\n    /* \"#utility.yul\":196:710   */\n  swap5\n  swap8\n    /* \"#utility.yul\":459:518   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":715:918   */\ntag_19:\n    /* \"contracts/ModuleX_immutable.sol\":278:7234  contract ModuleX is IModuleX, Ownable ... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n  0x00\n  assignImmutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n  0x00\n  assignImmutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n  0x00\n  assignImmutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ModuleX_immutable.sol\":278:7234  contract ModuleX is IModuleX, Ownable ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf7568dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xce325bf8\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd6ef7af0\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd6ef7af0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd93c04a0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0xce325bf8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd46149a2\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0xb6baffe3\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb6baffe3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbc854352\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0xaf7568dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb109beec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5fa91fe\n      eq\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x75f12b21\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x8e12c0cd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x8e12c0cd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f4729b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xac00500f\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x75f12b21\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7c2fdeb5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0x379607f5\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6db08f25\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      dup1\n      0x07da68f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x109cf399\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ModuleX_immutable.sol\":7131:7229  function stop() external onlyOwner... */\n    tag_3:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/ModuleX_immutable.sol\":654:695  uint immutable public DIFFICULTY_INTERVAL */\n    tag_4:\n      tag_35\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":654:695  uint immutable public DIFFICULTY_INTERVAL */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX_immutable.sol\":4636:5305  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_5:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":702:731  IERC20 immutable public CREDI */\n    tag_6:\n      tag_44\n      immutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":587:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":575:577   */\n      0x20\n        /* \"#utility.yul\":560:578   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":702:731  IERC20 immutable public CREDI */\n      tag_37\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_33\n      tag_49\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":508:535  bool public stopped = false */\n    tag_8:\n      sload(0x00)\n      tag_50\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":837:851   */\n      swap1\n      iszero\n        /* \"#utility.yul\":830:852   */\n      iszero\n        /* \"#utility.yul\":812:853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":800:802   */\n      0x20\n        /* \"#utility.yul\":785:803   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":508:535  bool public stopped = false */\n      tag_37\n        /* \"#utility.yul\":672:859   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":1859:1964  function getxCREDIAddress() external view returns(address)... */\n    tag_9:\n        /* \"contracts/ModuleX_immutable.sol\":1949:1955  xCREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX_immutable.sol\":1859:1964  function getxCREDIAddress() external view returns(address)... */\n      jump(tag_44)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_44)\n        /* \"contracts/ModuleX_immutable.sol\":543:585  uint96 constant public MATURITY = 180 days */\n    tag_11:\n      tag_61\n        /* \"contracts/ModuleX_immutable.sol\":577:585  180 days */\n      0xed4e00\n        /* \"contracts/ModuleX_immutable.sol\":543:585  uint96 constant public MATURITY = 180 days */\n      dup2\n      jump\n    tag_61:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1257:1296   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1239:1297   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1227:1229   */\n      0x20\n        /* \"#utility.yul\":1212:1230   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":543:585  uint96 constant public MATURITY = 180 days */\n      tag_37\n        /* \"#utility.yul\":1095:1303   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":904:936  uint public pending_payments = 0 */\n    tag_12:\n      tag_35\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":5313:5869  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_13:\n      tag_33\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":869:897  uint public total_staked = 0 */\n    tag_14:\n      tag_35\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":738:768  IERC20 immutable public xCREDI */\n    tag_15:\n      tag_44\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      dup2\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":1972:2073  function getStakesCount() external view returns(uint)... */\n    tag_16:\n      tag_35\n      tag_79\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":3503:3632  function getDifficulty() external view returns(uint)... */\n    tag_17:\n      tag_35\n      tag_82\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":5877:6589  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_18:\n      tag_33\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":6597:6835  function addRewards(uint amount) external ... */\n    tag_19:\n      tag_33\n      tag_89\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":2081:2476  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_20:\n      tag_91\n      tag_92\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2523:2578   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":2505:2579   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2610:2612   */\n      0x20\n        /* \"#utility.yul\":2595:2613   */\n      dup6\n      add\n        /* \"#utility.yul\":2588:2622   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2638:2656   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2631:2665   */\n      mstore\n        /* \"#utility.yul\":2696:2698   */\n      0x60\n        /* \"#utility.yul\":2681:2699   */\n      dup3\n      add\n        /* \"#utility.yul\":2674:2708   */\n      mstore\n        /* \"#utility.yul\":2492:2495   */\n      0x80\n        /* \"#utility.yul\":2477:2496   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":2081:2476  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      tag_37\n        /* \"#utility.yul\":2274:2714   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":2595:3495  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_21:\n      tag_35\n      tag_97\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":1748:1851  function getCREDIAddress() external view returns(address)... */\n    tag_22:\n        /* \"contracts/ModuleX_immutable.sol\":1837:1842  CREDI */\n      immutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n        /* \"contracts/ModuleX_immutable.sol\":1748:1851  function getCREDIAddress() external view returns(address)... */\n      jump(tag_44)\n        /* \"contracts/ModuleX_immutable.sol\":6843:7123  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_23:\n      tag_33\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":3640:4628  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_24:\n      tag_107\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3816:3841   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup4\n      add\n        /* \"#utility.yul\":3850:3884   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3789:3807   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":3640:4628  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      tag_37\n        /* \"#utility.yul\":3642:3890   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_33\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":7131:7229  function stop() external onlyOwner... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ModuleX_immutable.sol\":7182:7189  stopped */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":7182:7196  stopped = true */\n      dup1\n      sload\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      and\n      shl(0xa0, 0x01)\n      or\n      dup2\n      sstore\n        /* \"contracts/ModuleX_immutable.sol\":7212:7221  Stopped() */\n      mload(0x40)\n      0x7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd6\n      swap2\n        /* \"contracts/ModuleX_immutable.sol\":7182:7189  stopped */\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":7212:7221  Stopped() */\n      log1\n        /* \"contracts/ModuleX_immutable.sol\":7131:7229  function stop() external onlyOwner... */\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":4636:5305  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_42:\n        /* \"contracts/ModuleX_immutable.sol\":4708:4712  uint */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4690:4698  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1348:1349  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":1337:1345  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1337:1349  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":1364:1376  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":1353:1361  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1353:1376  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n    tag_122:\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4393   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/ModuleX_immutable.sol\":4730:4758  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4761:4777  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":4761:4767  stakes */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":4761:4777  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX_immutable.sol\":4796:4809  details.owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":4796:4825  details.owner == _msgSender() */\n      eq\n        /* \"contracts/ModuleX_immutable.sol\":4788:4861  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4642:4644   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":4788:4861  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4624:4645   */\n      mstore\n        /* \"#utility.yul\":4681:4683   */\n      0x1f\n        /* \"#utility.yul\":4661:4679   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4654:4684   */\n      mstore\n        /* \"#utility.yul\":4720:4753   */\n      0x4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200\n        /* \"#utility.yul\":4700:4718   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4693:4754   */\n      mstore\n        /* \"#utility.yul\":4771:4789   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":4788:4861  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_124\n        /* \"#utility.yul\":4440:4795   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":4788:4861  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n    tag_129:\n        /* \"contracts/ModuleX_immutable.sol\":4894:4910  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX_immutable.sol\":2563:2578  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":4880:4910  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":4872:4957  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5002:5004   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":4872:4957  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4984:5005   */\n      mstore\n        /* \"#utility.yul\":5041:5043   */\n      0x2a\n        /* \"#utility.yul\":5021:5039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5014:5044   */\n      mstore\n        /* \"#utility.yul\":5080:5114   */\n      0x4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420\n        /* \"#utility.yul\":5060:5078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5053:5115   */\n      mstore\n        /* \"#utility.yul\":5151:5163   */\n      0x7065726d69747465642100000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5131:5149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5124:5164   */\n      mstore\n        /* \"#utility.yul\":5181:5200   */\n      0x84\n      add\n        /* \"contracts/ModuleX_immutable.sol\":4872:4957  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_124\n        /* \"#utility.yul\":4800:5206   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":4872:4957  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n    tag_134:\n        /* \"contracts/ModuleX_immutable.sol\":5001:5002  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4977:4984  details */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":4977:4998  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":4977:5002  details.reward_amount > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":4969:5031  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":4969:5031  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5395:5416   */\n      mstore\n        /* \"#utility.yul\":5452:5454   */\n      0x18\n        /* \"#utility.yul\":5432:5450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5425:5455   */\n      mstore\n        /* \"#utility.yul\":5491:5517   */\n      0x4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":5471:5489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5464:5518   */\n      mstore\n        /* \"#utility.yul\":5535:5553   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":4969:5031  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_124\n        /* \"#utility.yul\":5211:5559   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":4969:5031  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n    tag_137:\n        /* \"contracts/ModuleX_immutable.sol\":5063:5084  details.reward_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":5095:5143  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      tag_140\n        /* \"contracts/ModuleX_immutable.sol\":5095:5101  xCREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":5095:5114  xCREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":5063:5084  details.reward_amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":5095:5114  xCREDI.safeTransfer */\n      tag_142\n        /* \"contracts/ModuleX_immutable.sol\":5095:5143  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/ModuleX_immutable.sol\":5179:5192  reward_amount */\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":5159:5175  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":5159:5192  pending_payments -= reward_amount */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":5227:5228  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":5203:5224  details.reward_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5203:5228  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX_immutable.sol\":5245:5265  RewardPaid(stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":5245:5265  RewardPaid(stake_id) */\n      0x67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5245:5265  RewardPaid(stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX_immutable.sol\":5284:5297  reward_amount */\n      swap5\n        /* \"contracts/ModuleX_immutable.sol\":4636:5305  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":5313:5869  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ModuleX_immutable.sol\":5398:5406  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1348:1349  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":1337:1345  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1337:1349  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":1364:1376  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":1353:1361  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1353:1376  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n    tag_156:\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4393   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_124\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_157:\n        /* \"contracts/ModuleX_immutable.sol\":5442:5443  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":5433:5439  amount */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":5433:5443  amount > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":5424:5489  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6088:6090   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":5424:5489  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6070:6091   */\n      mstore\n        /* \"#utility.yul\":6127:6129   */\n      0x29\n        /* \"#utility.yul\":6107:6125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6100:6130   */\n      mstore\n        /* \"#utility.yul\":6166:6200   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6146:6164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6139:6201   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6217:6235   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6210:6249   */\n      mstore\n        /* \"#utility.yul\":6266:6285   */\n      0x84\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5424:5489  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_124\n        /* \"#utility.yul\":5886:6291   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":5424:5489  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_160:\n        /* \"contracts/ModuleX_immutable.sol\":5500:5528  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":5531:5547  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":5531:5537  stakes */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":5531:5547  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX_immutable.sol\":5580:5596  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX_immutable.sol\":2563:2578  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":5566:5596  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":5558:5622  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6498:6500   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":5558:5622  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6480:6501   */\n      mstore\n        /* \"#utility.yul\":6537:6539   */\n      0x15\n        /* \"#utility.yul\":6517:6535   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6510:6540   */\n      mstore\n        /* \"#utility.yul\":6576:6599   */\n      0x4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000\n        /* \"#utility.yul\":6556:6574   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6549:6600   */\n      mstore\n        /* \"#utility.yul\":6617:6635   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5558:5622  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_124\n        /* \"#utility.yul\":6296:6641   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":5558:5622  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_164:\n        /* \"contracts/ModuleX_immutable.sol\":5652:5659  details */\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":5652:5672  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":5642:5648  amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":5642:5672  amount <= details.stake_amount */\n      gt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":5634:5706  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6848:6850   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":5634:5706  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6830:6851   */\n      mstore\n        /* \"#utility.yul\":6887:6889   */\n      0x1d\n        /* \"#utility.yul\":6867:6885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6860:6890   */\n      mstore\n        /* \"#utility.yul\":6926:6957   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6906:6924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6899:6958   */\n      mstore\n        /* \"#utility.yul\":6975:6993   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5634:5706  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_124\n        /* \"#utility.yul\":6646:6999   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":5634:5706  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n    tag_167:\n        /* \"contracts/ModuleX_immutable.sol\":5718:5772  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":5751:5771  details.stake_amount */\n      0x01\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":5718:5723  CREDI */\n      immutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n        /* \"contracts/ModuleX_immutable.sol\":5718:5736  CREDI.safeTransfer */\n      and\n      swap2\n        /* \"contracts/ModuleX_immutable.sol\":5718:5772  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":5718:5736  CREDI.safeTransfer */\n      tag_142\n        /* \"contracts/ModuleX_immutable.sol\":5718:5772  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/ModuleX_immutable.sol\":5807:5813  amount */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":5783:5790  details */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":5783:5803  details.stake_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":5783:5813  details.stake_amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_172:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":5829:5861  CREDIWithdrawn(stake_id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3816:3841   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup2\n      add\n        /* \"#utility.yul\":3850:3884   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":5829:5861  CREDIWithdrawn(stake_id, amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n      swap2\n        /* \"#utility.yul\":3789:3807   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5829:5861  CREDIWithdrawn(stake_id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX_immutable.sol\":5413:5869  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":5313:5869  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":1972:2073  function getStakesCount() external view returns(uint)... */\n    tag_79:\n        /* \"contracts/ModuleX_immutable.sol\":2020:2024  uint */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2064:2065  1 */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":2049:2061  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":2049:2065  stakes_count - 1 */\n      tag_175\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_175:\n        /* \"contracts/ModuleX_immutable.sol\":2042:2065  return stakes_count - 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":1972:2073  function getStakesCount() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":3503:3632  function getDifficulty() external view returns(uint)... */\n    tag_82:\n        /* \"contracts/ModuleX_immutable.sol\":3550:3554  uint */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":3614:3624  DIFFICULTY */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"contracts/ModuleX_immutable.sol\":3592:3611  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":3579:3591  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX_immutable.sol\":3579:3611  total_staked/DIFFICULTY_INTERVAL */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/ModuleX_immutable.sol\":3579:3624  total_staked/DIFFICULTY_INTERVAL + DIFFICULTY */\n      tag_175\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n        /* \"contracts/ModuleX_immutable.sol\":5877:6589  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/ModuleX_immutable.sol\":5967:5984  uint total_amount */\n      0x00\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":5999:6458  for(uint i = 0; i < stake_ids.length; i++)... */\n    tag_184:\n        /* \"contracts/ModuleX_immutable.sol\":6015:6035  i < stake_ids.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":5999:6458  for(uint i = 0; i < stake_ids.length; i++)... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/ModuleX_immutable.sol\":6089:6101  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":6074:6083  stake_ids */\n      dup5\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":6084:6085  i */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":6074:6086  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_188\n      jumpi\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX_immutable.sol\":6074:6101  stake_ids[i] < stakes_count */\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":6066:6131  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":6066:6131  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4393   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6066:6131  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_124\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6066:6131  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_190:\n        /* \"contracts/ModuleX_immutable.sol\":6146:6174  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":6177:6183  stakes */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":6177:6197  stakes[stake_ids[i]] */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":6184:6193  stake_ids */\n      dup7\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":6194:6195  i */\n      dup6\n        /* \"contracts/ModuleX_immutable.sol\":6184:6196  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_189\n      jump\t// in\n    tag_193:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/ModuleX_immutable.sol\":6177:6197  stakes[stake_ids[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX_immutable.sol\":6234:6250  details.maturity */\n      dup1\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":6177:6197  stakes[stake_ids[i]] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":6234:6250  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX_immutable.sol\":2563:2578  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":6220:6250  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":6212:6276  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6498:6500   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":6212:6276  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6480:6501   */\n      mstore\n        /* \"#utility.yul\":6537:6539   */\n      0x15\n        /* \"#utility.yul\":6517:6535   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6510:6540   */\n      mstore\n        /* \"#utility.yul\":6576:6599   */\n      0x4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000\n        /* \"#utility.yul\":6556:6574   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6549:6600   */\n      mstore\n        /* \"#utility.yul\":6617:6635   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6212:6276  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_124\n        /* \"#utility.yul\":6296:6641   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6212:6276  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_195:\n        /* \"contracts/ModuleX_immutable.sol\":6307:6327  details.stake_amount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":6291:6327  total_amount += details.stake_amount */\n      tag_197\n      swap1\n      dup5\n      tag_180\n      jump\t// in\n    tag_197:\n        /* \"contracts/ModuleX_immutable.sol\":6365:6366  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":6342:6362  details.stake_amount */\n      0x01\n      dup4\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6342:6366  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX_immutable.sol\":6291:6327  total_amount += details.stake_amount */\n      swap3\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":6396:6446  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX_immutable.sol\":6411:6420  stake_ids */\n      dup6\n      dup6\n        /* \"contracts/ModuleX_immutable.sol\":6421:6422  i */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":6411:6423  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_189\n      jump\t// in\n    tag_199:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX_immutable.sol\":6425:6432  details */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":6425:6445  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":6396:6446  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      mload(0x40)\n      tag_200\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":3816:3841   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup3\n      add\n        /* \"#utility.yul\":3850:3884   */\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x40\n        /* \"#utility.yul\":3789:3807   */\n      add\n      swap1\n        /* \"#utility.yul\":3642:3890   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6396:6446  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":6037:6040  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX_immutable.sol\":5999:6458  for(uint i = 0; i < stake_ids.length; i++)... */\n      jump(tag_184)\n    tag_185:\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":6491:6492  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":6476:6488  total_amount */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":6476:6492  total_amount > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":6468:6523  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7804:7806   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":6468:6523  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7786:7807   */\n      mstore\n        /* \"#utility.yul\":7843:7845   */\n      0x1a\n        /* \"#utility.yul\":7823:7841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7816:7846   */\n      mstore\n        /* \"#utility.yul\":7882:7910   */\n      0x4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000\n        /* \"#utility.yul\":7862:7880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7855:7911   */\n      mstore\n        /* \"#utility.yul\":7928:7946   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6468:6523  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_124\n        /* \"#utility.yul\":7602:7952   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6468:6523  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n    tag_201:\n        /* \"contracts/ModuleX_immutable.sol\":6535:6581  CREDI.safeTransfer(_msgSender(), total_amount) */\n      tag_204\n        /* \"contracts/ModuleX_immutable.sol\":6535:6540  CREDI */\n      immutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":6535:6553  CREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":6568:6580  total_amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":6535:6553  CREDI.safeTransfer */\n      tag_142\n        /* \"contracts/ModuleX_immutable.sol\":6535:6581  CREDI.safeTransfer(_msgSender(), total_amount) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/ModuleX_immutable.sol\":5956:6589  {... */\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":5877:6589  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":6597:6835  function addRewards(uint amount) external ... */\n    tag_90:\n        /* \"contracts/ModuleX_immutable.sol\":6674:6675  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":6665:6671  amount */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":6665:6675  amount > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":6656:6721  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6088:6090   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":6656:6721  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6070:6091   */\n      mstore\n        /* \"#utility.yul\":6127:6129   */\n      0x29\n        /* \"#utility.yul\":6107:6125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6100:6130   */\n      mstore\n        /* \"#utility.yul\":6166:6200   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6146:6164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6139:6201   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6217:6235   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6210:6249   */\n      mstore\n        /* \"#utility.yul\":6266:6285   */\n      0x84\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6656:6721  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_124\n        /* \"#utility.yul\":5886:6291   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6656:6721  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_207:\n        /* \"contracts/ModuleX_immutable.sol\":6732:6792  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_209\n        /* \"contracts/ModuleX_immutable.sol\":6732:6738  xCREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":6732:6755  xCREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":6778:6782  this */\n      address\n        /* \"contracts/ModuleX_immutable.sol\":6785:6791  amount */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":6732:6755  xCREDI.safeTransferFrom */\n      tag_211\n        /* \"contracts/ModuleX_immutable.sol\":6732:6792  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/ModuleX_immutable.sol\":6808:6827  RewardAdded(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":6808:6827  RewardAdded(amount) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6808:6827  RewardAdded(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX_immutable.sol\":6597:6835  function addRewards(uint amount) external ... */\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":2081:2476  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_93:\n        /* \"contracts/ModuleX_immutable.sol\":2182:2195  address owner */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2206:2219  uint maturity */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2230:2247  uint stake_amount */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2258:2276  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2138:2146  stake_id */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":1348:1349  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":1337:1345  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1337:1349  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_214\n      jumpi\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":1364:1376  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":1353:1361  stake_id */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":1353:1376  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":1337:1376  stake_id > 0 && stake_id < stakes_count */\n    tag_214:\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4393   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_124\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":1329:1406  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_215:\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2316:2332  stakes[stake_id] */\n      0x00\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2316:2322  stakes */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":2316:2332  stakes[stake_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ModuleX_immutable.sol\":2316:2338  stakes[stake_id].owner */\n      dup1\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":2393:2422  stakes[stake_id].stake_amount */\n      swap2\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":2437:2467  stakes[stake_id].reward_amount */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":2316:2338  stakes[stake_id].owner */\n      dup4\n      and\n      swap4\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":2353:2378  stakes[stake_id].maturity */\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/ModuleX_immutable.sol\":2081:2476  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":2595:3495  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_98:\n        /* \"contracts/ModuleX_immutable.sol\":2659:2663  uint */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2682:2699  uint SCALE_FACTOR */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2702:2706  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ModuleX_immutable.sol\":2682:2706  uint SCALE_FACTOR = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2717:2732  uint curr_total */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2750:2762  stake_amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":2735:2747  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX_immutable.sol\":2735:2762  total_staked + stake_amount */\n      tag_219\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_219:\n        /* \"contracts/ModuleX_immutable.sol\":2717:2762  uint curr_total = total_staked + stake_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2773:2783  uint low_d */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2799:2818  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":2786:2798  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX_immutable.sol\":2786:2818  total_staked/DIFFICULTY_INTERVAL */\n      tag_220\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_220:\n        /* \"contracts/ModuleX_immutable.sol\":2773:2818  uint low_d = total_staked/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2829:2840  uint high_d */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":2843:2873  curr_total/DIFFICULTY_INTERVAL */\n      tag_221\n        /* \"contracts/ModuleX_immutable.sol\":2854:2873  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":2843:2853  curr_total */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":2843:2873  curr_total/DIFFICULTY_INTERVAL */\n      tag_178\n      jump\t// in\n    tag_221:\n        /* \"contracts/ModuleX_immutable.sol\":2829:2873  uint high_d = curr_total/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":2896:2902  high_d */\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":2887:2892  low_d */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":2887:2902  low_d == high_d */\n      sub\n        /* \"contracts/ModuleX_immutable.sol\":2884:3488  if(low_d == high_d)... */\n      tag_222\n      jumpi\n        /* \"contracts/ModuleX_immutable.sol\":2949:2967  low_d + DIFFICULTY */\n      tag_223\n        /* \"contracts/ModuleX_immutable.sol\":2957:2967  DIFFICULTY */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"contracts/ModuleX_immutable.sol\":2949:2954  low_d */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":2949:2967  low_d + DIFFICULTY */\n      tag_180\n      jump\t// in\n    tag_223:\n        /* \"contracts/ModuleX_immutable.sol\":2935:2968  stake_amount/(low_d + DIFFICULTY) */\n      tag_224\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":2935:2947  stake_amount */\n      dup8\n        /* \"contracts/ModuleX_immutable.sol\":2935:2968  stake_amount/(low_d + DIFFICULTY) */\n      tag_178\n      jump\t// in\n    tag_224:\n        /* \"contracts/ModuleX_immutable.sol\":2928:2968  return stake_amount/(low_d + DIFFICULTY) */\n      swap7\n        /* \"contracts/ModuleX_immutable.sol\":2595:3495  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":2884:3488  if(low_d == high_d)... */\n    tag_222:\n        /* \"contracts/ModuleX_immutable.sol\":3020:3030  uint low_r */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":3096:3114  low_d + DIFFICULTY */\n      tag_226\n        /* \"contracts/ModuleX_immutable.sol\":3104:3114  DIFFICULTY */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"contracts/ModuleX_immutable.sol\":3096:3101  low_d */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":3096:3114  low_d + DIFFICULTY */\n      tag_180\n      jump\t// in\n    tag_226:\n        /* \"contracts/ModuleX_immutable.sol\":3081:3093  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX_immutable.sol\":3059:3078  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":3048:3057  low_d + 1 */\n      tag_227\n        /* \"contracts/ModuleX_immutable.sol\":3048:3053  low_d */\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":3056:3057  1 */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":3048:3057  low_d + 1 */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"contracts/ModuleX_immutable.sol\":3047:3078  (low_d + 1)*DIFFICULTY_INTERVAL */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/ModuleX_immutable.sol\":3047:3093  (low_d + 1)*DIFFICULTY_INTERVAL - total_staked */\n      tag_230\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_230:\n        /* \"contracts/ModuleX_immutable.sol\":3033:3094  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_231\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":3033:3045  SCALE_FACTOR */\n      dup8\n        /* \"contracts/ModuleX_immutable.sol\":3033:3094  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_229\n      jump\t// in\n    tag_231:\n        /* \"contracts/ModuleX_immutable.sol\":3033:3115  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      tag_232\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_232:\n        /* \"contracts/ModuleX_immutable.sol\":3020:3115  uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3130:3141  uint high_r */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":3200:3219  high_d + DIFFICULTY */\n      tag_233\n        /* \"contracts/ModuleX_immutable.sol\":3209:3219  DIFFICULTY */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"contracts/ModuleX_immutable.sol\":3200:3206  high_d */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":3200:3219  high_d + DIFFICULTY */\n      tag_180\n      jump\t// in\n    tag_233:\n        /* \"contracts/ModuleX_immutable.sol\":3171:3197  high_d*DIFFICULTY_INTERVAL */\n      tag_234\n        /* \"contracts/ModuleX_immutable.sol\":3178:3197  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":3171:3177  high_d */\n      dup6\n        /* \"contracts/ModuleX_immutable.sol\":3171:3197  high_d*DIFFICULTY_INTERVAL */\n      tag_229\n      jump\t// in\n    tag_234:\n        /* \"contracts/ModuleX_immutable.sol\":3158:3197  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_235\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":3158:3168  curr_total */\n      dup8\n        /* \"contracts/ModuleX_immutable.sol\":3158:3197  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_144\n      jump\t// in\n    tag_235:\n        /* \"contracts/ModuleX_immutable.sol\":3144:3198  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_236\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":3144:3156  SCALE_FACTOR */\n      dup9\n        /* \"contracts/ModuleX_immutable.sol\":3144:3198  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_229\n      jump\t// in\n    tag_236:\n        /* \"contracts/ModuleX_immutable.sol\":3144:3220  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      tag_237\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_237:\n        /* \"contracts/ModuleX_immutable.sol\":3130:3220  uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3235:3248  uint middle_r */\n      0x00\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":3278:3287  low_d + 1 */\n      tag_241\n        /* \"contracts/ModuleX_immutable.sol\":3278:3283  low_d */\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":3286:3287  1 */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":3278:3287  low_d + 1 */\n      tag_180\n      jump\t// in\n    tag_241:\n        /* \"contracts/ModuleX_immutable.sol\":3271:3287  uint i=low_d + 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3267:3415  for(uint i=low_d + 1; i < high_d; i++)... */\n    tag_238:\n        /* \"contracts/ModuleX_immutable.sol\":3293:3299  high_d */\n      dup5\n        /* \"contracts/ModuleX_immutable.sol\":3289:3290  i */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":3289:3299  i < high_d */\n      lt\n        /* \"contracts/ModuleX_immutable.sol\":3267:3415  for(uint i=low_d + 1; i < high_d; i++)... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/ModuleX_immutable.sol\":3384:3398  i + DIFFICULTY */\n      tag_242\n        /* \"contracts/ModuleX_immutable.sol\":3388:3398  DIFFICULTY */\n      immutable(\"0xeb29b49011c9cf62c1f2455e9e4472fdc1b37c8f4e32969c812d39bb921154f4\")\n        /* \"contracts/ModuleX_immutable.sol\":3384:3385  i */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":3384:3398  i + DIFFICULTY */\n      tag_180\n      jump\t// in\n    tag_242:\n        /* \"contracts/ModuleX_immutable.sol\":3350:3382  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_243\n        /* \"contracts/ModuleX_immutable.sol\":3363:3382  DIFFICULTY_INTERVAL */\n      immutable(\"0x1953a27a405e8582cf1be8a2db4a8d6898082fbed25ec72fb4b95dbd76ab849b\")\n        /* \"contracts/ModuleX_immutable.sol\":3350:3362  SCALE_FACTOR */\n      dup11\n        /* \"contracts/ModuleX_immutable.sol\":3350:3382  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_229\n      jump\t// in\n    tag_243:\n        /* \"contracts/ModuleX_immutable.sol\":3350:3399  SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_244\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_244:\n        /* \"contracts/ModuleX_immutable.sol\":3338:3399  middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_245\n      swap1\n      dup4\n      tag_180\n      jump\t// in\n    tag_245:\n      swap2\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3301:3304  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX_immutable.sol\":3267:3415  for(uint i=low_d + 1; i < high_d; i++)... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3464:3476  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":3456:3462  high_r */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":3437:3453  low_r + middle_r */\n      tag_246\n        /* \"contracts/ModuleX_immutable.sol\":3445:3453  middle_r */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":3437:3442  low_r */\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":3437:3453  low_r + middle_r */\n      tag_180\n      jump\t// in\n    tag_246:\n        /* \"contracts/ModuleX_immutable.sol\":3437:3462  low_r + middle_r + high_r */\n      tag_247\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_247:\n        /* \"contracts/ModuleX_immutable.sol\":3436:3476  (low_r + middle_r + high_r)/SCALE_FACTOR */\n      tag_248\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_248:\n        /* \"contracts/ModuleX_immutable.sol\":3429:3476  return (low_r + middle_r + high_r)/SCALE_FACTOR */\n      swap10\n        /* \"contracts/ModuleX_immutable.sol\":2595:3495  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":6843:7123  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/ModuleX_immutable.sol\":6980:6996  pending_payments */\n      sload(0x04)\n        /* \"contracts/ModuleX_immutable.sol\":6971:6996  amount + pending_payments */\n      tag_253\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":6971:6977  amount */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":6971:6996  amount + pending_payments */\n      tag_180\n      jump\t// in\n    tag_253:\n        /* \"contracts/ModuleX_immutable.sol\":6936:6967  xCREDI.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":6961:6965  this */\n      address\n        /* \"contracts/ModuleX_immutable.sol\":6936:6967  xCREDI.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":6936:6942  xCREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":6936:6952  xCREDI.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6936:6967  xCREDI.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"contracts/ModuleX_immutable.sol\":6936:6996  xCREDI.balanceOf(address(this)) >= amount + pending_payments */\n      lt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":6928:7030  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6848:6850   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":6928:7030  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6830:6851   */\n      mstore\n        /* \"#utility.yul\":6887:6889   */\n      0x1d\n        /* \"#utility.yul\":6867:6885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6860:6890   */\n      mstore\n        /* \"#utility.yul\":6926:6957   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6906:6924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6899:6958   */\n      mstore\n        /* \"#utility.yul\":6975:6993   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":6928:7030  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_124\n        /* \"#utility.yul\":6646:6999   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":6928:7030  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n    tag_259:\n        /* \"contracts/ModuleX_immutable.sol\":7041:7072  xCREDI.safeTransfer(to, amount) */\n      tag_261\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":7041:7047  xCREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX_immutable.sol\":7041:7060  xCREDI.safeTransfer */\n      and\n        /* \"contracts/ModuleX_immutable.sol\":7061:7063  to */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":7065:7071  amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":7041:7060  xCREDI.safeTransfer */\n      tag_142\n        /* \"contracts/ModuleX_immutable.sol\":7041:7072  xCREDI.safeTransfer(to, amount) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/ModuleX_immutable.sol\":7104:7106  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":7088:7115  RewardWithdrawn(to, amount) */\n      and\n      0x1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337\n        /* \"contracts/ModuleX_immutable.sol\":7108:7114  amount */\n      dup3\n        /* \"contracts/ModuleX_immutable.sol\":7088:7115  RewardWithdrawn(to, amount) */\n      mload(0x40)\n      tag_262\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":7088:7115  RewardWithdrawn(to, amount) */\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX_immutable.sol\":6843:7123  function withdrawRewards(address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX_immutable.sol\":3640:4628  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_110:\n        /* \"contracts/ModuleX_immutable.sol\":3711:3715  uint */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":3748:3755  stopped */\n      dup1\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":3711:3715  uint */\n      dup2\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":3748:3755  stopped */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ModuleX_immutable.sol\":3747:3755  !stopped */\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":3739:3776  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8521:8523   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":3739:3776  require(!stopped, \"ModuleX:STOPPED!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8503:8524   */\n      mstore\n        /* \"#utility.yul\":8560:8562   */\n      0x10\n        /* \"#utility.yul\":8540:8558   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8533:8563   */\n      mstore\n        /* \"#utility.yul\":8599:8617   */\n      0x4d6f64756c65583a53544f505045442100000000000000000000000000000000\n        /* \"#utility.yul\":8579:8597   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8572:8618   */\n      mstore\n        /* \"#utility.yul\":8635:8653   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":3739:3776  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_124\n        /* \"#utility.yul\":8319:8659   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":3739:3776  require(!stopped, \"ModuleX:STOPPED!\") */\n    tag_264:\n        /* \"contracts/ModuleX_immutable.sol\":3810:3811  0 */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":3795:3807  stake_amount */\n      dup4\n        /* \"contracts/ModuleX_immutable.sol\":3795:3811  stake_amount > 0 */\n      gt\n        /* \"contracts/ModuleX_immutable.sol\":3787:3860  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8866:8868   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":3787:3860  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8848:8869   */\n      mstore\n        /* \"#utility.yul\":8905:8907   */\n      0x2c\n        /* \"#utility.yul\":8885:8903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8878:8908   */\n      mstore\n        /* \"#utility.yul\":8944:8978   */\n      0x4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":8924:8942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8917:8979   */\n      mstore\n        /* \"#utility.yul\":9015:9029   */\n      0x61746572207468616e2030210000000000000000000000000000000000000000\n        /* \"#utility.yul\":8995:9013   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8988:9030   */\n      mstore\n        /* \"#utility.yul\":9047:9066   */\n      0x84\n      add\n        /* \"contracts/ModuleX_immutable.sol\":3787:3860  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_124\n        /* \"#utility.yul\":8664:9072   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":3787:3860  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n    tag_267:\n        /* \"contracts/ModuleX_immutable.sol\":577:585  180 days */\n      0xed4e00\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":3879:3902  lock_period >= MATURITY */\n      dup6\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX_immutable.sol\":3871:3938  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9279:9281   */\n      0x20\n        /* \"contracts/ModuleX_immutable.sol\":3871:3938  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9261:9282   */\n      mstore\n        /* \"#utility.yul\":9318:9320   */\n      0x1f\n        /* \"#utility.yul\":9298:9316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9291:9321   */\n      mstore\n        /* \"#utility.yul\":9357:9390   */\n      0x4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100\n        /* \"#utility.yul\":9337:9355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9330:9391   */\n      mstore\n        /* \"#utility.yul\":9408:9426   */\n      0x64\n      add\n        /* \"contracts/ModuleX_immutable.sol\":3871:3938  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_124\n        /* \"#utility.yul\":9077:9432   */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":3871:3938  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n    tag_270:\n        /* \"contracts/ModuleX_immutable.sol\":3949:4014  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_273\n        /* \"contracts/ModuleX_immutable.sol\":3949:3954  CREDI */\n      immutable(\"0xdff167ddfa3189a3e9389ac75b945e17c7959b64870603a7f04a55d1519d28e2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":3949:3971  CREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX_immutable.sol\":3994:3998  this */\n      address\n        /* \"contracts/ModuleX_immutable.sol\":4001:4013  stake_amount */\n      dup7\n        /* \"contracts/ModuleX_immutable.sol\":3949:3971  CREDI.safeTransferFrom */\n      tag_211\n        /* \"contracts/ModuleX_immutable.sol\":3949:4014  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_273:\n        /* \"contracts/ModuleX_immutable.sol\":4026:4041  uint96 maturity */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4044:4068  time_now() + lock_period */\n      tag_276\n        /* \"contracts/ModuleX_immutable.sol\":4057:4068  lock_period */\n      dup6\n        /* \"contracts/ModuleX_immutable.sol\":2563:2578  block.timestamp */\n      timestamp\n        /* \"contracts/ModuleX_immutable.sol\":4044:4068  time_now() + lock_period */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"contracts/ModuleX_immutable.sol\":4026:4068  uint96 maturity = time_now() + lock_period */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4079:4097  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4100:4129  calculateReward(stake_amount) */\n      tag_278\n        /* \"contracts/ModuleX_immutable.sol\":4116:4128  stake_amount */\n      dup6\n        /* \"contracts/ModuleX_immutable.sol\":4100:4115  calculateReward */\n      tag_98\n        /* \"contracts/ModuleX_immutable.sol\":4100:4129  calculateReward(stake_amount) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/ModuleX_immutable.sol\":4079:4129  uint reward_amount = calculateReward(stake_amount) */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4140:4153  uint stake_id */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4156:4168  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX_immutable.sol\":4140:4168  uint stake_id = stakes_count */\n      swap1\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4198:4374  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ModuleX_immutable.sol\":4233:4245  _msgSender() */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ModuleX_immutable.sol\":4233:4245  _msgSender() */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX_immutable.sol\":4198:4374  StakeDetails({... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0x60\n      swap5\n      dup6\n      add\n      dup9\n      swap1\n      mstore\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4179:4195  stakes[stake_id] */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":4179:4185  stakes */\n      0x01\n        /* \"contracts/ModuleX_immutable.sol\":4179:4195  stakes[stake_id] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/ModuleX_immutable.sol\":4179:4374  stakes[stake_id] = StakeDetails({... */\n      dup9\n      mload\n      swap5\n      dup10\n      add\n      mload\n      swap5\n      swap1\n      swap7\n      and\n      shl(0xa0, 0x01)\n      swap5\n      swap1\n      swap6\n      and\n      swap4\n      swap1\n      swap4\n      mul\n      swap4\n      swap1\n      swap4\n      or\n      dup5\n      sstore\n      dup6\n      add\n      mload\n      swap1\n      dup4\n      add\n      sstore\n      swap3\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/ModuleX_immutable.sol\":4395:4407  total_staked */\n      0x03\n        /* \"contracts/ModuleX_immutable.sol\":4395:4423  total_staked += stake_amount */\n      dup1\n      sload\n        /* \"contracts/ModuleX_immutable.sol\":4198:4374  StakeDetails({... */\n      dup9\n      swap3\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":4395:4423  total_staked += stake_amount */\n      tag_280\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":4198:4374  StakeDetails({... */\n      dup5\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":4395:4423  total_staked += stake_amount */\n      tag_180\n      jump\t// in\n    tag_280:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4455:4468  reward_amount */\n      dup2\n        /* \"contracts/ModuleX_immutable.sol\":4435:4451  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4435:4468  pending_payments += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_281\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_281:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4484:4553  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9886:9911   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9947:9986   */\n      dup6\n      and\n        /* \"#utility.yul\":9942:9944   */\n      0x20\n        /* \"#utility.yul\":9927:9945   */\n      dup3\n      add\n        /* \"#utility.yul\":9920:9987   */\n      mstore\n        /* \"#utility.yul\":10003:10021   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9996:10030   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":10061:10063   */\n      0x60\n        /* \"#utility.yul\":10046:10064   */\n      dup2\n      add\n        /* \"#utility.yul\":10039:10073   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/ModuleX_immutable.sol\":4484:4553  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ModuleX_immutable.sol\":4484:4553  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9873:9876   */\n      0x80\n        /* \"contracts/ModuleX_immutable.sol\":4484:4553  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      add\n      swap1\n      log2\n        /* \"contracts/ModuleX_immutable.sol\":4564:4576  stakes_count */\n      0x02\n        /* \"contracts/ModuleX_immutable.sol\":4564:4578  stakes_count++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/ModuleX_immutable.sol\":4564:4576  stakes_count */\n      0x00\n        /* \"contracts/ModuleX_immutable.sol\":4564:4578  stakes_count++ */\n      tag_285\n      dup4\n      tag_286\n      jump\t// in\n    tag_285:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":4596:4604  stake_id */\n      swap1\n      swap8\n        /* \"contracts/ModuleX_immutable.sol\":4606:4619  reward_amount */\n      swap2\n      swap7\n      pop\n        /* \"contracts/ModuleX_immutable.sol\":3640:4628  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_124\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_124\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10416:10471   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10398:10472   */\n      mstore\n        /* \"#utility.yul\":10488:10506   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10481:10515   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_204\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10371:10389   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_303:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10746:10801   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10728:10802   */\n      mstore\n        /* \"#utility.yul\":10838:10893   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":10818:10836   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":10811:10894   */\n      mstore\n        /* \"#utility.yul\":10910:10928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10903:10937   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_308\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":10701:10719   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_303\n        /* \"#utility.yul\":10526:10943   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_312:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_314)\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_124\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"#utility.yul\":196:422   */\n    tag_41:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":369:392   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:422   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1308:1654   */\n    tag_70:\n        /* \"#utility.yul\":1376:1382   */\n      0x00\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1437:1439   */\n      0x40\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1416:1423   */\n      dup6\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1457   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1455   */\n      revert\n        /* \"#utility.yul\":1405:1457   */\n    tag_328:\n      pop\n      pop\n        /* \"#utility.yul\":1498:1521   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1590:1622   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1308:1654   */\n      jump\t// out\n        /* \"#utility.yul\":1659:2269   */\n    tag_86:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1794:1803   */\n      dup4\n        /* \"#utility.yul\":1785:1792   */\n      dup6\n        /* \"#utility.yul\":1781:1804   */\n      sub\n        /* \"#utility.yul\":1777:1809   */\n      slt\n        /* \"#utility.yul\":1774:1826   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      0x00\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1774:1826   */\n    tag_330:\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1849:1872   */\n      calldataload\n        /* \"#utility.yul\":1895:1913   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1887:1893   */\n      dup2\n        /* \"#utility.yul\":1884:1914   */\n      gt\n        /* \"#utility.yul\":1881:1931   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1881:1931   */\n    tag_331:\n        /* \"#utility.yul\":1950:1972   */\n      dup4\n      add\n        /* \"#utility.yul\":2003:2007   */\n      0x1f\n        /* \"#utility.yul\":1995:2008   */\n      dup2\n      add\n        /* \"#utility.yul\":1991:2018   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1981:2036   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1981:2036   */\n    tag_332:\n        /* \"#utility.yul\":2072:2074   */\n      dup1\n        /* \"#utility.yul\":2059:2075   */\n      calldataload\n        /* \"#utility.yul\":2098:2116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2090:2096   */\n      dup2\n        /* \"#utility.yul\":2087:2117   */\n      gt\n        /* \"#utility.yul\":2084:2134   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2120:2132   */\n      revert\n        /* \"#utility.yul\":2084:2134   */\n    tag_333:\n        /* \"#utility.yul\":2183:2190   */\n      dup6\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2168:2174   */\n      dup3\n        /* \"#utility.yul\":2165:2166   */\n      0x05\n        /* \"#utility.yul\":2161:2175   */\n      shl\n        /* \"#utility.yul\":2157:2159   */\n      dup5\n        /* \"#utility.yul\":2153:2176   */\n      add\n        /* \"#utility.yul\":2149:2181   */\n      add\n        /* \"#utility.yul\":2146:2191   */\n      gt\n        /* \"#utility.yul\":2143:2208   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2143:2208   */\n    tag_334:\n        /* \"#utility.yul\":2235:2237   */\n      0x20\n        /* \"#utility.yul\":2227:2238   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2257:2263   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1659:2269   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2915   */\n    tag_317:\n        /* \"#utility.yul\":2787:2807   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2836:2890   */\n      dup2\n      and\n        /* \"#utility.yul\":2826:2891   */\n      dup2\n      eq\n        /* \"#utility.yul\":2816:2909   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2902:2903   */\n      0x00\n        /* \"#utility.yul\":2895:2907   */\n      revert\n        /* \"#utility.yul\":2816:2909   */\n    tag_337:\n        /* \"#utility.yul\":2719:2915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2920:3220   */\n    tag_105:\n        /* \"#utility.yul\":2988:2994   */\n      0x00\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3037:3046   */\n      dup4\n        /* \"#utility.yul\":3028:3035   */\n      dup6\n        /* \"#utility.yul\":3024:3047   */\n      sub\n        /* \"#utility.yul\":3020:3052   */\n      slt\n        /* \"#utility.yul\":3017:3069   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3017:3069   */\n    tag_339:\n        /* \"#utility.yul\":3088:3117   */\n      tag_340\n        /* \"#utility.yul\":3107:3116   */\n      dup4\n        /* \"#utility.yul\":3088:3117   */\n      tag_317\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3078:3117   */\n      swap5\n        /* \"#utility.yul\":3186:3188   */\n      0x20\n        /* \"#utility.yul\":3171:3189   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3158:3190   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2920:3220   */\n      jump\t// out\n        /* \"#utility.yul\":3225:3637   */\n    tag_109:\n        /* \"#utility.yul\":3292:3298   */\n      0x00\n        /* \"#utility.yul\":3300:3306   */\n      0x00\n        /* \"#utility.yul\":3353:3355   */\n      0x40\n        /* \"#utility.yul\":3341:3350   */\n      dup4\n        /* \"#utility.yul\":3332:3339   */\n      dup6\n        /* \"#utility.yul\":3328:3351   */\n      sub\n        /* \"#utility.yul\":3324:3356   */\n      slt\n        /* \"#utility.yul\":3321:3373   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3369:3370   */\n      0x00\n        /* \"#utility.yul\":3366:3367   */\n      0x00\n        /* \"#utility.yul\":3359:3371   */\n      revert\n        /* \"#utility.yul\":3321:3373   */\n    tag_342:\n        /* \"#utility.yul\":3408:3417   */\n      dup3\n        /* \"#utility.yul\":3395:3418   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":3451:3456   */\n      dup2\n        /* \"#utility.yul\":3447:3485   */\n      and\n        /* \"#utility.yul\":3440:3445   */\n      dup2\n        /* \"#utility.yul\":3437:3486   */\n      eq\n        /* \"#utility.yul\":3427:3504   */\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3497:3498   */\n      0x00\n        /* \"#utility.yul\":3490:3502   */\n      revert\n        /* \"#utility.yul\":3895:4081   */\n    tag_115:\n        /* \"#utility.yul\":3954:3960   */\n      0x00\n        /* \"#utility.yul\":4007:4009   */\n      0x20\n        /* \"#utility.yul\":3995:4004   */\n      dup3\n        /* \"#utility.yul\":3986:3993   */\n      dup5\n        /* \"#utility.yul\":3982:4005   */\n      sub\n        /* \"#utility.yul\":3978:4010   */\n      slt\n        /* \"#utility.yul\":3975:4027   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":4023:4024   */\n      0x00\n        /* \"#utility.yul\":4020:4021   */\n      0x00\n        /* \"#utility.yul\":4013:4025   */\n      revert\n        /* \"#utility.yul\":3975:4027   */\n    tag_346:\n        /* \"#utility.yul\":4046:4075   */\n      tag_347\n        /* \"#utility.yul\":4065:4074   */\n      dup3\n        /* \"#utility.yul\":4046:4075   */\n      tag_317\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4036:4075   */\n      swap4\n        /* \"#utility.yul\":3895:4081   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5564:5748   */\n    tag_318:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5613:5614   */\n      0x00\n        /* \"#utility.yul\":5606:5694   */\n      mstore\n        /* \"#utility.yul\":5713:5717   */\n      0x11\n        /* \"#utility.yul\":5710:5711   */\n      0x04\n        /* \"#utility.yul\":5703:5718   */\n      mstore\n        /* \"#utility.yul\":5737:5741   */\n      0x24\n        /* \"#utility.yul\":5734:5735   */\n      0x00\n        /* \"#utility.yul\":5727:5742   */\n      revert\n        /* \"#utility.yul\":5753:5881   */\n    tag_144:\n        /* \"#utility.yul\":5820:5829   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5841:5852   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5838:5875   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5855:5873   */\n      tag_355\n      tag_318\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5753:5881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7004:7278   */\n    tag_178:\n        /* \"#utility.yul\":7044:7045   */\n      0x00\n        /* \"#utility.yul\":7070:7071   */\n      dup3\n        /* \"#utility.yul\":7060:7249   */\n      tag_360\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7102:7103   */\n      0x00\n        /* \"#utility.yul\":7095:7183   */\n      mstore\n        /* \"#utility.yul\":7206:7210   */\n      0x12\n        /* \"#utility.yul\":7203:7204   */\n      0x04\n        /* \"#utility.yul\":7196:7211   */\n      mstore\n        /* \"#utility.yul\":7234:7238   */\n      0x24\n        /* \"#utility.yul\":7231:7232   */\n      0x00\n        /* \"#utility.yul\":7224:7239   */\n      revert\n        /* \"#utility.yul\":7060:7249   */\n    tag_360:\n      pop\n        /* \"#utility.yul\":7263:7272   */\n      div\n      swap1\n        /* \"#utility.yul\":7004:7278   */\n      jump\t// out\n        /* \"#utility.yul\":7283:7408   */\n    tag_180:\n        /* \"#utility.yul\":7348:7357   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7369:7379   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7366:7402   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":7382:7400   */\n      tag_355\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":7413:7597   */\n    tag_189:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7462:7463   */\n      0x00\n        /* \"#utility.yul\":7455:7543   */\n      mstore\n        /* \"#utility.yul\":7562:7566   */\n      0x32\n        /* \"#utility.yul\":7559:7560   */\n      0x04\n        /* \"#utility.yul\":7552:7567   */\n      mstore\n        /* \"#utility.yul\":7586:7590   */\n      0x24\n        /* \"#utility.yul\":7583:7584   */\n      0x00\n        /* \"#utility.yul\":7576:7591   */\n      revert\n        /* \"#utility.yul\":7957:8125   */\n    tag_229:\n        /* \"#utility.yul\":8030:8039   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8061:8070   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8078:8093   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8072:8094   */\n      dup5\n      eq\n        /* \"#utility.yul\":8058:8095   */\n      or\n        /* \"#utility.yul\":8048:8119   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":8099:8117   */\n      tag_355\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":8130:8314   */\n    tag_258:\n        /* \"#utility.yul\":8200:8206   */\n      0x00\n        /* \"#utility.yul\":8253:8255   */\n      0x20\n        /* \"#utility.yul\":8241:8250   */\n      dup3\n        /* \"#utility.yul\":8232:8239   */\n      dup5\n        /* \"#utility.yul\":8228:8251   */\n      sub\n        /* \"#utility.yul\":8224:8256   */\n      slt\n        /* \"#utility.yul\":8221:8273   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":8269:8270   */\n      0x00\n        /* \"#utility.yul\":8266:8267   */\n      0x00\n        /* \"#utility.yul\":8259:8271   */\n      revert\n        /* \"#utility.yul\":8221:8273   */\n    tag_370:\n      pop\n        /* \"#utility.yul\":8292:8308   */\n      mload\n      swap2\n        /* \"#utility.yul\":8130:8314   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9437:9652   */\n    tag_277:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9505:9539   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":9541:9575   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":9501:9576   */\n      add\n      swap1\n        /* \"#utility.yul\":9588:9623   */\n      dup2\n      gt\n        /* \"#utility.yul\":9585:9646   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":9626:9644   */\n      tag_355\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":10084:10219   */\n    tag_286:\n        /* \"#utility.yul\":10123:10126   */\n      0x00\n        /* \"#utility.yul\":10144:10161   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10141:10184   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":10164:10182   */\n      tag_380\n      tag_318\n      jump\t// in\n    tag_380:\n      pop\n        /* \"#utility.yul\":10211:10212   */\n      0x01\n        /* \"#utility.yul\":10200:10213   */\n      add\n      swap1\n        /* \"#utility.yul\":10084:10219   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122091bc69a6575ed327f6f7caba51903e66c7cb77b90249b3315e8c5fa69a83164764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 151,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:920:10",
										"nodeType": "YulBlock",
										"src": "0:920:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "328:382:10",
													"nodeType": "YulBlock",
													"src": "328:382:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:10",
																"nodeType": "YulBlock",
																"src": "375:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:10",
																					"nodeType": "YulLiteral",
																					"src": "384:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:10",
																					"nodeType": "YulLiteral",
																					"src": "387:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:10"
																			},
																			"nativeSrc": "377:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:10"
																		},
																		"nativeSrc": "377:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:10"
																		},
																		"nativeSrc": "345:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:10",
																		"nodeType": "YulLiteral",
																		"src": "370:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:10"
																},
																"nativeSrc": "341:33:10",
																"nodeType": "YulFunctionCall",
																"src": "341:33:10"
															},
															"nativeSrc": "338:53:10",
															"nodeType": "YulIf",
															"src": "338:53:10"
														},
														{
															"nativeSrc": "400:50:10",
															"nodeType": "YulAssignment",
															"src": "400:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:10"
																},
																"nativeSrc": "410:40:10",
																"nodeType": "YulFunctionCall",
																"src": "410:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:10"
																}
															]
														},
														{
															"nativeSrc": "459:59:10",
															"nodeType": "YulAssignment",
															"src": "459:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nativeSrc": "499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:10"
																},
																"nativeSrc": "469:49:10",
																"nodeType": "YulFunctionCall",
																"src": "469:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:10"
																}
															]
														},
														{
															"nativeSrc": "527:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "527:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "540:1:10",
																"nodeType": "YulLiteral",
																"src": "540:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "531:5:10",
																	"nodeType": "YulTypedName",
																	"src": "531:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "550:34:10",
															"nodeType": "YulAssignment",
															"src": "550:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "569:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "580:2:10",
																				"nodeType": "YulLiteral",
																				"src": "580:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:10"
																		},
																		"nativeSrc": "565:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "559:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "559:5:10"
																},
																"nativeSrc": "559:25:10",
																"nodeType": "YulFunctionCall",
																"src": "559:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "550:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "550:5:10"
																}
															]
														},
														{
															"nativeSrc": "593:15:10",
															"nodeType": "YulAssignment",
															"src": "593:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "603:5:10",
																"nodeType": "YulIdentifier",
																"src": "603:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:10"
																}
															]
														},
														{
															"nativeSrc": "617:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "617:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "632:1:10",
																"nodeType": "YulLiteral",
																"src": "632:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "621:7:10",
																	"nodeType": "YulTypedName",
																	"src": "621:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "642:36:10",
															"nodeType": "YulAssignment",
															"src": "642:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "663:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "674:2:10",
																				"nodeType": "YulLiteral",
																				"src": "674:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "659:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:10"
																		},
																		"nativeSrc": "659:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "659:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:10"
																},
																"nativeSrc": "653:25:10",
																"nodeType": "YulFunctionCall",
																"src": "653:25:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "642:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:10"
																}
															]
														},
														{
															"nativeSrc": "687:17:10",
															"nodeType": "YulAssignment",
															"src": "687:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "697:7:10",
																"nodeType": "YulIdentifier",
																"src": "697:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "196:514:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:10",
														"nodeType": "YulTypedName",
														"src": "270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:10",
														"nodeType": "YulTypedName",
														"src": "281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:10",
														"nodeType": "YulTypedName",
														"src": "293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:10",
														"nodeType": "YulTypedName",
														"src": "301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:10",
														"nodeType": "YulTypedName",
														"src": "309:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:10",
														"nodeType": "YulTypedName",
														"src": "317:6:10",
														"type": ""
													}
												],
												"src": "196:514:10"
											},
											{
												"body": {
													"nativeSrc": "816:102:10",
													"nodeType": "YulBlock",
													"src": "816:102:10",
													"statements": [
														{
															"nativeSrc": "826:26:10",
															"nodeType": "YulAssignment",
															"src": "826:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:10",
																		"nodeType": "YulLiteral",
																		"src": "849:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:10"
																},
																"nativeSrc": "834:18:10",
																"nodeType": "YulFunctionCall",
																"src": "834:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:10",
																								"nodeType": "YulLiteral",
																								"src": "899:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:10",
																								"nodeType": "YulLiteral",
																								"src": "904:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:10"
																						},
																						"nativeSrc": "895:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:10",
																						"nodeType": "YulLiteral",
																						"src": "908:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:10"
																				},
																				"nativeSrc": "891:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:10"
																		},
																		"nativeSrc": "879:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:10"
																},
																"nativeSrc": "861:51:10",
																"nodeType": "YulFunctionCall",
																"src": "861:51:10"
															},
															"nativeSrc": "861:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:10",
														"nodeType": "YulTypedName",
														"src": "785:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:10",
														"nodeType": "YulTypedName",
														"src": "796:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:10",
														"nodeType": "YulTypedName",
														"src": "807:4:10",
														"type": ""
													}
												],
												"src": "715:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101006040525f805460ff60a01b1916815560016002556003819055600455348015610029575f5ffd5b506040516119b33803806119b383398101604081905261004891610101565b338061006d57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61007681610097565b506001600160a01b0393841660c0529190921660e05260a052608052610141565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100fc575f5ffd5b919050565b5f5f5f5f60808587031215610114575f5ffd5b61011d856100e6565b935061012b602086016100e6565b6040860151606090960151949790965092505050565b60805160a05160c05160e0516117ba6101f95f395f818161024b015281816102cb015281816105fb01528181610ba901528181610f65015261103101525f81816101e4015281816103750152818161083801528181610b0f01526111d101525f8181610197015281816108ef01528181610cd101528181610d0501528181610da101528181610e250152610eb101525f81816108ce01528181610d3801528181610d7701528181610dfb0152610e8701526117ba5ff3fe608060405234801561000f575f5ffd5b5060043610610184575f3560e01c8063af7568dd116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610399578063d93c04a0146103ac578063f2fde38b146103d4575f5ffd5b8063ce325bf814610323578063d2d7231f14610360578063d46149a214610373575f5ffd5b8063b6baffe3116100b8578063b6baffe3146102f5578063bc854352146102fd578063beceed3914610310575f5ffd5b8063af7568dd146102bd578063b109beec146102c6578063b5fa91fe146102ed575f5ffd5b806375f12b211161013d5780638e12c0cd116101185780638e12c0cd1461027f5780638f4729b7146102a1578063ac00500f146102aa575f5ffd5b806375f12b21146102265780637c2fdeb5146102495780638da5cb5b1461026f575f5ffd5b8063379607f51161016d578063379607f5146101cc5780636db08f25146101df578063715018a61461021e575f5ffd5b806307da68f514610188578063109cf39914610192575b5f5ffd5b6101906103e7565b005b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101b96101da36600461157a565b610445565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c3565b610190610681565b5f5461023990600160a01b900460ff1681565b60405190151581526020016101c3565b7f0000000000000000000000000000000000000000000000000000000000000000610206565b5f546001600160a01b0316610206565b61028962ed4e0081565b6040516001600160601b0390911681526020016101c3565b6101b960045481565b6101906102b8366004611591565b610694565b6101b960035481565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6101b96108b6565b6101b96108cb565b61019061030b3660046115b1565b610925565b61019061031e36600461157a565b610b43565b61033661033136600461157a565b610c0f565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101c3565b6101b961036e36600461157a565b610cb0565b7f0000000000000000000000000000000000000000000000000000000000000000610206565b6101906103a736600461163d565b610f22565b6103bf6103ba366004611665565b61109f565b604080519283526020830191909152016101c3565b6101906103e236600461168c565b611340565b6103ef611396565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1781556040517f7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd69190a1565b5f815f81118015610457575060025481105b6104a85760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b65204944210000000000000060448201526064015b60405180910390fd5b5f83815260016020526040902080546001600160a01b0316331461050e5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200604482015260640161049f565b8054600160a01b90046001600160601b0316426001600160601b0316101561059e5760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f742060448201527f7065726d69747465642100000000000000000000000000000000000000000000606482015260840161049f565b5f8160020154116105f15760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000604482015260640161049f565b600281015461062a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836113db565b8060045f82825461063b91906116c0565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b610689611396565b6106925f61144f565b565b61069c611396565b815f811180156106ad575060025481105b6106f95760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f821161075a5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b5f8381526001602052604090208054600160a01b90046001600160601b0316426001600160601b031611156107d15760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b80600101548311156108255760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b61085f3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906113db565b82816001015f82825461087291906116c0565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f60016002546108c691906116c0565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060035461091b91906116d9565b6108c691906116f8565b61092d611396565b5f805b82811015610aba5760025484848381811061094d5761094d61170b565b90506020020135106109a15760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f60015f8686858181106109b7576109b761170b565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b03161115610a3c5760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b6001810154610a4b90846116f8565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a8657610a8661170b565b905060200201358260010154604051610aa9929190918252602082015260400190565b60405180910390a150600101610930565b505f8111610b0a5760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000604482015260640161049f565b610b3e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836113db565b505050565b5f8111610ba45760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b610bd97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330846114b6565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b5f5f5f5f845f81118015610c24575060025481105b610c705760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5050505f92835250506001602081905260409091208054918101546002909101546001600160a01b03831693600160a01b9093046001600160601b031692565b5f5f670de0b6b3a764000090505f83600354610ccc91906116f8565b90505f7f0000000000000000000000000000000000000000000000000000000000000000600354610cfd91906116d9565b90505f610d2a7f0000000000000000000000000000000000000000000000000000000000000000846116d9565b9050808203610d7157610d5d7f0000000000000000000000000000000000000000000000000000000000000000836116f8565b610d6790876116d9565b9695505050505050565b5f610d9c7f0000000000000000000000000000000000000000000000000000000000000000846116f8565b6003547f0000000000000000000000000000000000000000000000000000000000000000610dcb8660016116f8565b610dd5919061171f565b610ddf91906116c0565b610de9908761171f565b610df391906116d9565b90505f610e207f0000000000000000000000000000000000000000000000000000000000000000846116f8565b610e4a7f00000000000000000000000000000000000000000000000000000000000000008561171f565b610e5490876116c0565b610e5e908861171f565b610e6891906116d9565b90505f80610e778660016116f8565b90505b84811015610ef457610eac7f0000000000000000000000000000000000000000000000000000000000000000826116f8565b610ed67f00000000000000000000000000000000000000000000000000000000000000008a61171f565b610ee091906116d9565b610eea90836116f8565b9150600101610e7a565b508682610f0183866116f8565b610f0b91906116f8565b610f1591906116d9565b9998505050505050505050565b610f2a611396565b600454610f3790826116f8565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610fb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd69190611736565b10156110245760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b6110586001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836113db565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e13378260405161109391815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff16156110fb5760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f505045442100000000000000000000000000000000604482015260640161049f565b5f83116111705760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201527f61746572207468616e2030210000000000000000000000000000000000000000606482015260840161049f565b62ed4e006001600160601b03851610156111cc5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100604482015260640161049f565b6112017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330866114b6565b5f61120c854261174d565b90505f61121885610cb0565b90505f600254905060405180608001604052806112323390565b6001600160a01b0390811682526001600160601b0386811660208085019190915260408085018c905260609485018890525f878152600180845282822088519489015194909616600160a01b9490951693909302939093178455850151908301559290910151600290910155600380548892906112b09084906116f8565b925050819055508160045f8282546112c891906116f8565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260028054905f61132e8361176c565b90915550909791965090945050505050565b611348611396565b6001600160a01b03811661138a576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161049f565b6113938161144f565b50565b5f546001600160a01b03163314610692576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161049f565b6040516001600160a01b03838116602483015260448201839052610b3e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114f5565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114ef9186918216906323b872dd90608401611408565b50505050565b5f5f60205f8451602086015f885af180611514576040513d5f823e3d81fd5b50505f513d9150811561152b578060011415611538565b6001600160a01b0384163b155b156114ef576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161049f565b5f6020828403121561158a575f5ffd5b5035919050565b5f5f604083850312156115a2575f5ffd5b50508035926020909101359150565b5f5f602083850312156115c2575f5ffd5b823567ffffffffffffffff8111156115d8575f5ffd5b8301601f810185136115e8575f5ffd5b803567ffffffffffffffff8111156115fe575f5ffd5b8560208260051b8401011115611612575f5ffd5b6020919091019590945092505050565b80356001600160a01b0381168114611638575f5ffd5b919050565b5f5f6040838503121561164e575f5ffd5b61165783611622565b946020939093013593505050565b5f5f60408385031215611676575f5ffd5b82356001600160601b0381168114611657575f5ffd5b5f6020828403121561169c575f5ffd5b6116a582611622565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156116d3576116d36116ac565b92915050565b5f826116f357634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156116d3576116d36116ac565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176116d3576116d36116ac565b5f60208284031215611746575f5ffd5b5051919050565b6001600160601b0381811683821601908111156116d3576116d36116ac565b5f6001820161177d5761177d6116ac565b506001019056fea264697066735822122091bc69a6575ed327f6f7caba51903e66c7cb77b90249b3315e8c5fa69a83164764736f6c634300081e0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19B3 CODESIZE SUB DUP1 PUSH2 0x19B3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x48 SWAP2 PUSH2 0x101 JUMP JUMPDEST CALLER DUP1 PUSH2 0x6D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76 DUP2 PUSH2 0x97 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0xC0 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0xE0 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH2 0x141 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x114 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11D DUP6 PUSH2 0xE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x12B PUSH1 0x20 DUP7 ADD PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x17BA PUSH2 0x1F9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x24B ADD MSTORE DUP2 DUP2 PUSH2 0x2CB ADD MSTORE DUP2 DUP2 PUSH2 0x5FB ADD MSTORE DUP2 DUP2 PUSH2 0xBA9 ADD MSTORE DUP2 DUP2 PUSH2 0xF65 ADD MSTORE PUSH2 0x1031 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1E4 ADD MSTORE DUP2 DUP2 PUSH2 0x375 ADD MSTORE DUP2 DUP2 PUSH2 0x838 ADD MSTORE DUP2 DUP2 PUSH2 0xB0F ADD MSTORE PUSH2 0x11D1 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x197 ADD MSTORE DUP2 DUP2 PUSH2 0x8EF ADD MSTORE DUP2 DUP2 PUSH2 0xCD1 ADD MSTORE DUP2 DUP2 PUSH2 0xD05 ADD MSTORE DUP2 DUP2 PUSH2 0xDA1 ADD MSTORE DUP2 DUP2 PUSH2 0xE25 ADD MSTORE PUSH2 0xEB1 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x8CE ADD MSTORE DUP2 DUP2 PUSH2 0xD38 ADD MSTORE DUP2 DUP2 PUSH2 0xD77 ADD MSTORE DUP2 DUP2 PUSH2 0xDFB ADD MSTORE PUSH2 0xE87 ADD MSTORE PUSH2 0x17BA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB6BAFFE3 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8E12C0CD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x16D JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x206 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x681 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x239 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x206 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206 JUMP JUMPDEST PUSH2 0x289 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x206 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x190 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x336 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x163D JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0x1396 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x457 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x62A PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x13DB JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x692 PUSH0 PUSH2 0x144F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69C PUSH2 0x1396 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x85F CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x1396 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x94D JUMPI PUSH2 0x94D PUSH2 0x170B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B7 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xA4B SWAP1 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA86 JUMPI PUSH2 0xA86 PUSH2 0x170B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x930 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB3E PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x13DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xBD9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC24 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD2A PUSH32 0x0 DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xD71 JUMPI PUSH2 0xD5D PUSH32 0x0 DUP4 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xD67 SWAP1 DUP8 PUSH2 0x16D9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD9C PUSH32 0x0 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH32 0x0 PUSH2 0xDCB DUP7 PUSH1 0x1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0xDE9 SWAP1 DUP8 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE20 PUSH32 0x0 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xE4A PUSH32 0x0 DUP6 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xE54 SWAP1 DUP8 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0xE5E SWAP1 DUP9 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xE77 DUP7 PUSH1 0x1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEAC PUSH32 0x0 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xED6 PUSH32 0x0 DUP11 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xEEA SWAP1 DUP4 PUSH2 0x16F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xE7A JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xF01 DUP4 DUP7 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF2A PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xF37 SWAP1 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD6 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1058 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x13DB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1093 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH3 0xED4E00 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1201 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH0 PUSH2 0x120C DUP6 TIMESTAMP PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1218 DUP6 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1232 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x12B0 SWAP1 DUP5 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x132E DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1348 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x144F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB3E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14F5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x14EF SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1408 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x152B JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1612 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1638 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1657 DUP4 PUSH2 0x1622 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1657 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A5 DUP3 PUSH2 0x1622 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1746 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x177D JUMPI PUSH2 0x177D PUSH2 0x16AC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBC PUSH10 0xA6575ED327F6F7CABA51 SWAP1 RETURNDATACOPY PUSH7 0xC7CB77B90249B3 BALANCE MCOPY DUP13 PUSH0 0xA6 SWAP11 DUP4 AND SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "278:6956:8:-:0;;;530:5;508:27;;-1:-1:-1;;;;508:27:8;;;;833:29;;869:28;;;;904:32;;1434:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:10;834:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1573:27:8;;::::1;;::::0;1611:29;;;::::1;;::::0;1651:42:::1;::::0;1704:24:::1;::::0;278:6956;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;580:2;565:18;;559:25;674:2;659:18;;;653:25;196:514;;459:59;;-1:-1:-1;196:514:10;-1:-1:-1;;;196:514:10:o;715:203::-;278:6956:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_INTERVAL_854": {
									"entryPoint": null,
									"id": 854,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MATURITY_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5365,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5014,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5199,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1518": {
									"entryPoint": 2883,
									"id": 1518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchWithdrawCREDI_1489": {
									"entryPoint": 2341,
									"id": 1489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1156": {
									"entryPoint": 3248,
									"id": 1156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1338": {
									"entryPoint": 1093,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCREDIAddress_972": {
									"entryPoint": null,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDifficulty_1168": {
									"entryPoint": 2251,
									"id": 1168,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1028": {
									"entryPoint": 3087,
									"id": 1028,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getStakesCount_993": {
									"entryPoint": 2230,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getxCREDIAddress_983": {
									"entryPoint": null,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1665,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 5302,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 5083,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1265": {
									"entryPoint": 4255,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@stop_1568": {
									"entryPoint": 999,
									"id": 1568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopped_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@time_now_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@total_staked_871": {
									"entryPoint": null,
									"id": 871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4928,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCREDI_1402": {
									"entryPoint": 1684,
									"id": 1402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_1555": {
									"entryPoint": 3874,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xCREDI_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10945:10",
										"nodeType": "YulBlock",
										"src": "0:10945:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:10",
													"nodeType": "YulBlock",
													"src": "115:76:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:25:10",
																"nodeType": "YulFunctionCall",
																"src": "160:25:10"
															},
															"nativeSrc": "160:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "266:156:10",
													"nodeType": "YulBlock",
													"src": "266:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:10",
																"nodeType": "YulBlock",
																"src": "312:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:10",
																					"nodeType": "YulLiteral",
																					"src": "321:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "324:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:10"
																			},
																			"nativeSrc": "314:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:10"
																		},
																		"nativeSrc": "314:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:10"
																		},
																		"nativeSrc": "283:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:10"
																},
																"nativeSrc": "279:32:10",
																"nodeType": "YulFunctionCall",
																"src": "279:32:10"
															},
															"nativeSrc": "276:52:10",
															"nodeType": "YulIf",
															"src": "276:52:10"
														},
														{
															"nativeSrc": "337:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "337:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "350:1:10",
																"nodeType": "YulLiteral",
																"src": "350:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "341:5:10",
																	"nodeType": "YulTypedName",
																	"src": "341:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "360:32:10",
															"nodeType": "YulAssignment",
															"src": "360:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "369:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:10"
																},
																"nativeSrc": "369:23:10",
																"nodeType": "YulFunctionCall",
																"src": "369:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																}
															]
														},
														{
															"nativeSrc": "401:15:10",
															"nodeType": "YulAssignment",
															"src": "401:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "411:5:10",
																"nodeType": "YulIdentifier",
																"src": "411:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:10",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:10",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:10",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													}
												],
												"src": "196:226:10"
											},
											{
												"body": {
													"nativeSrc": "542:125:10",
													"nodeType": "YulBlock",
													"src": "542:125:10",
													"statements": [
														{
															"nativeSrc": "552:26:10",
															"nodeType": "YulAssignment",
															"src": "552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:10"
																},
																"nativeSrc": "560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "594:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "617:42:10",
																				"nodeType": "YulLiteral",
																				"src": "617:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:10"
																		},
																		"nativeSrc": "605:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "605:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:74:10",
																"nodeType": "YulFunctionCall",
																"src": "587:74:10"
															},
															"nativeSrc": "587:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "587:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "427:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "511:9:10",
														"nodeType": "YulTypedName",
														"src": "511:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "522:6:10",
														"nodeType": "YulTypedName",
														"src": "522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "533:4:10",
														"nodeType": "YulTypedName",
														"src": "533:4:10",
														"type": ""
													}
												],
												"src": "427:240:10"
											},
											{
												"body": {
													"nativeSrc": "767:92:10",
													"nodeType": "YulBlock",
													"src": "767:92:10",
													"statements": [
														{
															"nativeSrc": "777:26:10",
															"nodeType": "YulAssignment",
															"src": "777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "789:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "800:2:10",
																		"nodeType": "YulLiteral",
																		"src": "800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:10"
																},
																"nativeSrc": "785:18:10",
																"nodeType": "YulFunctionCall",
																"src": "785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "844:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "844:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "837:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "837:6:10"
																				},
																				"nativeSrc": "837:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "837:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "830:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "830:6:10"
																		},
																		"nativeSrc": "830:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "830:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:10"
																},
																"nativeSrc": "812:41:10",
																"nodeType": "YulFunctionCall",
																"src": "812:41:10"
															},
															"nativeSrc": "812:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "812:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "672:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:10",
														"nodeType": "YulTypedName",
														"src": "736:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "747:6:10",
														"nodeType": "YulTypedName",
														"src": "747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "758:4:10",
														"nodeType": "YulTypedName",
														"src": "758:4:10",
														"type": ""
													}
												],
												"src": "672:187:10"
											},
											{
												"body": {
													"nativeSrc": "965:125:10",
													"nodeType": "YulBlock",
													"src": "965:125:10",
													"statements": [
														{
															"nativeSrc": "975:26:10",
															"nodeType": "YulAssignment",
															"src": "975:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:10"
																},
																"nativeSrc": "983:18:10",
																"nodeType": "YulFunctionCall",
																"src": "983:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "975:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "975:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1032:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1040:42:10",
																				"nodeType": "YulLiteral",
																				"src": "1040:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1028:3:10"
																		},
																		"nativeSrc": "1028:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1028:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1010:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:10"
																},
																"nativeSrc": "1010:74:10",
																"nodeType": "YulFunctionCall",
																"src": "1010:74:10"
															},
															"nativeSrc": "1010:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "1010:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "864:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "934:9:10",
														"nodeType": "YulTypedName",
														"src": "934:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "945:6:10",
														"nodeType": "YulTypedName",
														"src": "945:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "956:4:10",
														"nodeType": "YulTypedName",
														"src": "956:4:10",
														"type": ""
													}
												],
												"src": "864:226:10"
											},
											{
												"body": {
													"nativeSrc": "1194:109:10",
													"nodeType": "YulBlock",
													"src": "1194:109:10",
													"statements": [
														{
															"nativeSrc": "1204:26:10",
															"nodeType": "YulAssignment",
															"src": "1204:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1216:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1216:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:3:10"
																},
																"nativeSrc": "1212:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1212:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1204:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1204:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1246:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1261:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1269:26:10",
																				"nodeType": "YulLiteral",
																				"src": "1269:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:10"
																		},
																		"nativeSrc": "1257:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:10"
																},
																"nativeSrc": "1239:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1239:58:10"
															},
															"nativeSrc": "1239:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1239:58:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "1095:208:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1163:9:10",
														"nodeType": "YulTypedName",
														"src": "1163:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1174:6:10",
														"nodeType": "YulTypedName",
														"src": "1174:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1185:4:10",
														"nodeType": "YulTypedName",
														"src": "1185:4:10",
														"type": ""
													}
												],
												"src": "1095:208:10"
											},
											{
												"body": {
													"nativeSrc": "1395:259:10",
													"nodeType": "YulBlock",
													"src": "1395:259:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1441:16:10",
																"nodeType": "YulBlock",
																"src": "1441:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1443:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:10"
																			},
																			"nativeSrc": "1443:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1443:12:10"
																		},
																		"nativeSrc": "1443:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1416:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1412:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:10"
																		},
																		"nativeSrc": "1412:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:10"
																},
																"nativeSrc": "1408:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1408:32:10"
															},
															"nativeSrc": "1405:52:10",
															"nodeType": "YulIf",
															"src": "1405:52:10"
														},
														{
															"nativeSrc": "1466:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1466:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1479:1:10",
																"nodeType": "YulLiteral",
																"src": "1479:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1470:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1470:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1489:32:10",
															"nodeType": "YulAssignment",
															"src": "1489:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1511:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1498:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1498:12:10"
																},
																"nativeSrc": "1498:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1498:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1489:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1489:5:10"
																}
															]
														},
														{
															"nativeSrc": "1530:15:10",
															"nodeType": "YulAssignment",
															"src": "1530:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1540:5:10",
																"nodeType": "YulIdentifier",
																"src": "1540:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1530:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:10"
																}
															]
														},
														{
															"nativeSrc": "1554:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1554:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1569:1:10",
																"nodeType": "YulLiteral",
																"src": "1569:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1558:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1558:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1579:43:10",
															"nodeType": "YulAssignment",
															"src": "1579:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1607:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1607:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1618:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1603:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1603:3:10"
																		},
																		"nativeSrc": "1603:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1590:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1590:12:10"
																},
																"nativeSrc": "1590:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1590:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1579:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:7:10"
																}
															]
														},
														{
															"nativeSrc": "1631:17:10",
															"nodeType": "YulAssignment",
															"src": "1631:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1641:7:10",
																"nodeType": "YulIdentifier",
																"src": "1641:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1308:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1353:9:10",
														"nodeType": "YulTypedName",
														"src": "1353:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1364:7:10",
														"nodeType": "YulTypedName",
														"src": "1364:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1376:6:10",
														"nodeType": "YulTypedName",
														"src": "1376:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1384:6:10",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													}
												],
												"src": "1308:346:10"
											},
											{
												"body": {
													"nativeSrc": "1764:505:10",
													"nodeType": "YulBlock",
													"src": "1764:505:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1810:16:10",
																"nodeType": "YulBlock",
																"src": "1810:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1819:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1822:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:10"
																			},
																			"nativeSrc": "1812:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:10"
																		},
																		"nativeSrc": "1812:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1785:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:10"
																		},
																		"nativeSrc": "1781:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:10"
																},
																"nativeSrc": "1777:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1777:32:10"
															},
															"nativeSrc": "1774:52:10",
															"nodeType": "YulIf",
															"src": "1774:52:10"
														},
														{
															"nativeSrc": "1835:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1835:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1849:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:12:10"
																},
																"nativeSrc": "1849:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1839:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1839:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1915:16:10",
																"nodeType": "YulBlock",
																"src": "1915:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1924:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1927:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1917:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:10"
																			},
																			"nativeSrc": "1917:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1917:12:10"
																		},
																		"nativeSrc": "1917:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1917:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1895:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1895:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1884:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:10"
																},
																"nativeSrc": "1884:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1884:30:10"
															},
															"nativeSrc": "1881:50:10",
															"nodeType": "YulIf",
															"src": "1881:50:10"
														},
														{
															"nativeSrc": "1940:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1940:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1954:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1965:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:10"
																},
																"nativeSrc": "1950:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1950:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1944:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1944:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2020:16:10",
																"nodeType": "YulBlock",
																"src": "2020:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2029:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2032:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2022:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:10"
																			},
																			"nativeSrc": "2022:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:10"
																		},
																		"nativeSrc": "2022:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1999:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1999:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2003:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2003:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1995:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1995:3:10"
																				},
																				"nativeSrc": "1995:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1995:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2010:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2010:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:10"
																		},
																		"nativeSrc": "1991:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1991:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:10"
																},
																"nativeSrc": "1984:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1984:35:10"
															},
															"nativeSrc": "1981:55:10",
															"nodeType": "YulIf",
															"src": "1981:55:10"
														},
														{
															"nativeSrc": "2045:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2045:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2072:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2072:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2059:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:12:10"
																},
																"nativeSrc": "2059:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2059:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2049:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2049:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2118:16:10",
																"nodeType": "YulBlock",
																"src": "2118:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2127:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2120:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2120:6:10"
																			},
																			"nativeSrc": "2120:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:12:10"
																		},
																		"nativeSrc": "2120:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2120:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2090:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2090:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2098:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2087:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2087:2:10"
																},
																"nativeSrc": "2087:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2087:30:10"
															},
															"nativeSrc": "2084:50:10",
															"nodeType": "YulIf",
															"src": "2084:50:10"
														},
														{
															"body": {
																"nativeSrc": "2192:16:10",
																"nodeType": "YulBlock",
																"src": "2192:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2201:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2204:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2204:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2194:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2194:6:10"
																			},
																			"nativeSrc": "2194:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2194:12:10"
																		},
																		"nativeSrc": "2194:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2157:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2157:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2165:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2165:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2168:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "2168:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2161:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2161:3:10"
																						},
																						"nativeSrc": "2161:14:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2161:14:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2153:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:10"
																				},
																				"nativeSrc": "2153:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2153:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2178:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:10"
																		},
																		"nativeSrc": "2149:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:32:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2183:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2183:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2146:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2146:2:10"
																},
																"nativeSrc": "2146:45:10",
																"nodeType": "YulFunctionCall",
																"src": "2146:45:10"
															},
															"nativeSrc": "2143:65:10",
															"nodeType": "YulIf",
															"src": "2143:65:10"
														},
														{
															"nativeSrc": "2217:21:10",
															"nodeType": "YulAssignment",
															"src": "2217:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2231:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2231:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:10"
																},
																"nativeSrc": "2227:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2227:11:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:10"
																}
															]
														},
														{
															"nativeSrc": "2247:16:10",
															"nodeType": "YulAssignment",
															"src": "2247:16:10",
															"value": {
																"name": "length",
																"nativeSrc": "2257:6:10",
																"nodeType": "YulIdentifier",
																"src": "2257:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1659:610:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1722:9:10",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1733:7:10",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1745:6:10",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1753:6:10",
														"nodeType": "YulTypedName",
														"src": "1753:6:10",
														"type": ""
													}
												],
												"src": "1659:610:10"
											},
											{
												"body": {
													"nativeSrc": "2459:255:10",
													"nodeType": "YulBlock",
													"src": "2459:255:10",
													"statements": [
														{
															"nativeSrc": "2469:27:10",
															"nodeType": "YulAssignment",
															"src": "2469:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2492:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2492:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:10"
																},
																"nativeSrc": "2477:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2477:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2512:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2527:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2527:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2535:42:10",
																				"nodeType": "YulLiteral",
																				"src": "2535:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2523:3:10"
																		},
																		"nativeSrc": "2523:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2523:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2505:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:10"
																},
																"nativeSrc": "2505:74:10",
																"nodeType": "YulFunctionCall",
																"src": "2505:74:10"
															},
															"nativeSrc": "2505:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "2505:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2599:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2610:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2610:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:10"
																		},
																		"nativeSrc": "2595:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2615:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:10"
																},
																"nativeSrc": "2588:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2588:34:10"
															},
															"nativeSrc": "2588:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2588:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2653:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2653:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2638:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:10"
																		},
																		"nativeSrc": "2638:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2638:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:10"
																},
																"nativeSrc": "2631:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2631:34:10"
															},
															"nativeSrc": "2631:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2631:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2696:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2696:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:10"
																		},
																		"nativeSrc": "2681:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2674:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:10"
																},
																"nativeSrc": "2674:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2674:34:10"
															},
															"nativeSrc": "2674:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2674:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2274:440:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:10",
														"nodeType": "YulTypedName",
														"src": "2404:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2415:6:10",
														"nodeType": "YulTypedName",
														"src": "2415:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2423:6:10",
														"nodeType": "YulTypedName",
														"src": "2423:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2431:6:10",
														"nodeType": "YulTypedName",
														"src": "2431:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2439:6:10",
														"nodeType": "YulTypedName",
														"src": "2439:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2450:4:10",
														"nodeType": "YulTypedName",
														"src": "2450:4:10",
														"type": ""
													}
												],
												"src": "2274:440:10"
											},
											{
												"body": {
													"nativeSrc": "2768:147:10",
													"nodeType": "YulBlock",
													"src": "2768:147:10",
													"statements": [
														{
															"nativeSrc": "2778:29:10",
															"nodeType": "YulAssignment",
															"src": "2778:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2800:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2800:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2787:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2787:12:10"
																},
																"nativeSrc": "2787:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2787:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2893:16:10",
																"nodeType": "YulBlock",
																"src": "2893:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2902:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2905:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2905:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2895:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:10"
																			},
																			"nativeSrc": "2895:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2895:12:10"
																		},
																		"nativeSrc": "2895:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2895:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2829:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2829:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2840:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2847:42:10",
																						"nodeType": "YulLiteral",
																						"src": "2847:42:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:54:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:54:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2826:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:2:10"
																		},
																		"nativeSrc": "2826:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2826:65:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:10"
																},
																"nativeSrc": "2819:73:10",
																"nodeType": "YulFunctionCall",
																"src": "2819:73:10"
															},
															"nativeSrc": "2816:93:10",
															"nodeType": "YulIf",
															"src": "2816:93:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "2719:196:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2747:6:10",
														"nodeType": "YulTypedName",
														"src": "2747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2758:5:10",
														"nodeType": "YulTypedName",
														"src": "2758:5:10",
														"type": ""
													}
												],
												"src": "2719:196:10"
											},
											{
												"body": {
													"nativeSrc": "3007:213:10",
													"nodeType": "YulBlock",
													"src": "3007:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:10",
																"nodeType": "YulBlock",
																"src": "3053:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:10"
																			},
																			"nativeSrc": "3055:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:10"
																		},
																		"nativeSrc": "3055:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3028:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3037:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:10"
																		},
																		"nativeSrc": "3024:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3024:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:10"
																},
																"nativeSrc": "3020:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3020:32:10"
															},
															"nativeSrc": "3017:52:10",
															"nodeType": "YulIf",
															"src": "3017:52:10"
														},
														{
															"nativeSrc": "3078:39:10",
															"nodeType": "YulAssignment",
															"src": "3078:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3107:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3107:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3088:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3088:18:10"
																},
																"nativeSrc": "3088:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3088:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:10"
																}
															]
														},
														{
															"nativeSrc": "3126:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3126:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3139:1:10",
																"nodeType": "YulLiteral",
																"src": "3139:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3130:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3130:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3149:41:10",
															"nodeType": "YulAssignment",
															"src": "3149:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:10"
																		},
																		"nativeSrc": "3171:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3158:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:10"
																},
																"nativeSrc": "3158:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3158:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:10"
																}
															]
														},
														{
															"nativeSrc": "3199:15:10",
															"nodeType": "YulAssignment",
															"src": "3199:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3209:5:10",
																"nodeType": "YulIdentifier",
																"src": "3209:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2920:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2965:9:10",
														"nodeType": "YulTypedName",
														"src": "2965:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2976:7:10",
														"nodeType": "YulTypedName",
														"src": "2976:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2988:6:10",
														"nodeType": "YulTypedName",
														"src": "2988:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2996:6:10",
														"nodeType": "YulTypedName",
														"src": "2996:6:10",
														"type": ""
													}
												],
												"src": "2920:300:10"
											},
											{
												"body": {
													"nativeSrc": "3311:326:10",
													"nodeType": "YulBlock",
													"src": "3311:326:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3357:16:10",
																"nodeType": "YulBlock",
																"src": "3357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3366:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3369:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3359:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:10"
																			},
																			"nativeSrc": "3359:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3359:12:10"
																		},
																		"nativeSrc": "3359:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3332:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3332:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:10"
																		},
																		"nativeSrc": "3328:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3328:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3353:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3324:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:10"
																},
																"nativeSrc": "3324:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3324:32:10"
															},
															"nativeSrc": "3321:52:10",
															"nodeType": "YulIf",
															"src": "3321:52:10"
														},
														{
															"nativeSrc": "3382:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3382:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3408:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3395:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3395:12:10"
																},
																"nativeSrc": "3395:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3395:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3386:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3386:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3488:16:10",
																"nodeType": "YulBlock",
																"src": "3488:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3497:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3500:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:10"
																			},
																			"nativeSrc": "3490:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3490:12:10"
																		},
																		"nativeSrc": "3490:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3440:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3440:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3451:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3451:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3458:26:10",
																						"nodeType": "YulLiteral",
																						"src": "3458:26:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3447:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3447:3:10"
																				},
																				"nativeSrc": "3447:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3447:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3437:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3437:2:10"
																		},
																		"nativeSrc": "3437:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3430:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:6:10"
																},
																"nativeSrc": "3430:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:57:10"
															},
															"nativeSrc": "3427:77:10",
															"nodeType": "YulIf",
															"src": "3427:77:10"
														},
														{
															"nativeSrc": "3513:15:10",
															"nodeType": "YulAssignment",
															"src": "3513:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3523:5:10",
																"nodeType": "YulIdentifier",
																"src": "3523:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:10"
																}
															]
														},
														{
															"nativeSrc": "3537:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3537:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3552:1:10",
																"nodeType": "YulLiteral",
																"src": "3552:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3541:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3541:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3562:43:10",
															"nodeType": "YulAssignment",
															"src": "3562:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3590:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3590:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3601:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3601:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:10"
																		},
																		"nativeSrc": "3586:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3573:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3573:12:10"
																},
																"nativeSrc": "3573:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3573:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3562:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3562:7:10"
																}
															]
														},
														{
															"nativeSrc": "3614:17:10",
															"nodeType": "YulAssignment",
															"src": "3614:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3624:7:10",
																"nodeType": "YulIdentifier",
																"src": "3624:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3614:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nativeSrc": "3225:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3269:9:10",
														"nodeType": "YulTypedName",
														"src": "3269:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3280:7:10",
														"nodeType": "YulTypedName",
														"src": "3280:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3292:6:10",
														"nodeType": "YulTypedName",
														"src": "3292:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3300:6:10",
														"nodeType": "YulTypedName",
														"src": "3300:6:10",
														"type": ""
													}
												],
												"src": "3225:412:10"
											},
											{
												"body": {
													"nativeSrc": "3771:119:10",
													"nodeType": "YulBlock",
													"src": "3771:119:10",
													"statements": [
														{
															"nativeSrc": "3781:26:10",
															"nodeType": "YulAssignment",
															"src": "3781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3789:3:10"
																},
																"nativeSrc": "3789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3823:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3834:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:10"
																},
																"nativeSrc": "3816:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3816:25:10"
															},
															"nativeSrc": "3816:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3816:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3872:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3872:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3857:3:10"
																		},
																		"nativeSrc": "3857:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3857:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3877:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:10"
																},
																"nativeSrc": "3850:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3850:34:10"
															},
															"nativeSrc": "3850:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3850:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3642:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3732:9:10",
														"nodeType": "YulTypedName",
														"src": "3732:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3743:6:10",
														"nodeType": "YulTypedName",
														"src": "3743:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3751:6:10",
														"nodeType": "YulTypedName",
														"src": "3751:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3762:4:10",
														"nodeType": "YulTypedName",
														"src": "3762:4:10",
														"type": ""
													}
												],
												"src": "3642:248:10"
											},
											{
												"body": {
													"nativeSrc": "3965:116:10",
													"nodeType": "YulBlock",
													"src": "3965:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4011:16:10",
																"nodeType": "YulBlock",
																"src": "4011:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4020:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4020:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4023:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4023:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4013:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4013:6:10"
																			},
																			"nativeSrc": "4013:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4013:12:10"
																		},
																		"nativeSrc": "4013:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3986:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3986:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3995:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3982:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:10"
																		},
																		"nativeSrc": "3982:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4007:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3978:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3978:3:10"
																},
																"nativeSrc": "3978:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3978:32:10"
															},
															"nativeSrc": "3975:52:10",
															"nodeType": "YulIf",
															"src": "3975:52:10"
														},
														{
															"nativeSrc": "4036:39:10",
															"nodeType": "YulAssignment",
															"src": "4036:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4065:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4046:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4046:18:10"
																},
																"nativeSrc": "4046:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4046:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4036:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3895:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3931:9:10",
														"nodeType": "YulTypedName",
														"src": "3931:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3942:7:10",
														"nodeType": "YulTypedName",
														"src": "3942:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3954:6:10",
														"nodeType": "YulTypedName",
														"src": "3954:6:10",
														"type": ""
													}
												],
												"src": "3895:186:10"
											},
											{
												"body": {
													"nativeSrc": "4260:175:10",
													"nodeType": "YulBlock",
													"src": "4260:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4277:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4288:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:10"
																},
																"nativeSrc": "4270:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4270:21:10"
															},
															"nativeSrc": "4270:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4270:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4311:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4322:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4307:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nativeSrc": "4307:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4327:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4300:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:10"
																},
																"nativeSrc": "4300:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4300:30:10"
															},
															"nativeSrc": "4300:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4300:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4350:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4361:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4346:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:10"
																		},
																		"nativeSrc": "4346:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "4366:27:10",
																		"nodeType": "YulLiteral",
																		"src": "4366:27:10",
																		"type": "",
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4339:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:10"
																},
																"nativeSrc": "4339:55:10",
																"nodeType": "YulFunctionCall",
																"src": "4339:55:10"
															},
															"nativeSrc": "4339:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "4339:55:10"
														},
														{
															"nativeSrc": "4403:26:10",
															"nodeType": "YulAssignment",
															"src": "4403:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4415:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4415:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4426:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4426:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:10"
																},
																"nativeSrc": "4411:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4411:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4403:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4086:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4237:9:10",
														"nodeType": "YulTypedName",
														"src": "4237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4251:4:10",
														"nodeType": "YulTypedName",
														"src": "4251:4:10",
														"type": ""
													}
												],
												"src": "4086:349:10"
											},
											{
												"body": {
													"nativeSrc": "4614:181:10",
													"nodeType": "YulBlock",
													"src": "4614:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4631:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4631:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4642:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4642:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:10"
																},
																"nativeSrc": "4624:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4624:21:10"
															},
															"nativeSrc": "4624:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4624:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4676:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4676:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:10"
																		},
																		"nativeSrc": "4661:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4661:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4654:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:10"
																},
																"nativeSrc": "4654:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4654:30:10"
															},
															"nativeSrc": "4654:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4654:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4715:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4715:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:10"
																		},
																		"nativeSrc": "4700:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4700:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4720:33:10",
																		"nodeType": "YulLiteral",
																		"src": "4720:33:10",
																		"type": "",
																		"value": "ModuleX:Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4693:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:10"
																},
																"nativeSrc": "4693:61:10",
																"nodeType": "YulFunctionCall",
																"src": "4693:61:10"
															},
															"nativeSrc": "4693:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "4693:61:10"
														},
														{
															"nativeSrc": "4763:26:10",
															"nodeType": "YulAssignment",
															"src": "4763:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4786:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4771:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4771:3:10"
																},
																"nativeSrc": "4771:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4771:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4763:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4763:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4440:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4591:9:10",
														"nodeType": "YulTypedName",
														"src": "4591:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4605:4:10",
														"nodeType": "YulTypedName",
														"src": "4605:4:10",
														"type": ""
													}
												],
												"src": "4440:355:10"
											},
											{
												"body": {
													"nativeSrc": "4974:232:10",
													"nodeType": "YulBlock",
													"src": "4974:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:10"
																},
																"nativeSrc": "4984:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4984:21:10"
															},
															"nativeSrc": "4984:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4984:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5036:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5021:3:10"
																		},
																		"nativeSrc": "5021:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5021:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5014:6:10"
																},
																"nativeSrc": "5014:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5014:30:10"
															},
															"nativeSrc": "5014:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5014:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5064:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5064:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5075:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5075:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5060:3:10"
																		},
																		"nativeSrc": "5060:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "5080:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5080:34:10",
																		"type": "",
																		"value": "ModuleX:Early Withdrawal is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5053:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:10"
																},
																"nativeSrc": "5053:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5053:62:10"
															},
															"nativeSrc": "5053:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5053:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5135:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5146:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5131:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:10"
																		},
																		"nativeSrc": "5131:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:10"
																	},
																	{
																		"hexValue": "7065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "5151:12:10",
																		"nodeType": "YulLiteral",
																		"src": "5151:12:10",
																		"type": "",
																		"value": "permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5124:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:10"
																},
																"nativeSrc": "5124:40:10",
																"nodeType": "YulFunctionCall",
																"src": "5124:40:10"
															},
															"nativeSrc": "5124:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "5124:40:10"
														},
														{
															"nativeSrc": "5173:27:10",
															"nodeType": "YulAssignment",
															"src": "5173:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5185:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5196:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5181:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:10"
																},
																"nativeSrc": "5181:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5181:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5173:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5173:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4800:406:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4951:9:10",
														"nodeType": "YulTypedName",
														"src": "4951:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4965:4:10",
														"nodeType": "YulTypedName",
														"src": "4965:4:10",
														"type": ""
													}
												],
												"src": "4800:406:10"
											},
											{
												"body": {
													"nativeSrc": "5385:174:10",
													"nodeType": "YulBlock",
													"src": "5385:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5402:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5402:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:10"
																},
																"nativeSrc": "5395:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5395:21:10"
															},
															"nativeSrc": "5395:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5395:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5436:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5447:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5447:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5432:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:10"
																		},
																		"nativeSrc": "5432:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5432:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5452:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:10"
																},
																"nativeSrc": "5425:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5425:30:10"
															},
															"nativeSrc": "5425:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5425:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5475:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5475:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5486:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5486:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5471:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5471:3:10"
																		},
																		"nativeSrc": "5471:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5471:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "5491:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5491:26:10",
																		"type": "",
																		"value": "ModuleX:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:10"
																},
																"nativeSrc": "5464:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5464:54:10"
															},
															"nativeSrc": "5464:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "5464:54:10"
														},
														{
															"nativeSrc": "5527:26:10",
															"nodeType": "YulAssignment",
															"src": "5527:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:10"
																},
																"nativeSrc": "5535:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5535:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5527:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5211:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5362:9:10",
														"nodeType": "YulTypedName",
														"src": "5362:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5376:4:10",
														"nodeType": "YulTypedName",
														"src": "5376:4:10",
														"type": ""
													}
												],
												"src": "5211:348:10"
											},
											{
												"body": {
													"nativeSrc": "5596:152:10",
													"nodeType": "YulBlock",
													"src": "5596:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5613:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5613:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5616:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5616:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:10"
																},
																"nativeSrc": "5606:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5606:88:10"
															},
															"nativeSrc": "5606:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5606:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5710:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5710:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5713:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5713:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5703:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:10"
																},
																"nativeSrc": "5703:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5703:15:10"
															},
															"nativeSrc": "5703:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5703:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5734:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5734:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5737:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5737:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:10"
																},
																"nativeSrc": "5727:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5727:15:10"
															},
															"nativeSrc": "5727:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5727:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5564:184:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5564:184:10"
											},
											{
												"body": {
													"nativeSrc": "5802:79:10",
													"nodeType": "YulBlock",
													"src": "5802:79:10",
													"statements": [
														{
															"nativeSrc": "5812:17:10",
															"nodeType": "YulAssignment",
															"src": "5812:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5824:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5824:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5827:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5827:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5820:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:10"
																},
																"nativeSrc": "5820:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5820:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5812:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5812:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5853:22:10",
																"nodeType": "YulBlock",
																"src": "5853:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5855:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5855:16:10"
																			},
																			"nativeSrc": "5855:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5855:18:10"
																		},
																		"nativeSrc": "5855:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5855:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5844:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5844:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5850:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5850:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5841:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5841:2:10"
																},
																"nativeSrc": "5841:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5841:11:10"
															},
															"nativeSrc": "5838:37:10",
															"nodeType": "YulIf",
															"src": "5838:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5753:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5784:1:10",
														"nodeType": "YulTypedName",
														"src": "5784:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5787:1:10",
														"nodeType": "YulTypedName",
														"src": "5787:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5793:4:10",
														"nodeType": "YulTypedName",
														"src": "5793:4:10",
														"type": ""
													}
												],
												"src": "5753:128:10"
											},
											{
												"body": {
													"nativeSrc": "6060:231:10",
													"nodeType": "YulBlock",
													"src": "6060:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6077:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6088:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:10"
																},
																"nativeSrc": "6070:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6070:21:10"
															},
															"nativeSrc": "6070:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6070:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6111:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6111:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6122:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6122:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6107:3:10"
																		},
																		"nativeSrc": "6107:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6107:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6127:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:10"
																},
																"nativeSrc": "6100:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6100:30:10"
															},
															"nativeSrc": "6100:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6100:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6150:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6161:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6161:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6146:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:10"
																		},
																		"nativeSrc": "6146:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6146:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "6166:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6166:34:10",
																		"type": "",
																		"value": "ModuleX:amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6139:6:10"
																},
																"nativeSrc": "6139:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6139:62:10"
															},
															"nativeSrc": "6139:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "6139:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6221:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6232:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6232:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6217:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6217:3:10"
																		},
																		"nativeSrc": "6217:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6217:18:10"
																	},
																	{
																		"hexValue": "68616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "6237:11:10",
																		"nodeType": "YulLiteral",
																		"src": "6237:11:10",
																		"type": "",
																		"value": "han zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6210:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:10"
																},
																"nativeSrc": "6210:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6210:39:10"
															},
															"nativeSrc": "6210:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "6210:39:10"
														},
														{
															"nativeSrc": "6258:27:10",
															"nodeType": "YulAssignment",
															"src": "6258:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6270:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6270:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6281:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6281:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6266:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6266:3:10"
																},
																"nativeSrc": "6266:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6266:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6258:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6258:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5886:405:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6037:9:10",
														"nodeType": "YulTypedName",
														"src": "6037:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6051:4:10",
														"nodeType": "YulTypedName",
														"src": "6051:4:10",
														"type": ""
													}
												],
												"src": "5886:405:10"
											},
											{
												"body": {
													"nativeSrc": "6470:171:10",
													"nodeType": "YulBlock",
													"src": "6470:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6487:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6487:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6498:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6498:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6480:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6480:6:10"
																},
																"nativeSrc": "6480:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6480:21:10"
															},
															"nativeSrc": "6480:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6480:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6521:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6521:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6532:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6532:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6517:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6517:3:10"
																		},
																		"nativeSrc": "6517:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6517:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6537:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6510:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:10"
																},
																"nativeSrc": "6510:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6510:30:10"
															},
															"nativeSrc": "6510:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6510:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6560:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6560:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6571:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6571:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6556:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6556:3:10"
																		},
																		"nativeSrc": "6556:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6556:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "6576:23:10",
																		"nodeType": "YulLiteral",
																		"src": "6576:23:10",
																		"type": "",
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6549:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:10"
																},
																"nativeSrc": "6549:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6549:51:10"
															},
															"nativeSrc": "6549:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6549:51:10"
														},
														{
															"nativeSrc": "6609:26:10",
															"nodeType": "YulAssignment",
															"src": "6609:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6621:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6621:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6632:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6632:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6617:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:10"
																},
																"nativeSrc": "6617:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6617:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6609:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6609:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6296:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6447:9:10",
														"nodeType": "YulTypedName",
														"src": "6447:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6461:4:10",
														"nodeType": "YulTypedName",
														"src": "6461:4:10",
														"type": ""
													}
												],
												"src": "6296:345:10"
											},
											{
												"body": {
													"nativeSrc": "6820:179:10",
													"nodeType": "YulBlock",
													"src": "6820:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6837:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6837:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:10"
																},
																"nativeSrc": "6830:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6830:21:10"
															},
															"nativeSrc": "6830:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6830:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6871:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6882:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6867:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:10"
																		},
																		"nativeSrc": "6867:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6867:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6887:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6887:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:10"
																},
																"nativeSrc": "6860:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6860:30:10"
															},
															"nativeSrc": "6860:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6860:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6921:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:10"
																		},
																		"nativeSrc": "6906:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "6926:31:10",
																		"nodeType": "YulLiteral",
																		"src": "6926:31:10",
																		"type": "",
																		"value": "ModuleX:Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6899:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6899:6:10"
																},
																"nativeSrc": "6899:59:10",
																"nodeType": "YulFunctionCall",
																"src": "6899:59:10"
															},
															"nativeSrc": "6899:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "6899:59:10"
														},
														{
															"nativeSrc": "6967:26:10",
															"nodeType": "YulAssignment",
															"src": "6967:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6979:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6979:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6990:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6990:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6975:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6975:3:10"
																},
																"nativeSrc": "6975:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6975:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6967:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6967:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6646:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6797:9:10",
														"nodeType": "YulTypedName",
														"src": "6797:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6811:4:10",
														"nodeType": "YulTypedName",
														"src": "6811:4:10",
														"type": ""
													}
												],
												"src": "6646:353:10"
											},
											{
												"body": {
													"nativeSrc": "7050:228:10",
													"nodeType": "YulBlock",
													"src": "7050:228:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7081:168:10",
																"nodeType": "YulBlock",
																"src": "7081:168:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7102:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7102:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7105:77:10",
																					"nodeType": "YulLiteral",
																					"src": "7105:77:10",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7095:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7095:6:10"
																			},
																			"nativeSrc": "7095:88:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7095:88:10"
																		},
																		"nativeSrc": "7095:88:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7095:88:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7203:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7203:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7206:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7206:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7196:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:10"
																			},
																			"nativeSrc": "7196:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7196:15:10"
																		},
																		"nativeSrc": "7196:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7196:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7231:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7231:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7234:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7234:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7224:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7224:6:10"
																			},
																			"nativeSrc": "7224:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7224:15:10"
																		},
																		"nativeSrc": "7224:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7224:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7070:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7070:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7063:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7063:6:10"
																},
																"nativeSrc": "7063:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7063:9:10"
															},
															"nativeSrc": "7060:189:10",
															"nodeType": "YulIf",
															"src": "7060:189:10"
														},
														{
															"nativeSrc": "7258:14:10",
															"nodeType": "YulAssignment",
															"src": "7258:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7267:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7267:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7270:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7270:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7263:3:10"
																},
																"nativeSrc": "7263:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7263:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7258:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7258:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7004:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7035:1:10",
														"nodeType": "YulTypedName",
														"src": "7035:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7038:1:10",
														"nodeType": "YulTypedName",
														"src": "7038:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7044:1:10",
														"nodeType": "YulTypedName",
														"src": "7044:1:10",
														"type": ""
													}
												],
												"src": "7004:274:10"
											},
											{
												"body": {
													"nativeSrc": "7331:77:10",
													"nodeType": "YulBlock",
													"src": "7331:77:10",
													"statements": [
														{
															"nativeSrc": "7341:16:10",
															"nodeType": "YulAssignment",
															"src": "7341:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7352:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7352:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7355:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7355:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7348:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7348:3:10"
																},
																"nativeSrc": "7348:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7348:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7341:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7380:22:10",
																"nodeType": "YulBlock",
																"src": "7380:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7382:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7382:16:10"
																			},
																			"nativeSrc": "7382:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:18:10"
																		},
																		"nativeSrc": "7382:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7382:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7372:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7372:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7375:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7375:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7369:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7369:2:10"
																},
																"nativeSrc": "7369:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7369:10:10"
															},
															"nativeSrc": "7366:36:10",
															"nodeType": "YulIf",
															"src": "7366:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7283:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7314:1:10",
														"nodeType": "YulTypedName",
														"src": "7314:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7317:1:10",
														"nodeType": "YulTypedName",
														"src": "7317:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7323:3:10",
														"nodeType": "YulTypedName",
														"src": "7323:3:10",
														"type": ""
													}
												],
												"src": "7283:125:10"
											},
											{
												"body": {
													"nativeSrc": "7445:152:10",
													"nodeType": "YulBlock",
													"src": "7445:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7462:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7462:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7465:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7465:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7455:6:10"
																},
																"nativeSrc": "7455:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7455:88:10"
															},
															"nativeSrc": "7455:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7455:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7559:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7559:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7562:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7562:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:10"
																},
																"nativeSrc": "7552:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7552:15:10"
															},
															"nativeSrc": "7552:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7552:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7583:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7583:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7586:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7586:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7576:6:10"
																},
																"nativeSrc": "7576:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7576:15:10"
															},
															"nativeSrc": "7576:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7576:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7413:184:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7413:184:10"
											},
											{
												"body": {
													"nativeSrc": "7776:176:10",
													"nodeType": "YulBlock",
													"src": "7776:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:10"
																},
																"nativeSrc": "7786:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7786:21:10"
															},
															"nativeSrc": "7786:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7786:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7827:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7838:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7823:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:10"
																		},
																		"nativeSrc": "7823:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7843:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7843:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:10"
																},
																"nativeSrc": "7816:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7816:30:10"
															},
															"nativeSrc": "7816:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7816:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7866:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7866:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7877:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7877:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7862:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7862:3:10"
																		},
																		"nativeSrc": "7862:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7862:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
																		"kind": "string",
																		"nativeSrc": "7882:28:10",
																		"nodeType": "YulLiteral",
																		"src": "7882:28:10",
																		"type": "",
																		"value": "ModuleX:Total amount is 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:10"
																},
																"nativeSrc": "7855:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7855:56:10"
															},
															"nativeSrc": "7855:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "7855:56:10"
														},
														{
															"nativeSrc": "7920:26:10",
															"nodeType": "YulAssignment",
															"src": "7920:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7932:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7932:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7943:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7943:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7928:3:10"
																},
																"nativeSrc": "7928:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7928:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7920:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7920:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7602:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7753:9:10",
														"nodeType": "YulTypedName",
														"src": "7753:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7767:4:10",
														"nodeType": "YulTypedName",
														"src": "7767:4:10",
														"type": ""
													}
												],
												"src": "7602:350:10"
											},
											{
												"body": {
													"nativeSrc": "8009:116:10",
													"nodeType": "YulBlock",
													"src": "8009:116:10",
													"statements": [
														{
															"nativeSrc": "8019:20:10",
															"nodeType": "YulAssignment",
															"src": "8019:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8034:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8034:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8037:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8037:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8030:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8030:3:10"
																},
																"nativeSrc": "8030:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8030:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8019:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8019:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8097:22:10",
																"nodeType": "YulBlock",
																"src": "8097:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8099:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8099:16:10"
																			},
																			"nativeSrc": "8099:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8099:18:10"
																		},
																		"nativeSrc": "8099:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8099:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8068:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8068:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8061:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8061:6:10"
																				},
																				"nativeSrc": "8061:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8061:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8075:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "8075:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8082:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "8082:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8091:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "8091:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8078:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8078:3:10"
																						},
																						"nativeSrc": "8078:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8078:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8072:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "8072:2:10"
																				},
																				"nativeSrc": "8072:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8072:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8058:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8058:2:10"
																		},
																		"nativeSrc": "8058:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8058:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8051:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8051:6:10"
																},
																"nativeSrc": "8051:45:10",
																"nodeType": "YulFunctionCall",
																"src": "8051:45:10"
															},
															"nativeSrc": "8048:71:10",
															"nodeType": "YulIf",
															"src": "8048:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7957:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7988:1:10",
														"nodeType": "YulTypedName",
														"src": "7988:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7991:1:10",
														"nodeType": "YulTypedName",
														"src": "7991:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7997:7:10",
														"nodeType": "YulTypedName",
														"src": "7997:7:10",
														"type": ""
													}
												],
												"src": "7957:168:10"
											},
											{
												"body": {
													"nativeSrc": "8211:103:10",
													"nodeType": "YulBlock",
													"src": "8211:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8257:16:10",
																"nodeType": "YulBlock",
																"src": "8257:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8266:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8266:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8269:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8269:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8259:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8259:6:10"
																			},
																			"nativeSrc": "8259:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8259:12:10"
																		},
																		"nativeSrc": "8259:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8259:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8232:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8232:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8241:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8241:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8228:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:10"
																		},
																		"nativeSrc": "8228:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8228:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8253:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8253:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8224:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:10"
																},
																"nativeSrc": "8224:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8224:32:10"
															},
															"nativeSrc": "8221:52:10",
															"nodeType": "YulIf",
															"src": "8221:52:10"
														},
														{
															"nativeSrc": "8282:26:10",
															"nodeType": "YulAssignment",
															"src": "8282:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8298:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8298:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8292:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8292:5:10"
																},
																"nativeSrc": "8292:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8292:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8282:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8282:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8130:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8177:9:10",
														"nodeType": "YulTypedName",
														"src": "8177:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8188:7:10",
														"nodeType": "YulTypedName",
														"src": "8188:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8200:6:10",
														"nodeType": "YulTypedName",
														"src": "8200:6:10",
														"type": ""
													}
												],
												"src": "8130:184:10"
											},
											{
												"body": {
													"nativeSrc": "8493:166:10",
													"nodeType": "YulBlock",
													"src": "8493:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8510:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8510:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8521:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8503:6:10"
																},
																"nativeSrc": "8503:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8503:21:10"
															},
															"nativeSrc": "8503:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8503:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8544:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8555:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8555:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8540:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8540:3:10"
																		},
																		"nativeSrc": "8540:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8540:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8560:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8560:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8533:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:10"
																},
																"nativeSrc": "8533:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8533:30:10"
															},
															"nativeSrc": "8533:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8533:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8583:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8583:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8594:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8594:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8579:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8579:3:10"
																		},
																		"nativeSrc": "8579:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8579:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a53544f5050454421",
																		"kind": "string",
																		"nativeSrc": "8599:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8599:18:10",
																		"type": "",
																		"value": "ModuleX:STOPPED!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8572:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:10"
																},
																"nativeSrc": "8572:46:10",
																"nodeType": "YulFunctionCall",
																"src": "8572:46:10"
															},
															"nativeSrc": "8572:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "8572:46:10"
														},
														{
															"nativeSrc": "8627:26:10",
															"nodeType": "YulAssignment",
															"src": "8627:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8639:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8639:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8650:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8650:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8635:3:10"
																},
																"nativeSrc": "8635:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8635:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8627:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8627:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8319:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8470:9:10",
														"nodeType": "YulTypedName",
														"src": "8470:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8484:4:10",
														"nodeType": "YulTypedName",
														"src": "8484:4:10",
														"type": ""
													}
												],
												"src": "8319:340:10"
											},
											{
												"body": {
													"nativeSrc": "8838:234:10",
													"nodeType": "YulBlock",
													"src": "8838:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8855:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8855:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8866:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8866:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8848:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:10"
																},
																"nativeSrc": "8848:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8848:21:10"
															},
															"nativeSrc": "8848:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8848:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8889:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8889:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8900:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8900:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8885:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8885:3:10"
																		},
																		"nativeSrc": "8885:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8885:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8905:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8905:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8878:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8878:6:10"
																},
																"nativeSrc": "8878:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8878:30:10"
															},
															"nativeSrc": "8878:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8878:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8928:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8928:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8939:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8939:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:10"
																		},
																		"nativeSrc": "8924:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "8944:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8944:34:10",
																		"type": "",
																		"value": "ModuleX:Stake amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8917:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:10"
																},
																"nativeSrc": "8917:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8917:62:10"
															},
															"nativeSrc": "8917:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8917:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8999:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8999:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9010:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9010:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8995:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8995:3:10"
																		},
																		"nativeSrc": "8995:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:18:10"
																	},
																	{
																		"hexValue": "61746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "9015:14:10",
																		"nodeType": "YulLiteral",
																		"src": "9015:14:10",
																		"type": "",
																		"value": "ater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8988:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:10"
																},
																"nativeSrc": "8988:42:10",
																"nodeType": "YulFunctionCall",
																"src": "8988:42:10"
															},
															"nativeSrc": "8988:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "8988:42:10"
														},
														{
															"nativeSrc": "9039:27:10",
															"nodeType": "YulAssignment",
															"src": "9039:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9051:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9051:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9062:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9062:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9047:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:10"
																},
																"nativeSrc": "9047:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9047:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9039:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9039:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8664:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8815:9:10",
														"nodeType": "YulTypedName",
														"src": "8815:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8829:4:10",
														"nodeType": "YulTypedName",
														"src": "8829:4:10",
														"type": ""
													}
												],
												"src": "8664:408:10"
											},
											{
												"body": {
													"nativeSrc": "9251:181:10",
													"nodeType": "YulBlock",
													"src": "9251:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9268:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9268:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9279:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9279:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9261:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:10"
																},
																"nativeSrc": "9261:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9261:21:10"
															},
															"nativeSrc": "9261:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9261:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9302:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9302:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9313:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9313:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9298:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9298:3:10"
																		},
																		"nativeSrc": "9298:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9298:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9318:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9318:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9291:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9291:6:10"
																},
																"nativeSrc": "9291:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9291:30:10"
															},
															"nativeSrc": "9291:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9291:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9341:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9352:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9352:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9337:3:10"
																		},
																		"nativeSrc": "9337:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9337:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
																		"kind": "string",
																		"nativeSrc": "9357:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9357:33:10",
																		"type": "",
																		"value": "ModuleX:Use longer lock_period!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:10"
																},
																"nativeSrc": "9330:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9330:61:10"
															},
															"nativeSrc": "9330:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "9330:61:10"
														},
														{
															"nativeSrc": "9400:26:10",
															"nodeType": "YulAssignment",
															"src": "9400:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9412:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9412:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9423:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9423:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9408:3:10"
																},
																"nativeSrc": "9408:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9408:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9400:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9400:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9077:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9228:9:10",
														"nodeType": "YulTypedName",
														"src": "9228:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9242:4:10",
														"nodeType": "YulTypedName",
														"src": "9242:4:10",
														"type": ""
													}
												],
												"src": "9077:355:10"
											},
											{
												"body": {
													"nativeSrc": "9484:168:10",
													"nodeType": "YulBlock",
													"src": "9484:168:10",
													"statements": [
														{
															"nativeSrc": "9494:82:10",
															"nodeType": "YulAssignment",
															"src": "9494:82:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9509:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "9509:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9512:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9505:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9505:3:10"
																		},
																		"nativeSrc": "9505:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9505:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9545:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "9545:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9548:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9548:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9541:3:10"
																		},
																		"nativeSrc": "9541:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9541:34:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9501:3:10"
																},
																"nativeSrc": "9501:75:10",
																"nodeType": "YulFunctionCall",
																"src": "9501:75:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9494:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9624:22:10",
																"nodeType": "YulBlock",
																"src": "9624:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9626:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9626:16:10"
																			},
																			"nativeSrc": "9626:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9626:18:10"
																		},
																		"nativeSrc": "9626:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9626:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "9591:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9591:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9596:26:10",
																		"nodeType": "YulLiteral",
																		"src": "9596:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9588:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9588:2:10"
																},
																"nativeSrc": "9588:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9588:35:10"
															},
															"nativeSrc": "9585:61:10",
															"nodeType": "YulIf",
															"src": "9585:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "9437:215:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9467:1:10",
														"nodeType": "YulTypedName",
														"src": "9467:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9470:1:10",
														"nodeType": "YulTypedName",
														"src": "9470:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9476:3:10",
														"nodeType": "YulTypedName",
														"src": "9476:3:10",
														"type": ""
													}
												],
												"src": "9437:215:10"
											},
											{
												"body": {
													"nativeSrc": "9840:239:10",
													"nodeType": "YulBlock",
													"src": "9840:239:10",
													"statements": [
														{
															"nativeSrc": "9850:27:10",
															"nodeType": "YulAssignment",
															"src": "9850:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9862:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9873:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9873:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9858:3:10"
																},
																"nativeSrc": "9858:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9858:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9850:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9850:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9893:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9893:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9904:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9904:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9886:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9886:6:10"
																},
																"nativeSrc": "9886:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9886:25:10"
															},
															"nativeSrc": "9886:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "9886:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9931:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9931:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9942:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9942:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9927:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9927:3:10"
																		},
																		"nativeSrc": "9927:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9927:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9951:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9959:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9959:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9947:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9947:3:10"
																		},
																		"nativeSrc": "9947:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9947:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9920:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:10"
																},
																"nativeSrc": "9920:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9920:67:10"
															},
															"nativeSrc": "9920:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "9920:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10007:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10018:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10018:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10003:3:10"
																		},
																		"nativeSrc": "10003:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10003:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10023:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10023:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9996:6:10"
																},
																"nativeSrc": "9996:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9996:34:10"
															},
															"nativeSrc": "9996:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9996:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10050:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10050:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10061:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10061:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10046:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10046:3:10"
																		},
																		"nativeSrc": "10046:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10046:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10066:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10066:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10039:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10039:6:10"
																},
																"nativeSrc": "10039:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10039:34:10"
															},
															"nativeSrc": "10039:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10039:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9657:422:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9785:9:10",
														"nodeType": "YulTypedName",
														"src": "9785:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9796:6:10",
														"nodeType": "YulTypedName",
														"src": "9796:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9804:6:10",
														"nodeType": "YulTypedName",
														"src": "9804:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9812:6:10",
														"nodeType": "YulTypedName",
														"src": "9812:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9820:6:10",
														"nodeType": "YulTypedName",
														"src": "9820:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9831:4:10",
														"nodeType": "YulTypedName",
														"src": "9831:4:10",
														"type": ""
													}
												],
												"src": "9657:422:10"
											},
											{
												"body": {
													"nativeSrc": "10131:88:10",
													"nodeType": "YulBlock",
													"src": "10131:88:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10162:22:10",
																"nodeType": "YulBlock",
																"src": "10162:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10164:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10164:16:10"
																			},
																			"nativeSrc": "10164:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10164:18:10"
																		},
																		"nativeSrc": "10164:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10164:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10147:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10147:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10158:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10158:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10154:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:10"
																		},
																		"nativeSrc": "10154:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10144:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10144:2:10"
																},
																"nativeSrc": "10144:17:10",
																"nodeType": "YulFunctionCall",
																"src": "10144:17:10"
															},
															"nativeSrc": "10141:43:10",
															"nodeType": "YulIf",
															"src": "10141:43:10"
														},
														{
															"nativeSrc": "10193:20:10",
															"nodeType": "YulAssignment",
															"src": "10193:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10204:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10204:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10211:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10211:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10200:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10200:3:10"
																},
																"nativeSrc": "10200:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10200:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10193:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10193:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10084:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10113:5:10",
														"nodeType": "YulTypedName",
														"src": "10113:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10123:3:10",
														"nodeType": "YulTypedName",
														"src": "10123:3:10",
														"type": ""
													}
												],
												"src": "10084:135:10"
											},
											{
												"body": {
													"nativeSrc": "10353:168:10",
													"nodeType": "YulBlock",
													"src": "10353:168:10",
													"statements": [
														{
															"nativeSrc": "10363:26:10",
															"nodeType": "YulAssignment",
															"src": "10363:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10375:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10375:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10386:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10386:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10371:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:10"
																},
																"nativeSrc": "10371:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10371:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10363:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10363:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10405:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10405:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10420:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10420:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10428:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10428:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10416:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10416:3:10"
																		},
																		"nativeSrc": "10416:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10416:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10398:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:10"
																},
																"nativeSrc": "10398:74:10",
																"nodeType": "YulFunctionCall",
																"src": "10398:74:10"
															},
															"nativeSrc": "10398:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "10398:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10492:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10492:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10503:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10503:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10488:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10488:3:10"
																		},
																		"nativeSrc": "10488:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10488:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10508:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10508:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10481:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10481:6:10"
																},
																"nativeSrc": "10481:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10481:34:10"
															},
															"nativeSrc": "10481:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10481:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10224:297:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10314:9:10",
														"nodeType": "YulTypedName",
														"src": "10314:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10325:6:10",
														"nodeType": "YulTypedName",
														"src": "10325:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10333:6:10",
														"nodeType": "YulTypedName",
														"src": "10333:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10344:4:10",
														"nodeType": "YulTypedName",
														"src": "10344:4:10",
														"type": ""
													}
												],
												"src": "10224:297:10"
											},
											{
												"body": {
													"nativeSrc": "10683:260:10",
													"nodeType": "YulBlock",
													"src": "10683:260:10",
													"statements": [
														{
															"nativeSrc": "10693:26:10",
															"nodeType": "YulAssignment",
															"src": "10693:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10705:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10705:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10716:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10716:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10701:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:10"
																},
																"nativeSrc": "10701:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10701:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10693:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10693:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10735:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10735:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10750:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10758:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10758:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10746:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:10"
																		},
																		"nativeSrc": "10746:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10746:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10728:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10728:6:10"
																},
																"nativeSrc": "10728:74:10",
																"nodeType": "YulFunctionCall",
																"src": "10728:74:10"
															},
															"nativeSrc": "10728:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "10728:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10822:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10822:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10833:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10818:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10818:3:10"
																		},
																		"nativeSrc": "10818:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10818:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10842:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10842:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10850:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10850:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10838:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:10"
																		},
																		"nativeSrc": "10838:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10838:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10811:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10811:6:10"
																},
																"nativeSrc": "10811:83:10",
																"nodeType": "YulFunctionCall",
																"src": "10811:83:10"
															},
															"nativeSrc": "10811:83:10",
															"nodeType": "YulExpressionStatement",
															"src": "10811:83:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10914:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10914:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10925:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10925:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10910:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10910:3:10"
																		},
																		"nativeSrc": "10910:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10910:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10930:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10930:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10903:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10903:6:10"
																},
																"nativeSrc": "10903:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10903:34:10"
															},
															"nativeSrc": "10903:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10903:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10526:417:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10636:9:10",
														"nodeType": "YulTypedName",
														"src": "10636:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10647:6:10",
														"nodeType": "YulTypedName",
														"src": "10647:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10655:6:10",
														"nodeType": "YulTypedName",
														"src": "10655:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10663:6:10",
														"nodeType": "YulTypedName",
														"src": "10663:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10674:4:10",
														"nodeType": "YulTypedName",
														"src": "10674:4:10",
														"type": ""
													}
												],
												"src": "10526:417:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ModuleX:Invalid Stake ID!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ModuleX:Early Withdrawal is not \")\n        mstore(add(headStart, 96), \"permitted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ModuleX:Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ModuleX:amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ModuleX:Burnt tokens!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ModuleX:Insufficient balance!\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ModuleX:Total amount is 0!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"ModuleX:STOPPED!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ModuleX:Stake amount must be gre\")\n        mstore(add(headStart, 96), \"ater than 0!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Use longer lock_period!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"852": [
									{
										"length": 32,
										"start": 2254
									},
									{
										"length": 32,
										"start": 3384
									},
									{
										"length": 32,
										"start": 3447
									},
									{
										"length": 32,
										"start": 3579
									},
									{
										"length": 32,
										"start": 3719
									}
								],
								"854": [
									{
										"length": 32,
										"start": 407
									},
									{
										"length": 32,
										"start": 2287
									},
									{
										"length": 32,
										"start": 3281
									},
									{
										"length": 32,
										"start": 3333
									},
									{
										"length": 32,
										"start": 3489
									},
									{
										"length": 32,
										"start": 3621
									},
									{
										"length": 32,
										"start": 3761
									}
								],
								"857": [
									{
										"length": 32,
										"start": 484
									},
									{
										"length": 32,
										"start": 885
									},
									{
										"length": 32,
										"start": 2104
									},
									{
										"length": 32,
										"start": 2831
									},
									{
										"length": 32,
										"start": 4561
									}
								],
								"860": [
									{
										"length": 32,
										"start": 587
									},
									{
										"length": 32,
										"start": 715
									},
									{
										"length": 32,
										"start": 1531
									},
									{
										"length": 32,
										"start": 2985
									},
									{
										"length": 32,
										"start": 3941
									},
									{
										"length": 32,
										"start": 4145
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610184575f3560e01c8063af7568dd116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610399578063d93c04a0146103ac578063f2fde38b146103d4575f5ffd5b8063ce325bf814610323578063d2d7231f14610360578063d46149a214610373575f5ffd5b8063b6baffe3116100b8578063b6baffe3146102f5578063bc854352146102fd578063beceed3914610310575f5ffd5b8063af7568dd146102bd578063b109beec146102c6578063b5fa91fe146102ed575f5ffd5b806375f12b211161013d5780638e12c0cd116101185780638e12c0cd1461027f5780638f4729b7146102a1578063ac00500f146102aa575f5ffd5b806375f12b21146102265780637c2fdeb5146102495780638da5cb5b1461026f575f5ffd5b8063379607f51161016d578063379607f5146101cc5780636db08f25146101df578063715018a61461021e575f5ffd5b806307da68f514610188578063109cf39914610192575b5f5ffd5b6101906103e7565b005b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101b96101da36600461157a565b610445565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c3565b610190610681565b5f5461023990600160a01b900460ff1681565b60405190151581526020016101c3565b7f0000000000000000000000000000000000000000000000000000000000000000610206565b5f546001600160a01b0316610206565b61028962ed4e0081565b6040516001600160601b0390911681526020016101c3565b6101b960045481565b6101906102b8366004611591565b610694565b6101b960035481565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6101b96108b6565b6101b96108cb565b61019061030b3660046115b1565b610925565b61019061031e36600461157a565b610b43565b61033661033136600461157a565b610c0f565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101c3565b6101b961036e36600461157a565b610cb0565b7f0000000000000000000000000000000000000000000000000000000000000000610206565b6101906103a736600461163d565b610f22565b6103bf6103ba366004611665565b61109f565b604080519283526020830191909152016101c3565b6101906103e236600461168c565b611340565b6103ef611396565b5f80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1781556040517f7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd69190a1565b5f815f81118015610457575060025481105b6104a85760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b65204944210000000000000060448201526064015b60405180910390fd5b5f83815260016020526040902080546001600160a01b0316331461050e5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200604482015260640161049f565b8054600160a01b90046001600160601b0316426001600160601b0316101561059e5760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f742060448201527f7065726d69747465642100000000000000000000000000000000000000000000606482015260840161049f565b5f8160020154116105f15760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000604482015260640161049f565b600281015461062a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836113db565b8060045f82825461063b91906116c0565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b610689611396565b6106925f61144f565b565b61069c611396565b815f811180156106ad575060025481105b6106f95760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f821161075a5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b5f8381526001602052604090208054600160a01b90046001600160601b0316426001600160601b031611156107d15760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b80600101548311156108255760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b61085f3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906113db565b82816001015f82825461087291906116c0565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f60016002546108c691906116c0565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060035461091b91906116d9565b6108c691906116f8565b61092d611396565b5f805b82811015610aba5760025484848381811061094d5761094d61170b565b90506020020135106109a15760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5f60015f8686858181106109b7576109b761170b565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b03161115610a3c5760405162461bcd60e51b815260206004820152601560248201527f4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000604482015260640161049f565b6001810154610a4b90846116f8565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a8657610a8661170b565b905060200201358260010154604051610aa9929190918252602082015260400190565b60405180910390a150600101610930565b505f8111610b0a5760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000604482015260640161049f565b610b3e7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836113db565b505050565b5f8111610ba45760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b606482015260840161049f565b610bd97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330846114b6565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b5f5f5f5f845f81118015610c24575060025481105b610c705760405162461bcd60e51b815260206004820152601960248201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604482015260640161049f565b5050505f92835250506001602081905260409091208054918101546002909101546001600160a01b03831693600160a01b9093046001600160601b031692565b5f5f670de0b6b3a764000090505f83600354610ccc91906116f8565b90505f7f0000000000000000000000000000000000000000000000000000000000000000600354610cfd91906116d9565b90505f610d2a7f0000000000000000000000000000000000000000000000000000000000000000846116d9565b9050808203610d7157610d5d7f0000000000000000000000000000000000000000000000000000000000000000836116f8565b610d6790876116d9565b9695505050505050565b5f610d9c7f0000000000000000000000000000000000000000000000000000000000000000846116f8565b6003547f0000000000000000000000000000000000000000000000000000000000000000610dcb8660016116f8565b610dd5919061171f565b610ddf91906116c0565b610de9908761171f565b610df391906116d9565b90505f610e207f0000000000000000000000000000000000000000000000000000000000000000846116f8565b610e4a7f00000000000000000000000000000000000000000000000000000000000000008561171f565b610e5490876116c0565b610e5e908861171f565b610e6891906116d9565b90505f80610e778660016116f8565b90505b84811015610ef457610eac7f0000000000000000000000000000000000000000000000000000000000000000826116f8565b610ed67f00000000000000000000000000000000000000000000000000000000000000008a61171f565b610ee091906116d9565b610eea90836116f8565b9150600101610e7a565b508682610f0183866116f8565b610f0b91906116f8565b610f1591906116d9565b9998505050505050505050565b610f2a611396565b600454610f3790826116f8565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610fb2573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd69190611736565b10156110245760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e636521000000604482015260640161049f565b6110586001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836113db565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e13378260405161109391815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff16156110fb5760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f505045442100000000000000000000000000000000604482015260640161049f565b5f83116111705760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201527f61746572207468616e2030210000000000000000000000000000000000000000606482015260840161049f565b62ed4e006001600160601b03851610156111cc5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100604482015260640161049f565b6112017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330866114b6565b5f61120c854261174d565b90505f61121885610cb0565b90505f600254905060405180608001604052806112323390565b6001600160a01b0390811682526001600160601b0386811660208085019190915260408085018c905260609485018890525f878152600180845282822088519489015194909616600160a01b9490951693909302939093178455850151908301559290910151600290910155600380548892906112b09084906116f8565b925050819055508160045f8282546112c891906116f8565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260028054905f61132e8361176c565b90915550909791965090945050505050565b611348611396565b6001600160a01b03811661138a576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f600482015260240161049f565b6113938161144f565b50565b5f546001600160a01b03163314610692576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161049f565b6040516001600160a01b03838116602483015260448201839052610b3e91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506114f5565b5f80546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114ef9186918216906323b872dd90608401611408565b50505050565b5f5f60205f8451602086015f885af180611514576040513d5f823e3d81fd5b50505f513d9150811561152b578060011415611538565b6001600160a01b0384163b155b156114ef576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161049f565b5f6020828403121561158a575f5ffd5b5035919050565b5f5f604083850312156115a2575f5ffd5b50508035926020909101359150565b5f5f602083850312156115c2575f5ffd5b823567ffffffffffffffff8111156115d8575f5ffd5b8301601f810185136115e8575f5ffd5b803567ffffffffffffffff8111156115fe575f5ffd5b8560208260051b8401011115611612575f5ffd5b6020919091019590945092505050565b80356001600160a01b0381168114611638575f5ffd5b919050565b5f5f6040838503121561164e575f5ffd5b61165783611622565b946020939093013593505050565b5f5f60408385031215611676575f5ffd5b82356001600160601b0381168114611657575f5ffd5b5f6020828403121561169c575f5ffd5b6116a582611622565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156116d3576116d36116ac565b92915050565b5f826116f357634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156116d3576116d36116ac565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176116d3576116d36116ac565b5f60208284031215611746575f5ffd5b5051919050565b6001600160601b0381811683821601908111156116d3576116d36116ac565b5f6001820161177d5761177d6116ac565b506001019056fea264697066735822122091bc69a6575ed327f6f7caba51903e66c7cb77b90249b3315e8c5fa69a83164764736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x184 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x373 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB6BAFFE3 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x310 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8E12C0CD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x2AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x379607F5 GT PUSH2 0x16D JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x206 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x681 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x239 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x206 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x206 JUMP JUMPDEST PUSH2 0x289 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x206 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x190 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x925 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST PUSH2 0x336 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x157A JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x206 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x163D JUMP JUMPDEST PUSH2 0xF22 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x1340 JUMP JUMPDEST PUSH2 0x3EF PUSH2 0x1396 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x457 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x62A PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x13DB JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x692 PUSH0 PUSH2 0x144F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x69C PUSH2 0x1396 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AD JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x825 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x85F CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x13DB JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x92D PUSH2 0x1396 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x94D JUMPI PUSH2 0x94D PUSH2 0x170B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B7 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0xA3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xA4B SWAP1 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA86 JUMPI PUSH2 0xA86 PUSH2 0x170B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAA9 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x930 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xB3E PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x13DB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0xBD9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC24 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD2A PUSH32 0x0 DUP5 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xD71 JUMPI PUSH2 0xD5D PUSH32 0x0 DUP4 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xD67 SWAP1 DUP8 PUSH2 0x16D9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD9C PUSH32 0x0 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH32 0x0 PUSH2 0xDCB DUP7 PUSH1 0x1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0xDE9 SWAP1 DUP8 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE20 PUSH32 0x0 DUP5 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xE4A PUSH32 0x0 DUP6 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xE54 SWAP1 DUP8 PUSH2 0x16C0 JUMP JUMPDEST PUSH2 0xE5E SWAP1 DUP9 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xE68 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xE77 DUP7 PUSH1 0x1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEAC PUSH32 0x0 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xED6 PUSH32 0x0 DUP11 PUSH2 0x171F JUMP JUMPDEST PUSH2 0xEE0 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0xEEA SWAP1 DUP4 PUSH2 0x16F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xE7A JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xF01 DUP4 DUP7 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0xF15 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF2A PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xF37 SWAP1 DUP3 PUSH2 0x16F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD6 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1058 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x13DB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1093 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x49F JUMP JUMPDEST PUSH3 0xED4E00 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1201 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x14B6 JUMP JUMPDEST PUSH0 PUSH2 0x120C DUP6 TIMESTAMP PUSH2 0x174D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1218 DUP6 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1232 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x12B0 SWAP1 DUP5 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x132E DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1348 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x144F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x692 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xB3E SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x14F5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x14EF SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1408 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x152B JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1538 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x49F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x15E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1612 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1638 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1657 DUP4 PUSH2 0x1622 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1657 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A5 DUP3 PUSH2 0x1622 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16F3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1746 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16D3 PUSH2 0x16AC JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x177D JUMPI PUSH2 0x177D PUSH2 0x16AC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBC PUSH10 0xA6575ED327F6F7CABA51 SWAP1 RETURNDATACOPY PUSH7 0xC7CB77B90249B3 BALANCE MCOPY DUP13 PUSH0 0xA6 SWAP11 DUP4 AND SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "278:6956:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7131:98;;;:::i;:::-;;654:41;;;;;;;;160:25:10;;;148:2;133:18;654:41:8;;;;;;;;4636:669;;;;;;:::i;:::-;;:::i;702:29::-;;;;;;;;-1:-1:-1;;;;;605:55:10;;;587:74;;575:2;560:18;702:29:8;427:240:10;2293:101:0;;;:::i;508:27:8:-;;;;;-1:-1:-1;;;508:27:8;;;;;;;;;837:14:10;;830:22;812:41;;800:2;785:18;508:27:8;672:187:10;1859:105:8;1949:6;1859:105;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;543:42:8;;577:8;543:42;;;;;-1:-1:-1;;;;;1257:39:10;;;1239:58;;1227:2;1212:18;543:42:8;1095:208:10;904:32:8;;;;;;5313:556;;;;;;:::i;:::-;;:::i;869:28::-;;;;;;738:30;;;;;1972:101;;;:::i;3503:129::-;;;:::i;5877:712::-;;;;;;:::i;:::-;;:::i;6597:238::-;;;;;;:::i;:::-;;:::i;2081:395::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2523:55:10;;;2505:74;;2610:2;2595:18;;2588:34;;;;2638:18;;;2631:34;2696:2;2681:18;;2674:34;2492:3;2477:19;2081:395:8;2274:440:10;2595:900:8;;;;;;:::i;:::-;;:::i;1748:103::-;1837:5;1748:103;;6843:280;;;;;;:::i;:::-;;:::i;3640:988::-;;;;;;:::i;:::-;;:::i;:::-;;;;3816:25:10;;;3872:2;3857:18;;3850:34;;;;3789:18;3640:988:8;3642:248:10;2543:215:0;;;;;;:::i;:::-;;:::i;7131:98:8:-;1531:13:0;:11;:13::i;:::-;7182:7:8::1;:14:::0;;;::::1;-1:-1:-1::0;;;7182:14:8::1;::::0;;7212:9:::1;::::0;::::1;::::0;7182:7;7212:9:::1;7131:98::o:0;4636:669::-;4708:4;4690:8;1348:1;1337:8;:12;:39;;;;;1364:12;;1353:8;:23;1337:39;1329:77;;;;-1:-1:-1;;;1329:77:8;;4288:2:10;1329:77:8;;;4270:21:10;4327:2;4307:18;;;4300:30;4366:27;4346:18;;;4339:55;4411:18;;1329:77:8;;;;;;;;;4730:28:::1;4761:16:::0;;;:6:::1;:16;::::0;;;;4796:13;;-1:-1:-1;;;;;4796:13:8::1;735:10:6::0;4796:29:8::1;4788:73;;;::::0;-1:-1:-1;;;4788:73:8;;4642:2:10;4788:73:8::1;::::0;::::1;4624:21:10::0;4681:2;4661:18;;;4654:30;4720:33;4700:18;;;4693:61;4771:18;;4788:73:8::1;4440:355:10::0;4788:73:8::1;4894:16:::0;;-1:-1:-1;;;4894:16:8;::::1;-1:-1:-1::0;;;;;4894:16:8::1;2563:15:::0;-1:-1:-1;;;;;4880:30:8::1;;;4872:85;;;::::0;-1:-1:-1;;;4872:85:8;;5002:2:10;4872:85:8::1;::::0;::::1;4984:21:10::0;5041:2;5021:18;;;5014:30;5080:34;5060:18;;;5053:62;5151:12;5131:18;;;5124:40;5181:19;;4872:85:8::1;4800:406:10::0;4872:85:8::1;5001:1;4977:7;:21;;;:25;4969:62;;;::::0;-1:-1:-1;;;4969:62:8;;5413:2:10;4969:62:8::1;::::0;::::1;5395:21:10::0;5452:2;5432:18;;;5425:30;5491:26;5471:18;;;5464:54;5535:18;;4969:62:8::1;5211:348:10::0;4969:62:8::1;5063:21;::::0;::::1;::::0;5095:48:::1;:6;-1:-1:-1::0;;;;;5095:19:8::1;735:10:6::0;5063:21:8;5095:19:::1;:48::i;:::-;5179:13;5159:16;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5227:1:8::1;5203:21;::::0;::::1;:25:::0;5245:20:::1;::::0;160:25:10;;;5245:20:8::1;::::0;148:2:10;133:18;5245:20:8::1;;;;;;;5284:13:::0;4636:669;-1:-1:-1;;;;4636:669:8:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5313:556:8:-;1531:13:0;:11;:13::i;:::-;5398:8:8::1;1348:1;1337:8;:12;:39;;;;;1364:12;;1353:8;:23;1337:39;1329:77;;;::::0;-1:-1:-1;;;1329:77:8;;4288:2:10;1329:77:8::1;::::0;::::1;4270:21:10::0;4327:2;4307:18;;;4300:30;4366:27;4346:18;;;4339:55;4411:18;;1329:77:8::1;4086:349:10::0;1329:77:8::1;5442:1:::2;5433:6;:10;5424:65;;;::::0;-1:-1:-1;;;5424:65:8;;6088:2:10;5424:65:8::2;::::0;::::2;6070:21:10::0;6127:2;6107:18;;;6100:30;6166:34;6146:18;;;6139:62;-1:-1:-1;;;6217:18:10;;;6210:39;6266:19;;5424:65:8::2;5886:405:10::0;5424:65:8::2;5500:28;5531:16:::0;;;:6:::2;:16;::::0;;;;5580;;-1:-1:-1;;;5580:16:8;::::2;-1:-1:-1::0;;;;;5580:16:8::2;2563:15:::0;-1:-1:-1;;;;;5566:30:8::2;;;5558:64;;;::::0;-1:-1:-1;;;5558:64:8;;6498:2:10;5558:64:8::2;::::0;::::2;6480:21:10::0;6537:2;6517:18;;;6510:30;6576:23;6556:18;;;6549:51;6617:18;;5558:64:8::2;6296:345:10::0;5558:64:8::2;5652:7;:20;;;5642:6;:30;;5634:72;;;::::0;-1:-1:-1;;;5634:72:8;;6848:2:10;5634:72:8::2;::::0;::::2;6830:21:10::0;6887:2;6867:18;;;6860:30;6926:31;6906:18;;;6899:59;6975:18;;5634:72:8::2;6646:353:10::0;5634:72:8::2;5718:54;735:10:6::0;5751:20:8::2;::::0;::::2;::::0;-1:-1:-1;;;;;5718:5:8::2;:18;::::0;:54;:18:::2;:54::i;:::-;5807:6;5783:7;:20;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5829:32:8::2;::::0;;3816:25:10;;;3872:2;3857:18;;3850:34;;;5829:32:8::2;::::0;3789:18:10;5829:32:8::2;;;;;;;5413:456;1554:1:0::1;5313:556:8::0;;:::o;1972:101::-;2020:4;2064:1;2049:12;;:16;;;;:::i;:::-;2042:23;;1972:101;:::o;3503:129::-;3550:4;3614:10;3592:19;3579:12;;:32;;;;:::i;:::-;:45;;;;:::i;5877:712::-;1531:13:0;:11;:13::i;:::-;5967:17:8::1;::::0;5999:459:::1;6015:20:::0;;::::1;5999:459;;;6089:12;;6074:9;;6084:1;6074:12;;;;;;;:::i;:::-;;;;;;;:27;6066:65;;;::::0;-1:-1:-1;;;6066:65:8;;4288:2:10;6066:65:8::1;::::0;::::1;4270:21:10::0;4327:2;4307:18;;;4300:30;4366:27;4346:18;;;4339:55;4411:18;;6066:65:8::1;4086:349:10::0;6066:65:8::1;6146:28;6177:6;:20;6184:9;;6194:1;6184:12;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;6177:20:::0;;-1:-1:-1;6177:20:8;::::1;::::0;;;;;;-1:-1:-1;6177:20:8;6234:16;;6177:20;;-1:-1:-1;;;;6234:16:8;::::1;-1:-1:-1::0;;;;;6234:16:8::1;2563:15:::0;-1:-1:-1;;;;;6220:30:8::1;;;6212:64;;;::::0;-1:-1:-1;;;6212:64:8;;6498:2:10;6212:64:8::1;::::0;::::1;6480:21:10::0;6537:2;6517:18;;;6510:30;6576:23;6556:18;;;6549:51;6617:18;;6212:64:8::1;6296:345:10::0;6212:64:8::1;6307:20;::::0;::::1;::::0;6291:36:::1;::::0;;::::1;:::i;:::-;6365:1;6342:20;::::0;::::1;:24:::0;6291:36;-1:-1:-1;6396:50:8::1;6411:9:::0;;6421:1;6411:12;;::::1;;;;;:::i;:::-;;;;;;;6425:7;:20;;;6396:50;;;;;;3816:25:10::0;;;3872:2;3857:18;;3850:34;3804:2;3789:18;;3642:248;6396:50:8::1;;;;;;;;-1:-1:-1::0;6037:3:8::1;;5999:459;;;;6491:1;6476:12;:16;6468:55;;;::::0;-1:-1:-1;;;6468:55:8;;7804:2:10;6468:55:8::1;::::0;::::1;7786:21:10::0;7843:2;7823:18;;;7816:30;7882:28;7862:18;;;7855:56;7928:18;;6468:55:8::1;7602:350:10::0;6468:55:8::1;6535:46;:5;-1:-1:-1::0;;;;;6535:18:8::1;735:10:6::0;6568:12:8;6535:18:::1;:46::i;:::-;5956:633;5877:712:::0;;:::o;6597:238::-;6674:1;6665:6;:10;6656:65;;;;-1:-1:-1;;;6656:65:8;;6088:2:10;6656:65:8;;;6070:21:10;6127:2;6107:18;;;6100:30;6166:34;6146:18;;;6139:62;-1:-1:-1;;;6217:18:10;;;6210:39;6266:19;;6656:65:8;5886:405:10;6656:65:8;6732:60;:6;-1:-1:-1;;;;;6732:23:8;735:10:6;6778:4:8;6785:6;6732:23;:60::i;:::-;6808:19;;160:25:10;;;6808:19:8;;148:2:10;133:18;6808:19:8;;;;;;;6597:238;:::o;2081:395::-;2182:13;2206;2230:17;2258:18;2138:8;1348:1;1337:8;:12;:39;;;;;1364:12;;1353:8;:23;1337:39;1329:77;;;;-1:-1:-1;;;1329:77:8;;4288:2:10;1329:77:8;;;4270:21:10;4327:2;4307:18;;;4300:30;4366:27;4346:18;;;4339:55;4411:18;;1329:77:8;4086:349:10;1329:77:8;-1:-1:-1;;;2316:16:8::1;::::0;;;-1:-1:-1;;2316:6:8::1;:16;::::0;;;;;;;:22;;2393:29;;::::1;::::0;2437:30:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2316:22:8;::::1;::::0;-1:-1:-1;;;2353:25:8;;::::1;-1:-1:-1::0;;;;;2353:25:8::1;::::0;2081:395::o;2595:900::-;2659:4;2682:17;2702:4;2682:24;;2717:15;2750:12;2735;;:27;;;;:::i;:::-;2717:45;;2773:10;2799:19;2786:12;;:32;;;;:::i;:::-;2773:45;-1:-1:-1;2829:11:8;2843:30;2854:19;2843:10;:30;:::i;:::-;2829:44;;2896:6;2887:5;:15;2884:604;;2949:18;2957:10;2949:5;:18;:::i;:::-;2935:33;;:12;:33;:::i;:::-;2928:40;2595:900;-1:-1:-1;;;;;;2595:900:8:o;2884:604::-;3020:10;3096:18;3104:10;3096:5;:18;:::i;:::-;3081:12;;3059:19;3048:9;:5;3056:1;3048:9;:::i;:::-;3047:31;;;;:::i;:::-;:46;;;;:::i;:::-;3033:61;;:12;:61;:::i;:::-;:82;;;;:::i;:::-;3020:95;-1:-1:-1;3130:11:8;3200:19;3209:10;3200:6;:19;:::i;:::-;3171:26;3178:19;3171:6;:26;:::i;:::-;3158:39;;:10;:39;:::i;:::-;3144:54;;:12;:54;:::i;:::-;:76;;;;:::i;:::-;3130:90;-1:-1:-1;3235:13:8;;3278:9;:5;3286:1;3278:9;:::i;:::-;3271:16;;3267:148;3293:6;3289:1;:10;3267:148;;;3384:14;3388:10;3384:1;:14;:::i;:::-;3350:32;3363:19;3350:12;:32;:::i;:::-;:49;;;;:::i;:::-;3338:61;;;;:::i;:::-;;-1:-1:-1;3301:3:8;;3267:148;;;-1:-1:-1;3464:12:8;3456:6;3437:16;3445:8;3437:5;:16;:::i;:::-;:25;;;;:::i;:::-;3436:40;;;;:::i;:::-;3429:47;2595:900;-1:-1:-1;;;;;;;;;2595:900:8:o;6843:280::-;1531:13:0;:11;:13::i;:::-;6980:16:8::1;::::0;6971:25:::1;::::0;:6;:25:::1;:::i;:::-;6936:31;::::0;;;;6961:4:::1;6936:31;::::0;::::1;587:74:10::0;6936:6:8::1;-1:-1:-1::0;;;;;6936:16:8::1;::::0;::::1;::::0;560:18:10;;6936:31:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6928:102;;;::::0;-1:-1:-1;;;6928:102:8;;6848:2:10;6928:102:8::1;::::0;::::1;6830:21:10::0;6887:2;6867:18;;;6860:30;6926:31;6906:18;;;6899:59;6975:18;;6928:102:8::1;6646:353:10::0;6928:102:8::1;7041:31;-1:-1:-1::0;;;;;7041:6:8::1;:19;7061:2:::0;7065:6;7041:19:::1;:31::i;:::-;7104:2;-1:-1:-1::0;;;;;7088:27:8::1;;7108:6;7088:27;;;;160:25:10::0;;148:2;133:18;;14:177;7088:27:8::1;;;;;;;;6843:280:::0;;:::o;3640:988::-;3711:4;3748:7;;3711:4;;-1:-1:-1;;;3748:7:8;;;;3747:8;3739:37;;;;-1:-1:-1;;;3739:37:8;;8521:2:10;3739:37:8;;;8503:21:10;8560:2;8540:18;;;8533:30;8599:18;8579;;;8572:46;8635:18;;3739:37:8;8319:340:10;3739:37:8;3810:1;3795:12;:16;3787:73;;;;-1:-1:-1;;;3787:73:8;;8866:2:10;3787:73:8;;;8848:21:10;8905:2;8885:18;;;8878:30;8944:34;8924:18;;;8917:62;9015:14;8995:18;;;8988:42;9047:19;;3787:73:8;8664:408:10;3787:73:8;577:8;-1:-1:-1;;;;;3879:23:8;;;;3871:67;;;;-1:-1:-1;;;3871:67:8;;9279:2:10;3871:67:8;;;9261:21:10;9318:2;9298:18;;;9291:30;9357:33;9337:18;;;9330:61;9408:18;;3871:67:8;9077:355:10;3871:67:8;3949:65;:5;-1:-1:-1;;;;;3949:22:8;735:10:6;3994:4:8;4001:12;3949:22;:65::i;:::-;4026:15;4044:24;4057:11;2563:15;4044:24;:::i;:::-;4026:42;;4079:18;4100:29;4116:12;4100:15;:29::i;:::-;4079:50;;4140:13;4156:12;;4140:28;;4198:176;;;;;;;;4233:12;735:10:6;;656:96;4233:12:8;-1:-1:-1;;;;;4198:176:8;;;;;-1:-1:-1;;;;;4198:176:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4179:16:8;;;:6;:16;;;;;;:195;;;;;;;;;;-1:-1:-1;;;4179:195:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4395:12;:28;;4198:176;;-1:-1:-1;4395:28:8;;4198:176;;4395:28;:::i;:::-;;;;;;;;4455:13;4435:16;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;4484:69:8;;;9886:25:10;;;-1:-1:-1;;;;;9947:39:10;;9942:2;9927:18;;9920:67;10003:18;;;9996:34;;;10061:2;10046:18;;10039:34;;;4484:69:8;;735:10:6;;4484:69:8;;;;;;9873:3:10;4484:69:8;;;4564:12;:14;;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;4596:8:8;;4606:13;;-1:-1:-1;3640:988:8;;-1:-1:-1;;;;;3640:988:8:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;::::1;::::0;;2700:1:::1;2672:31;::::0;::::1;587:74:10::0;560:18;;2672:31:0::1;427:240:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;;;;735:10:6;1901:40:0;;;587:74:10;560:18;;1901:40:0;427:240:10;1219:160:5;1328:43;;-1:-1:-1;;;;;10416:55:10;;;1328:43:5;;;10398:74:10;10488:18;;;10481:34;;;1301:71:5;;1321:5;;1343:14;;;;;10371:18:10;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;;;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1618:188:5:-;1745:53;;-1:-1:-1;;;;;10746:55:10;;;1745:53:5;;;10728:74:10;10838:55;;;10818:18;;;10811:83;10910:18;;;10903:34;;;1718:81:5;;1738:5;;1760:18;;;;;10701::10;;1745:53:5;10526:417:10;1718:81:5;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;;;;-1:-1:-1;;;;;605:55:10;;9033:40:5;;;587:74:10;560:18;;9033:40:5;427:240:10;196:226;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:10;;196:226;-1:-1:-1;196:226:10:o;1308:346::-;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;-1:-1:-1;;1498:23:10;;;1618:2;1603:18;;;1590:32;;-1:-1:-1;1308:346:10:o;1659:610::-;1745:6;1753;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1862:9;1849:23;1895:18;1887:6;1884:30;1881:50;;;1927:1;1924;1917:12;1881:50;1950:22;;2003:4;1995:13;;1991:27;-1:-1:-1;1981:55:10;;2032:1;2029;2022:12;1981:55;2072:2;2059:16;2098:18;2090:6;2087:30;2084:50;;;2130:1;2127;2120:12;2084:50;2183:7;2178:2;2168:6;2165:1;2161:14;2157:2;2153:23;2149:32;2146:45;2143:65;;;2204:1;2201;2194:12;2143:65;2235:2;2227:11;;;;;2257:6;;-1:-1:-1;1659:610:10;-1:-1:-1;;;1659:610:10:o;2719:196::-;2787:20;;-1:-1:-1;;;;;2836:54:10;;2826:65;;2816:93;;2905:1;2902;2895:12;2816:93;2719:196;;;:::o;2920:300::-;2988:6;2996;3049:2;3037:9;3028:7;3024:23;3020:32;3017:52;;;3065:1;3062;3055:12;3017:52;3088:29;3107:9;3088:29;:::i;:::-;3078:39;3186:2;3171:18;;;;3158:32;;-1:-1:-1;;;2920:300:10:o;3225:412::-;3292:6;3300;3353:2;3341:9;3332:7;3328:23;3324:32;3321:52;;;3369:1;3366;3359:12;3321:52;3408:9;3395:23;-1:-1:-1;;;;;3451:5:10;3447:38;3440:5;3437:49;3427:77;;3500:1;3497;3490:12;3895:186;3954:6;4007:2;3995:9;3986:7;3982:23;3978:32;3975:52;;;4023:1;4020;4013:12;3975:52;4046:29;4065:9;4046:29;:::i;:::-;4036:39;3895:186;-1:-1:-1;;;3895:186:10:o;5564:184::-;-1:-1:-1;;;5613:1:10;5606:88;5713:4;5710:1;5703:15;5737:4;5734:1;5727:15;5753:128;5820:9;;;5841:11;;;5838:37;;;5855:18;;:::i;:::-;5753:128;;;;:::o;7004:274::-;7044:1;7070;7060:189;;-1:-1:-1;;;7102:1:10;7095:88;7206:4;7203:1;7196:15;7234:4;7231:1;7224:15;7060:189;-1:-1:-1;7263:9:10;;7004:274::o;7283:125::-;7348:9;;;7369:10;;;7366:36;;;7382:18;;:::i;7413:184::-;-1:-1:-1;;;7462:1:10;7455:88;7562:4;7559:1;7552:15;7586:4;7583:1;7576:15;7957:168;8030:9;;;8061;;8078:15;;;8072:22;;8058:37;8048:71;;8099:18;;:::i;8130:184::-;8200:6;8253:2;8241:9;8232:7;8228:23;8224:32;8221:52;;;8269:1;8266;8259:12;8221:52;-1:-1:-1;8292:16:10;;8130:184;-1:-1:-1;8130:184:10:o;9437:215::-;-1:-1:-1;;;;;9505:34:10;;;9541;;;9501:75;;9588:35;;9585:61;;;9626:18;;:::i;10084:135::-;10123:3;10144:17;;;10141:43;;10164:18;;:::i;:::-;-1:-1:-1;10211:1:10;10200:13;;10084:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1214800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"DIFFICULTY_INTERVAL()": "infinite",
								"MATURITY()": "260",
								"addRewards(uint256)": "infinite",
								"batchWithdrawCREDI(uint256[])": "infinite",
								"calculateReward(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"getCREDIAddress()": "infinite",
								"getDifficulty()": "infinite",
								"getStake(uint256)": "9039",
								"getStakesCount()": "2470",
								"getxCREDIAddress()": "infinite",
								"owner()": "2419",
								"pending_payments()": "2350",
								"renounceOwnership()": "infinite",
								"stake(uint96,uint256)": "infinite",
								"stop()": "27344",
								"stopped()": "2371",
								"total_staked()": "2329",
								"transferOwnership(address)": "28402",
								"withdrawCREDI(uint256,uint256)": "infinite",
								"withdrawRewards(address,uint256)": "infinite",
								"xCREDI()": "infinite"
							},
							"internal": {
								"time_now()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 530,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 508,
									"end": 535,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 862,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 833,
									"end": 862,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 869,
									"end": 897,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 869,
									"end": 897,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 869,
									"end": 897,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 869,
									"end": 897,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 904,
									"end": 936,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 904,
									"end": 936,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1434,
									"end": 1736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1434,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1573,
									"end": 1600,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1600,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1600,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1600,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1573,
									"end": 1600,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1640,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1640,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1640,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1640,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1611,
									"end": 1640,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1651,
									"end": 1693,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1651,
									"end": 1693,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1704,
									"end": 1728,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1704,
									"end": 1728,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 565,
									"end": 583,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 559,
									"end": 584,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 674,
									"end": 676,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 653,
									"end": 678,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 715,
									"end": 918,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 715,
									"end": 918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "860"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "857"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "854"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "852"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7234,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091bc69a6575ed327f6f7caba51903e66c7cb77b90249b3315e8c5fa69a83164764736f6c634300081e0033",
									".code": [
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "D93C04A0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "D46149A2"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "BECEED39"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "B5FA91FE"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "75F12B21"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "AC00500F"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "75F12B21"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "7DA68F5"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "109CF399"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7234,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7131,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 654,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 695,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 654,
											"end": 695,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4636,
											"end": 5305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4636,
											"end": 5305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 702,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 702,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 702,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 702,
											"end": 731,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "857"
										},
										{
											"begin": 702,
											"end": 731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 702,
											"end": 731,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 702,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 702,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 702,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 575,
											"end": 577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 702,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 837,
											"end": 851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 830,
											"end": 852,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 800,
											"end": 802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 859,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1859,
											"end": 1964,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1859,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 1859,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1859,
											"end": 1964,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 585,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 577,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "ED4E00"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 585,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 543,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1095,
											"end": 1303,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 904,
											"end": 936,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 904,
											"end": 936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 904,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 904,
											"end": 936,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 936,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 904,
											"end": 936,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 904,
											"end": 936,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5313,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5313,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 869,
											"end": 897,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 869,
											"end": 897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 869,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 869,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 869,
											"end": 897,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 869,
											"end": 897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 869,
											"end": 897,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 738,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 738,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 738,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 738,
											"end": 768,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 738,
											"end": 768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 738,
											"end": 768,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1972,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3503,
											"end": 3632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5877,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5877,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6597,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6597,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2579,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2495,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2274,
											"end": 2714,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2595,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2595,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1748,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "857"
										},
										{
											"begin": 1748,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1748,
											"end": 1851,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6843,
											"end": 7123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 6843,
											"end": 7123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3640,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3640,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3642,
											"end": 3890,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 7131,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7196,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7182,
											"end": 7196,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7196,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7221,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7ACC84E34091AE817647A4C49116F5CC07F319078BA80F8F5FDE37EA7E25CBD6"
										},
										{
											"begin": 7212,
											"end": 7221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7221,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7131,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4761,
											"end": 4777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4777,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4825,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4788,
											"end": 4861,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4788,
											"end": 4861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 4861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4788,
											"end": 4861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4440,
											"end": 4795,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 4788,
											"end": 4861,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4894,
											"end": 4910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4910,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4872,
											"end": 4957,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 4957,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5080,
											"end": 5114,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5163,
											"name": "PUSH",
											"source": 10,
											"value": "7065726D69747465642100000000000000000000000000000000000000000000"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4800,
											"end": 5206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4872,
											"end": 4957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4977,
											"end": 4998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4998,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5002,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 5031,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5517,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5553,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5535,
											"end": 5553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5211,
											"end": 5559,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4969,
											"end": 5031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5063,
											"end": 5084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5063,
											"end": 5084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5095,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5095,
											"end": 5114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5063,
											"end": 5084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5095,
											"end": 5143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5095,
											"end": 5143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5095,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5192,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5159,
											"end": 5175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5159,
											"end": 5192,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5159,
											"end": 5192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5159,
											"end": 5192,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5227,
											"end": 5228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5203,
											"end": 5224,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5228,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19"
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5245,
											"end": 5265,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5297,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 5305,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4636,
											"end": 5305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1349,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1364,
											"end": 1376,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1376,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1337,
											"end": 1376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1329,
											"end": 1406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5442,
											"end": 5443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5439,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5443,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5489,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5424,
											"end": 5489,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6100,
											"end": 6130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5886,
											"end": 6291,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5424,
											"end": 5489,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5537,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5531,
											"end": 5547,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5531,
											"end": 5547,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5596,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5596,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5596,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5596,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5596,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5596,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5596,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5622,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5558,
											"end": 5622,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6539,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6540,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6599,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6296,
											"end": 6641,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5558,
											"end": 5622,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5659,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5672,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5652,
											"end": 5672,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5672,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5648,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5672,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5672,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5634,
											"end": 5706,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5634,
											"end": 5706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5706,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5634,
											"end": 5706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6889,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6926,
											"end": 6957,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6646,
											"end": 6999,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5634,
											"end": 5706,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5772,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5771,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5751,
											"end": 5771,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5751,
											"end": 5771,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5751,
											"end": 5771,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5718,
											"end": 5723,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "857"
										},
										{
											"begin": 5718,
											"end": 5736,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5736,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5718,
											"end": 5772,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5718,
											"end": 5772,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5718,
											"end": 5772,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5807,
											"end": 5813,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5790,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5783,
											"end": 5803,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5803,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 5783,
											"end": 5813,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5783,
											"end": 5813,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5861,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 5829,
											"end": 5861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5829,
											"end": 5861,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5869,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2020,
											"end": 2024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2049,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3503,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3624,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "852"
										},
										{
											"begin": 3592,
											"end": 3611,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3579,
											"end": 3591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3579,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3579,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 3579,
											"end": 3624,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3579,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 5984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5984,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6015,
											"end": 6035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6089,
											"end": 6101,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6083,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6083,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6085,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6074,
											"end": 6086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6086,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6101,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6066,
											"end": 6131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6066,
											"end": 6131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6066,
											"end": 6131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6177,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6193,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6193,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6195,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6184,
											"end": 6196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6196,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6250,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6177,
											"end": 6197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6234,
											"end": 6250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6250,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6234,
											"end": 6250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6220,
											"end": 6250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6250,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6276,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6276,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6500,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6212,
											"end": 6276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6539,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6540,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6599,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6296,
											"end": 6641,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6212,
											"end": 6276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6307,
											"end": 6327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6307,
											"end": 6327,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6291,
											"end": 6327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 6291,
											"end": 6327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6342,
											"end": 6362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6342,
											"end": 6362,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6366,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6411,
											"end": 6423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6423,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6432,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6425,
											"end": 6445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3890,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6396,
											"end": 6446,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6037,
											"end": 6040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6037,
											"end": 6040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5999,
											"end": 6458,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6491,
											"end": 6492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6476,
											"end": 6492,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6523,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6523,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6523,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6468,
											"end": 6523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7807,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7845,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7862,
											"end": 7880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7952,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6468,
											"end": 6523,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6535,
											"end": 6581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6535,
											"end": 6540,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "857"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6535,
											"end": 6553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6580,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6535,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6535,
											"end": 6581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6535,
											"end": 6581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6535,
											"end": 6581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5877,
											"end": 6589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6665,
											"end": 6675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6100,
											"end": 6130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6139,
											"end": 6201,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6210,
											"end": 6249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5886,
											"end": 6291,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 6656,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 6732,
											"end": 6738,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6755,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6785,
											"end": 6791,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 6732,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 6732,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6827,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2081,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2146,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1364,
											"end": 1376,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1376,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1337,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4393,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1329,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2316,
											"end": 2332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2338,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2378,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2378,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2378,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2682,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2762,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2735,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2818,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 2786,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2786,
											"end": 2798,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2786,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2829,
											"end": 2840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2854,
											"end": 2873,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 2843,
											"end": 2853,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2843,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2873,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2843,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2884,
											"end": 3488,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "852"
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2949,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2947,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2935,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2928,
											"end": 2968,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2884,
											"end": 3488,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2884,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "852"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3096,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3093,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3081,
											"end": 3093,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3059,
											"end": 3078,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3048,
											"end": 3053,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3048,
											"end": 3057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3047,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3047,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3047,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3047,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3045,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3033,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3033,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3033,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3020,
											"end": 3115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3130,
											"end": 3141,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "852"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3200,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3200,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3178,
											"end": 3197,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 3171,
											"end": 3177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3171,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3171,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3168,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3158,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3158,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3144,
											"end": 3198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3144,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3144,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3235,
											"end": 3248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3248,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3278,
											"end": 3283,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3278,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3289,
											"end": 3299,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3388,
											"end": 3398,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "852"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3384,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3363,
											"end": 3382,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "854"
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3350,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3382,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3350,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3350,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3350,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3338,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3301,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3301,
											"end": 3304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3267,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3437,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3437,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3437,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3437,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3436,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3436,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3476,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 3495,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6980,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 6977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 6996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6971,
											"end": 6996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6971,
											"end": 6996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 6971,
											"end": 6996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6967,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"name": "PUSH",
											"source": 8,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6936,
											"end": 6967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6961,
											"end": 6965,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6936,
											"end": 6967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 6942,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6936,
											"end": 6952,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6936,
											"end": 6952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 6936,
											"end": 6967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6936,
											"end": 6967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6996,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 6996,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6928,
											"end": 7030,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6928,
											"end": 7030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 7030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6928,
											"end": 7030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6887,
											"end": 6889,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6860,
											"end": 6890,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6926,
											"end": 6957,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6958,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6646,
											"end": 6999,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6928,
											"end": 7030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7072,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7041,
											"end": 7047,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 7041,
											"end": 7060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7041,
											"end": 7072,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7041,
											"end": 7072,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7041,
											"end": 7072,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7104,
											"end": 7106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337"
										},
										{
											"begin": 7108,
											"end": 7114,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7088,
											"end": 7115,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6843,
											"end": 7123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8560,
											"end": 8562,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A53544F505045442100000000000000000000000000000000"
										},
										{
											"begin": 8579,
											"end": 8597,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8579,
											"end": 8597,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8579,
											"end": 8597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8319,
											"end": 8659,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3739,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3807,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3811,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8878,
											"end": 8908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8978,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265"
										},
										{
											"begin": 8924,
											"end": 8942,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8924,
											"end": 8942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8924,
											"end": 8942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8917,
											"end": 8979,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9029,
											"name": "PUSH",
											"source": 10,
											"value": "61746572207468616E2030210000000000000000000000000000000000000000"
										},
										{
											"begin": 8995,
											"end": 9013,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8995,
											"end": 9013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8995,
											"end": 9013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 8664,
											"end": 9072,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3787,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 577,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "ED4E00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9261,
											"end": 9282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9318,
											"end": 9320,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9298,
											"end": 9316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9357,
											"end": 9390,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100"
										},
										{
											"begin": 9337,
											"end": 9355,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9337,
											"end": 9355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9408,
											"end": 9426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 9077,
											"end": 9432,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3871,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3949,
											"end": 3954,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "857"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3949,
											"end": 3971,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4013,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3949,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 4014,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3949,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4057,
											"end": 4068,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4044,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4044,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4116,
											"end": 4128,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4100,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4129,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4100,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4233,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4245,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4233,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4185,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4195,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4374,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4395,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4451,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4435,
											"end": 4451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4435,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9886,
											"end": 9911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9947,
											"end": 9986,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9947,
											"end": 9986,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10030,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10063,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10046,
											"end": 10064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10046,
											"end": 10064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10073,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10039,
											"end": 10073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "PUSH",
											"source": 8,
											"value": "24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146"
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9873,
											"end": 9876,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4553,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4564,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4578,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4619,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4619,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 4628,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3640,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10416,
											"end": 10471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10471,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10398,
											"end": 10472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10506,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10488,
											"end": 10506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10488,
											"end": 10506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10515,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10481,
											"end": 10515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10746,
											"end": 10801,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10801,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10801,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10728,
											"end": 10802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10838,
											"end": 10893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10838,
											"end": 10893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10838,
											"end": 10893,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10903,
											"end": 10937,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10903,
											"end": 10937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10903,
											"end": 10937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 10526,
											"end": 10943,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 196,
											"end": 422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1809,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1872,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1914,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2117,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2132,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2190,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2149,
											"end": 2181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2191,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2890,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2891,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 3220,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2920,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 3088,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3637,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3225,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3356,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3427,
											"end": 3504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3993,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4010,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4025,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4065,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4046,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4075,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5748,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5564,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5694,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5713,
											"end": 5717,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5703,
											"end": 5718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5741,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5742,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5841,
											"end": 5852,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5838,
											"end": 5875,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5855,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 5855,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7278,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7004,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 7060,
											"end": 7249,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7206,
											"end": 7210,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7203,
											"end": 7204,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7196,
											"end": 7211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7239,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7249,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 7060,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7408,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7283,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7402,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7366,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7366,
											"end": 7402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7382,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7413,
											"end": 7597,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7413,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7566,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7591,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8125,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 7957,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8039,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8030,
											"end": 8039,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8094,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8095,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8048,
											"end": 8119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8099,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8314,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 8130,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8200,
											"end": 8206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8239,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8251,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8256,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8273,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8221,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8269,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8221,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8292,
											"end": 8308,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8292,
											"end": 8308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8130,
											"end": 8314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8130,
											"end": 8314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9652,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9437,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9505,
											"end": 9539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9539,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9575,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9623,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9646,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9585,
											"end": 9646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9626,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 9626,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10219,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 10084,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10123,
											"end": 10126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10164,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 10164,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10182,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 10164,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10200,
											"end": 10213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10200,
											"end": 10213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX_immutable.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"DIFFICULTY_INTERVAL()": "109cf399",
							"MATURITY()": "8e12c0cd",
							"addRewards(uint256)": "beceed39",
							"batchWithdrawCREDI(uint256[])": "bc854352",
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStake(uint256)": "ce325bf8",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"owner()": "8da5cb5b",
							"pending_payments()": "8f4729b7",
							"renounceOwnership()": "715018a6",
							"stake(uint96,uint256)": "d93c04a0",
							"stop()": "07da68f5",
							"stopped()": "75f12b21",
							"total_staked()": "af7568dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCREDI(uint256,uint256)": "ac00500f",
							"withdrawRewards(address,uint256)": "d6ef7af0",
							"xCREDI()": "b109beec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credi_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xcredi_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY_INTERVAL\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CREDIWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Stopped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURITY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stake_ids\",\"type\":\"uint256[]\"}],\"name\":\"batchWithdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xCREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ModuleX_immutable.sol\":\"ModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ModuleX_immutable.sol\":{\"keccak256\":\"0x81c41ce24fc3e3715d32ac1c0c6c9550dbeb6ce41fe36feca7646990e0aabcad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2df32b6ae85c36549eff798b58593c10bf1ce45ef4b82e64929bf4696f3b012\",\"dweb:/ipfs/QmYMFGRdUK1yZ3pV6MQ87TyoyiigEGsdj84sSjVcYUouXo\"]},\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 847,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "stopped",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 865,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)844_storage)"
							},
							{
								"astId": 868,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "stakes_count",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 871,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "total_staked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "contracts/ModuleX_immutable.sol:ModuleX",
								"label": "pending_payments",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)844_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ModuleX.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)844_storage"
							},
							"t_struct(StakeDetails)844_storage": {
								"encoding": "inplace",
								"label": "struct ModuleX.StakeDetails",
								"members": [
									{
										"astId": 837,
										"contract": "contracts/ModuleX_immutable.sol:ModuleX",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 839,
										"contract": "contracts/ModuleX_immutable.sol:ModuleX",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 841,
										"contract": "contracts/ModuleX_immutable.sol:ModuleX",
										"label": "stake_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 843,
										"contract": "contracts/ModuleX_immutable.sol:ModuleX",
										"label": "reward_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IModuleX.sol": {
				"IModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"stake(uint96,uint256)": "d93c04a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IModuleX.sol\":\"IModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 821,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/ModuleX_immutable.sol": {
				"ast": {
					"absolutePath": "contracts/ModuleX_immutable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IModuleX": [
							1617
						],
						"ModuleX": [
							1569
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 316,
							"src": "115:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 780,
							"src": "173:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IModuleX.sol",
							"file": "./interface/IModuleX.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1570,
							"sourceUnit": 1618,
							"src": "240:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IModuleX",
										"nameLocations": [
											"298:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1617,
										"src": "298:8:8"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "298:8:8"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"308:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:8"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:8"
								}
							],
							"canonicalName": "ModuleX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1569,
							"linearizedBaseContracts": [
								1569,
								147,
								809,
								1617
							],
							"name": "ModuleX",
							"nameLocation": "287:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 835,
									"libraryName": {
										"id": 832,
										"name": "SafeERC20",
										"nameLocations": [
											"331:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "331:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "325:27:8",
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"345:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "345:6:8"
										},
										"referencedDeclaration": 315,
										"src": "345:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ModuleX.StakeDetails",
									"id": 844,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "404:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "396:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "427:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "420:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 838,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "451:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "446:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "479:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "474:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "367:12:8",
									"nodeType": "StructDefinition",
									"scope": 1569,
									"src": "360:140:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f12b21",
									"id": 847,
									"mutability": "mutable",
									"name": "stopped",
									"nameLocation": "520:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "508:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 845,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "508:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e12c0cd",
									"id": 850,
									"mutability": "constant",
									"name": "MATURITY",
									"nameLocation": "566:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "543:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 848,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "543:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "577:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 852,
									"mutability": "immutable",
									"name": "DIFFICULTY",
									"nameLocation": "615:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "592:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "592:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "109cf399",
									"id": 854,
									"mutability": "immutable",
									"name": "DIFFICULTY_INTERVAL",
									"nameLocation": "676:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "654:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 853,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "654:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 857,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "726:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "702:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 856,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 855,
											"name": "IERC20",
											"nameLocations": [
												"702:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "702:6:8"
										},
										"referencedDeclaration": 315,
										"src": "702:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b109beec",
									"id": 860,
									"mutability": "immutable",
									"name": "xCREDI",
									"nameLocation": "762:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "738:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 858,
											"name": "IERC20",
											"nameLocations": [
												"738:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "738:6:8"
										},
										"referencedDeclaration": 315,
										"src": "738:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 865,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "820:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "781:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
										"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
									},
									"typeName": {
										"id": 864,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 861,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "790:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "781:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
											"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 863,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 862,
												"name": "StakeDetails",
												"nameLocations": [
													"798:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "798:12:8"
											},
											"referencedDeclaration": 844,
											"src": "798:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
												"typeString": "struct ModuleX.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "846:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "833:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 866,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "833:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 867,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "861:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "af7568dd",
									"id": 871,
									"mutability": "mutable",
									"name": "total_staked",
									"nameLocation": "881:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "869:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 869,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "869:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "896:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f4729b7",
									"id": 874,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "916:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1569,
									"src": "904:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 872,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "904:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "935:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 878,
									"name": "RewardAdded",
									"nameLocation": "951:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "968:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "963:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "963:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:13:8"
									},
									"src": "945:31:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337",
									"id": 884,
									"name": "RewardWithdrawn",
									"nameLocation": "988:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1020:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1004:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1029:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1024:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1024:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:33:8"
									},
									"src": "982:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146",
									"id": 896,
									"name": "Staked",
									"nameLocation": "1049:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1072:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1056:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1083:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1078:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1093:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 889,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1093:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1115:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1134:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1129:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1129:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:94:8"
									},
									"src": "1043:107:8"
								},
								{
									"anonymous": false,
									"eventSelector": "03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c",
									"id": 902,
									"name": "CREDIWithdrawn",
									"nameLocation": "1162:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1182:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1177:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1197:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1192:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1192:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:28:8"
									},
									"src": "1156:49:8"
								},
								{
									"anonymous": false,
									"eventSelector": "67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19",
									"id": 906,
									"name": "RewardPaid",
									"nameLocation": "1217:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1233:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1228:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1228:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:15:8"
									},
									"src": "1211:32:8"
								},
								{
									"anonymous": false,
									"eventSelector": "7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd6",
									"id": 908,
									"name": "Stopped",
									"nameLocation": "1255:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:2:8"
									},
									"src": "1249:16:8"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1318:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "1337:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1348:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1337:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 916,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "1353:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 917,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1364:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1353:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1337:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1378:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															},
															"value": "ModuleX:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															}
														],
														"id": 912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1329:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1329:77:8"
											},
											{
												"id": 923,
												"nodeType": "PlaceholderStatement",
												"src": "1417:1:8"
											}
										]
									},
									"id": 925,
									"name": "validate_stake",
									"nameLocation": "1282:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1302:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1297:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:15:8"
									},
									"src": "1273:153:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1561:175:8",
										"statements": [
											{
												"expression": {
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 940,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "1573:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 942,
																"name": "_credi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "1588:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 941,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1581:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1581:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1573:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1573:27:8"
											},
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "xCREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1611:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 948,
																"name": "_xcredi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "1627:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 947,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1620:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1620:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1611:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1611:29:8"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "1651:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 953,
														"name": "_DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1673:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1651:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1651:42:8"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 956,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "1704:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 957,
														"name": "_DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1717:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1704:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1704:24:8"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 936,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1542:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 938,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 935,
												"name": "Ownable",
												"nameLocations": [
													"1534:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1534:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1534:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_credi_addr",
												"nameLocation": "1454:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1446:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "_xcredi_addr",
												"nameLocation": "1475:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1467:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_DIFFICULTY",
												"nameLocation": "1494:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1489:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1489:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_DIFFICULTY_INTERVAL",
												"nameLocation": "1512:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1507:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1507:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:88:8"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:8"
									},
									"scope": 1569,
									"src": "1434:302:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1576
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1811:40:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "1837:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1829:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 966,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1829:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "1822:21:8"
											}
										]
									},
									"functionSelector": "d46149a2",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "1757:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:8"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1797:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1797:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:9:8"
									},
									"scope": 1569,
									"src": "1748:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1581
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "1923:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1949:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1941:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 977,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1941:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 981,
												"nodeType": "Return",
												"src": "1934:22:8"
											}
										]
									},
									"functionSelector": "7c2fdeb5",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "1868:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1909:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:9:8"
									},
									"scope": 1569,
									"src": "1859:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1586
									],
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "2031:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "2049:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2049:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 987,
												"id": 991,
												"nodeType": "Return",
												"src": "2042:23:8"
											}
										]
									},
									"functionSelector": "b5fa91fe",
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "1981:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1995:2:8"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2020:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2020:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:6:8"
									},
									"scope": 1569,
									"src": "1972:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2283:193:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1009,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2316:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1011,
																"indexExpression": {
																	"id": 1010,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2323:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2316:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2333:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2316:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1013,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2353:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1015,
																"indexExpression": {
																	"id": 1014,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2360:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2353:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2370:8:8",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "2353:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1017,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2393:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1019,
																"indexExpression": {
																	"id": 1018,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2400:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2393:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2410:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "2393:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1021,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2437:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1023,
																"indexExpression": {
																	"id": 1022,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "2444:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2437:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2454:13:8",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "2437:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1025,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2301:167:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint96_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint96,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1008,
												"id": 1026,
												"nodeType": "Return",
												"src": "2294:174:8"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 998,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 995,
													"src": "2138:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 997,
												"name": "validate_stake",
												"nameLocations": [
													"2123:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "2123:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2123:24:8"
										}
									],
									"name": "getStake",
									"nameLocation": "2090:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2104:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2099:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2099:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:15:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2190:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2182:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2211:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2206:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2206:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2235:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2230:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2230:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "2263:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2258:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2171:106:8"
									},
									"scope": 1569,
									"src": "2081:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "2538:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1035,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2563:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2569:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2563:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2556:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1033,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2556:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2556:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1038,
												"nodeType": "Return",
												"src": "2549:30:8"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "2493:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:8"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "2525:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1030,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:8:8"
									},
									"scope": 1569,
									"src": "2484:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "2670:825:8",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "SCALE_FACTOR",
														"nameLocation": "2687:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2682:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2682:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2682:24:8"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "curr_total",
														"nameLocation": "2722:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2717:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2717:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2735:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1054,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "2750:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2735:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2717:45:8"
											},
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "low_d",
														"nameLocation": "2778:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2773:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2773:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1059,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2786:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1060,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2799:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2786:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2773:45:8"
											},
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "high_d",
														"nameLocation": "2834:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1155,
														"src": "2829:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2829:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "curr_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2843:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1066,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2854:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2843:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2829:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "low_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2887:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1070,
														"name": "high_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2896:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2887:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "3005:483:8",
													"statements": [
														{
															"assignments": [
																1081
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1081,
																	"mutability": "mutable",
																	"name": "low_r",
																	"nameLocation": "3025:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3020:10:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3020:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1098,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1082,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "3033:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1085,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1083,
																									"name": "low_d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1058,
																									"src": "3048:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1084,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3056:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3048:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1086,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3047:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1087,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 854,
																						"src": "3059:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3047:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1089,
																					"name": "total_staked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "3081:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3047:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1091,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3046:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3033:61:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1093,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "3096:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1094,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "3104:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3096:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3095:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3033:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3020:95:8"
														},
														{
															"assignments": [
																1100
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1100,
																	"mutability": "mutable",
																	"name": "high_r",
																	"nameLocation": "3135:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3130:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1099,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3130:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1114,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1101,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "3144:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1102,
																					"name": "curr_total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "3158:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1105,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1103,
																						"name": "high_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "3171:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1104,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 854,
																						"src": "3178:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3171:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3158:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1107,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3157:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3144:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1109,
																				"name": "high_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "3200:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1110,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "3209:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3200:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1112,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3199:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3144:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3130:90:8"
														},
														{
															"assignments": [
																1116
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1116,
																	"mutability": "mutable",
																	"name": "middle_r",
																	"nameLocation": "3240:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "3235:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1115,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3235:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1118,
															"initialValue": {
																"hexValue": "30",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3251:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3235:17:8"
														},
														{
															"body": {
																"id": 1142,
																"nodeType": "Block",
																"src": "3319:96:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1131,
																				"name": "middle_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "3338:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1132,
																						"name": "SCALE_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1048,
																						"src": "3350:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1133,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 854,
																						"src": "3363:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3350:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1135,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1120,
																								"src": "3384:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1136,
																								"name": "DIFFICULTY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 852,
																								"src": "3388:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3384:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1138,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3383:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3350:49:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3338:61:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1141,
																		"nodeType": "ExpressionStatement",
																		"src": "3338:61:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1125,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "3289:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1126,
																	"name": "high_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "3293:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3289:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"initializationExpression": {
																"assignments": [
																	1120
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1120,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3276:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1143,
																		"src": "3271:6:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1119,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3271:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1124,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1121,
																		"name": "low_d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1058,
																		"src": "3278:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3286:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3278:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3271:16:8"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3301:3:8",
																	"subExpression": {
																		"id": 1128,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "3301:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1130,
																"nodeType": "ExpressionStatement",
																"src": "3301:3:8"
															},
															"nodeType": "ForStatement",
															"src": "3267:148:8"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1144,
																					"name": "low_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1081,
																					"src": "3437:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1145,
																					"name": "middle_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "3445:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3437:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1147,
																				"name": "high_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "3456:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3437:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1149,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3436:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1150,
																	"name": "SCALE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "3464:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3436:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1046,
															"id": 1152,
															"nodeType": "Return",
															"src": "3429:47:8"
														}
													]
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "2884:604:8",
												"trueBody": {
													"id": 1079,
													"nodeType": "Block",
													"src": "2913:67:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1072,
																	"name": "stake_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "2935:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1073,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "2949:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1074,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "2957:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2949:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2948:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2935:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1046,
															"id": 1078,
															"nodeType": "Return",
															"src": "2928:40:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2604:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2625:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2620:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2620:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:19:8"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "2659:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2659:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2658:6:8"
									},
									"scope": 1569,
									"src": "2595:900:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1591
									],
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "3561:71:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1161,
															"name": "total_staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "3579:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1162,
															"name": "DIFFICULTY_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "3592:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3579:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1164,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "3614:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3579:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1166,
												"nodeType": "Return",
												"src": "3572:52:8"
											}
										]
									},
									"functionSelector": "b6baffe3",
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "3512:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3525:2:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "3550:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3550:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3549:6:8"
									},
									"scope": 1569,
									"src": "3503:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1609
									],
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "3728:900:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3747:8:8",
															"subExpression": {
																"id": 1180,
																"name": "stopped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3748:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a53544f5050454421",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3757:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															},
															"value": "ModuleX:STOPPED!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3739:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3739:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "3795:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3810:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3795:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3813:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															},
															"value": "ModuleX:Stake amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3787:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3787:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "3787:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1193,
																"name": "lock_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "3879:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1194,
																"name": "MATURITY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "3894:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3879:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3904:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															},
															"value": "ModuleX:Use longer lock_period!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3871:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "3871:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1202,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "3972:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3972:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1206,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3994:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1569",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1569",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3986:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3986:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3986:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4001:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1199,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3949:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3955:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3949:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3949:65:8"
											},
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "4033:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4026:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1211,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4026:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1213,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "4044:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4044:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1215,
														"name": "lock_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "4057:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "4044:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4026:42:8"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4084:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4079:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4079:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"arguments": [
														{
															"id": 1221,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4116:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "4100:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4079:50:8"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "stake_id",
														"nameLocation": "4145:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "4140:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4140:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1227,
												"initialValue": {
													"id": 1226,
													"name": "stakes_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 868,
													"src": "4156:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4140:28:8"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1228,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "4179:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
															}
														},
														"id": 1230,
														"indexExpression": {
															"id": 1229,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4186:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4179:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
															"typeString": "struct ModuleX.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1232,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4233:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4233:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1234,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "4270:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1235,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "4307:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1236,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "4349:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1231,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4198:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$844_storage_ptr_$",
																"typeString": "type(struct ModuleX.StakeDetails storage pointer)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4226:5:8",
															"4260:8:8",
															"4293:12:8",
															"4334:13:8"
														],
														"names": [
															"owner",
															"maturity",
															"stake_amount",
															"reward_amount"
														],
														"nodeType": "FunctionCall",
														"src": "4198:176:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_memory_ptr",
															"typeString": "struct ModuleX.StakeDetails memory"
														}
													},
													"src": "4179:195:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "4179:195:8"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4395:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1241,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "4411:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4395:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "4395:28:8"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4435:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1245,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "4455:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4435:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "4435:33:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4491:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4491:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4505:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1252,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "4515:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1253,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4525:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1254,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4539:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1248,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "4484:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint96,uint256,uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "4479:74:8"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4564:14:8",
													"subExpression": {
														"id": 1257,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4564:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "4564:14:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1260,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4596:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1261,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4606:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4595:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1263,
												"nodeType": "Return",
												"src": "4589:31:8"
											}
										]
									},
									"functionSelector": "d93c04a0",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3649:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "3662:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3655:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1169,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3655:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3680:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3675:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3675:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:39:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3711:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3711:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3717:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3717:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3710:12:8"
									},
									"scope": 1569,
									"src": "3640:988:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1616
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "4719:586:8",
										"statements": [
											{
												"assignments": [
													1277
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "4751:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "4730:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1276,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1275,
																"name": "StakeDetails",
																"nameLocations": [
																	"4730:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "4730:12:8"
															},
															"referencedDeclaration": 844,
															"src": "4730:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"baseExpression": {
														"id": 1278,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "4761:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1280,
													"indexExpression": {
														"id": 1279,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "4768:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4761:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4730:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1283,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4796:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4804:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "4796:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1285,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4813:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4813:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4796:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4827:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															},
															"value": "ModuleX:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4788:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4788:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "4788:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1292,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "4880:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4880:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1294,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4894:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4902:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4894:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4880:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															},
															"value": "ModuleX:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4872:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4872:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1301,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4977:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4985:13:8",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "4977:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5001:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4977:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5004:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															},
															"value": "ModuleX:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4969:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "4969:62:8"
											},
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "5047:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "5042:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5042:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"expression": {
														"id": 1310,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "5063:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails storage pointer"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5071:13:8",
													"memberName": "reward_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 843,
													"src": "5063:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5042:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1316,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5115:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5129:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1313,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5102:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5095:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5095:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "5095:48:8"
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5159:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1322,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "5179:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5159:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "5159:33:8"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1325,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "5203:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5211:13:8",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5203:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5227:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5203:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "5203:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1332,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5256:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1331,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5245:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5245:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "EmitStatement",
												"src": "5240:25:8"
											},
											{
												"expression": {
													"id": 1335,
													"name": "reward_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1309,
													"src": "5284:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1336,
												"nodeType": "Return",
												"src": "5277:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1270,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "4690:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1271,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1269,
												"name": "validate_stake",
												"nameLocations": [
													"4675:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "4675:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4675:24:8"
										}
									],
									"name": "claim",
									"nameLocation": "4645:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "4656:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4651:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4651:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:15:8"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4708:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4708:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4707:6:8"
									},
									"scope": 1569,
									"src": "4636:669:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "5413:456:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1351,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5433:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5442:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5433:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5445:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5424:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5424:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "5424:65:8"
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5521:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "5500:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1358,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1357,
																"name": "StakeDetails",
																"nameLocations": [
																	"5500:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "5500:12:8"
															},
															"referencedDeclaration": 844,
															"src": "5500:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"baseExpression": {
														"id": 1360,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "5531:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1362,
													"indexExpression": {
														"id": 1361,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5538:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5531:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5500:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1365,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "5566:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5566:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1367,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5580:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5588:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "5580:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "5566:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5598:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															},
															"value": "ModuleX:Burnt tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5558:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5558:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "5558:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1374,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5642:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1375,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5652:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5660:12:8",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "5652:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5642:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5674:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5634:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5634:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "5634:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5737:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5737:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1386,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "5751:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																	"typeString": "struct ModuleX.StakeDetails storage pointer"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5759:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "5751:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1381,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5718:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5724:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5718:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5718:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "5718:54:8"
											},
											{
												"expression": {
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1390,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "5783:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5791:12:8",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "5783:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1393,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "5807:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5783:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "5783:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1397,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "5844:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5854:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"name": "CREDIWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "5829:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "EmitStatement",
												"src": "5824:37:8"
											}
										]
									},
									"functionSelector": "ac00500f",
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "onlyOwner",
												"nameLocations": [
													"5373:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5373:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5373:9:8"
										},
										{
											"arguments": [
												{
													"id": 1347,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "5398:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "validate_stake",
												"nameLocations": [
													"5383:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 925,
												"src": "5383:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5383:24:8"
										}
									],
									"name": "withdrawCREDI",
									"nameLocation": "5322:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "5341:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5336:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5336:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5356:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5351:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5351:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:28:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5413:0:8"
									},
									"scope": 1569,
									"src": "5313:556:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "5956:633:8",
										"statements": [
											{
												"assignments": [
													1411
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "total_amount",
														"nameLocation": "5972:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1488,
														"src": "5967:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1410,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5967:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"hexValue": "30",
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5987:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5967:21:8"
											},
											{
												"body": {
													"id": 1471,
													"nodeType": "Block",
													"src": "6051:407:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1426,
																				"name": "stake_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "6074:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1428,
																			"indexExpression": {
																				"id": 1427,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "6084:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6074:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1429,
																			"name": "stakes_count",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "6089:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6074:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6103:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		},
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		}
																	],
																	"id": 1425,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6066:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:65:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "6066:65:8"
														},
														{
															"assignments": [
																1436
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1436,
																	"mutability": "mutable",
																	"name": "details",
																	"nameLocation": "6167:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1471,
																	"src": "6146:28:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails"
																	},
																	"typeName": {
																		"id": 1435,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1434,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"6146:12:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 844,
																			"src": "6146:12:8"
																		},
																		"referencedDeclaration": 844,
																		"src": "6146:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1442,
															"initialValue": {
																"baseExpression": {
																	"id": 1437,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "6177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1441,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1438,
																		"name": "stake_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "6184:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1440,
																	"indexExpression": {
																		"id": 1439,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "6194:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6184:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6177:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6146:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1444,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1040,
																				"src": "6220:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6220:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1446,
																				"name": "details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "6234:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																					"typeString": "struct ModuleX.StakeDetails storage pointer"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6242:8:8",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 839,
																			"src": "6234:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "6220:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		},
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		}
																	],
																	"id": 1443,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6212:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6212:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "6212:64:8"
														},
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1452,
																	"name": "total_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "6291:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1453,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "6307:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6315:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6307:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6291:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:8"
														},
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1457,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "6342:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6350:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6342:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6365:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6342:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "6342:24:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1464,
																			"name": "stake_ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "6411:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1466,
																		"indexExpression": {
																			"id": 1465,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "6421:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6411:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1467,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "6425:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																				"typeString": "struct ModuleX.StakeDetails storage pointer"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6433:12:8",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "6425:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1463,
																	"name": "CREDIWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "6396:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6396:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1470,
															"nodeType": "EmitStatement",
															"src": "6391:55:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "6015:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1419,
															"name": "stake_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6019:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6029:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6019:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6015:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1472,
												"initializationExpression": {
													"assignments": [
														1415
													],
													"declarations": [
														{
															"constant": false,
															"id": 1415,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6008:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1472,
															"src": "6003:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1414,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6003:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1417,
													"initialValue": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6012:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6003:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6037:3:8",
														"subExpression": {
															"id": 1422,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "6037:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1424,
													"nodeType": "ExpressionStatement",
													"src": "6037:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5999:459:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "total_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "6476:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6491:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6476:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6494:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															},
															"value": "ModuleX:Total amount is 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6468:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6468:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "6468:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6554:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6554:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "total_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "6568:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1480,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "6535:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6541:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6535:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6535:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "6535:46:8"
											}
										]
									},
									"functionSelector": "bc854352",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "onlyOwner",
												"nameLocations": [
													"5941:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5941:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5941:9:8"
										}
									],
									"name": "batchWithdrawCREDI",
									"nameLocation": "5886:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "stake_ids",
												"nameLocation": "5921:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "5905:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1403,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5905:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1404,
													"nodeType": "ArrayTypeName",
													"src": "5905:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5904:27:8"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5956:0:8"
									},
									"scope": 1569,
									"src": "5877:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "6645:190:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1495,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "6665:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6674:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6665:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6677:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6656:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "6656:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1504,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6756:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6756:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6778:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1569",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1569",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6770:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1506,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6770:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6770:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6785:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1501,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "6732:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6739:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6732:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6732:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "6732:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6820:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1513,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6808:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6808:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "EmitStatement",
												"src": "6803:24:8"
											}
										]
									},
									"functionSelector": "beceed39",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "6606:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6622:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6617:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6617:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6616:13:8"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6645:0:8"
									},
									"scope": 1569,
									"src": "6597:238:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "6917:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1532,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6961:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleX_$1569",
																					"typeString": "contract ModuleX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleX_$1569",
																					"typeString": "contract ModuleX"
																				}
																			],
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6953:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1530,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6953:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6953:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1528,
																		"name": "xCREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "6936:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6943:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "6936:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6936:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1535,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "6971:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1536,
																	"name": "pending_payments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "6980:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6971:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6936:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6998:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6928:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6928:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "6928:102:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "7061:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1542,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "7041:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7048:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "7041:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7041:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "7041:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "7104:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7108:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1549,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "7088:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7088:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "EmitStatement",
												"src": "7083:32:8"
											}
										]
									},
									"functionSelector": "d6ef7af0",
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1524,
												"name": "onlyOwner",
												"nameLocations": [
													"6902:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6902:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6902:9:8"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6852:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6876:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6868:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6868:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6885:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6880:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6880:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6867:25:8"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6917:0:8"
									},
									"scope": 1569,
									"src": "6843:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "7171:58:8",
										"statements": [
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1560,
														"name": "stopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "7182:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7192:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7182:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "7182:14:8"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1564,
														"name": "Stopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "7212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7212:9:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "EmitStatement",
												"src": "7207:14:8"
											}
										]
									},
									"functionSelector": "07da68f5",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1557,
												"name": "onlyOwner",
												"nameLocations": [
													"7156:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7156:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7156:9:8"
										}
									],
									"name": "stop",
									"nameLocation": "7140:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7144:2:8"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7171:0:8"
									},
									"scope": 1569,
									"src": "7131:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1570,
							"src": "278:6956:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								878,
								884,
								896,
								902,
								906,
								908
							]
						}
					],
					"src": "33:7203:8"
				},
				"id": 8
			},
			"contracts/interface/IModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IModuleX.sol",
					"exportedSymbols": {
						"IModuleX": [
							1617
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1571,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1617,
							"linearizedBaseContracts": [
								1617
							],
							"name": "IModuleX",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46149a2",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "97:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1617,
									"src": "88:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c2fdeb5",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "163:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:9"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "204:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:9"
									},
									"scope": 1617,
									"src": "154:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5fa91fe",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "230:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "269:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:9"
									},
									"scope": 1617,
									"src": "221:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6baffe3",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "296:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "334:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:6:9"
									},
									"scope": 1617,
									"src": "287:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "361:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "382:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "377:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:19:9"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "413:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:6:9"
									},
									"scope": 1617,
									"src": "352:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d93c04a0",
									"id": 1609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "436:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "449:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "442:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1599,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "467:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "462:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:33:9"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "497:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "492:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "512:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "507:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "507:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:35:9"
									},
									"scope": 1617,
									"src": "427:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "379607f5",
									"id": 1616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "544:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "555:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "550:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:15:9"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "587:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "582:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "582:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:20:9"
									},
									"scope": 1617,
									"src": "535:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1618,
							"src": "61:546:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:576:9"
				},
				"id": 9
			}
		}
	}
}