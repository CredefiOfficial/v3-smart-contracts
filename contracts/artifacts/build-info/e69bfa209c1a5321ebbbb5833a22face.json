{
	"id": "e69bfa209c1a5321ebbbb5833a22face",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./interface/IModuleX.sol\";\r\n\r\ncontract ModuleX is IModuleX, Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakeDetails\r\n    {\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n    }\r\n\r\n    bool public stopped = false; \r\n    uint96 constant public MATURITY = 180 minutes; // 180 days;\r\n    uint immutable private DIFFICULTY = 11; // Initial DIFFICULTY\r\n    uint immutable public DIFFICULTY_INTERVAL;\r\n    IERC20 immutable public CREDI;\r\n    IERC20 immutable public xCREDI;\r\n    \r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    uint public total_staked = 0;\r\n    uint public pending_payments = 0;\r\n\r\n    event RewardAdded(uint amount);\r\n    event RewardWithdrawn(address indexed to, uint amount);\r\n    event Staked(address indexed user, uint stake_id, uint96 maturity, uint stake_amount, uint rewards_amount);\r\n    event CREDIWithdrawn(uint stake_id, uint amount);\r\n    event RewardPaid(uint stake_id);\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())\r\n    { \r\n        CREDI = IERC20(_credi_addr);\r\n        xCREDI = IERC20(_xcredi_addr);\r\n        DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL;\r\n        DIFFICULTY = _DIFFICULTY;\r\n    }\r\n    \r\n    function getCREDIAddress() external view returns(address)\r\n    {\r\n        return address(CREDI);\r\n    }\r\n\r\n    function getxCREDIAddress() external view returns(address)\r\n    {\r\n        return address(xCREDI);\r\n    }\r\n\r\n    function getStakesCount() external view returns(uint)\r\n    {\r\n        return stakes_count - 1;\r\n    }\r\n\r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (\r\n        address owner,\r\n        uint maturity,\r\n        uint stake_amount,\r\n        uint reward_amount)\r\n    {\r\n        return (\r\n            stakes[stake_id].owner,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount);\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function calculateReward(uint stake_amount) public view returns(uint)\r\n    { \r\n        uint SCALE_FACTOR = 1e18;\r\n        uint curr_total = total_staked + stake_amount;\r\n        uint low_d = total_staked/DIFFICULTY_INTERVAL;\r\n        uint high_d = curr_total/DIFFICULTY_INTERVAL;\r\n        if(low_d == high_d)\r\n        {\r\n            return stake_amount/(low_d + DIFFICULTY);\r\n        }\r\n        else \r\n        {\r\n            uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY);\r\n            uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY);\r\n            uint middle_r = 0;\r\n            for(uint i=low_d + 1; i < high_d; i++)\r\n            {\r\n                middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY);\r\n            }\r\n            return (low_r + middle_r + high_r)/SCALE_FACTOR;\r\n        }\r\n    }\r\n\r\n    function getDifficulty() external view returns(uint)\r\n    {\r\n        return total_staked/DIFFICULTY_INTERVAL + DIFFICULTY;\r\n    }\r\n\r\n    function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)\r\n    {\r\n        require(!stopped, \"ModuleX:STOPPED!\");\r\n        require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\");\r\n        require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\");\r\n        CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint96 maturity = time_now() + lock_period;\r\n        uint reward_amount = calculateReward(stake_amount);\r\n        uint stake_id = stakes_count;\r\n        stakes[stake_id] = StakeDetails({\r\n            owner: _msgSender(),\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount\r\n        });\r\n        \r\n        total_staked += stake_amount; \r\n        pending_payments += reward_amount;\r\n        emit Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount);\r\n        stakes_count++;\r\n        return(stake_id, reward_amount);\r\n    }\r\n\r\n    function claim(uint stake_id) external validate_stake(stake_id) returns(uint)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\");\r\n        require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"ModuleX:Nothing to claim\");\r\n        uint reward_amount = details.reward_amount;\r\n        xCREDI.safeTransfer(_msgSender(), reward_amount);     \r\n        pending_payments -= reward_amount;\r\n        details.reward_amount = 0; \r\n        emit RewardPaid(stake_id); \r\n        return reward_amount;\r\n    }\r\n\r\n    function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\"); \r\n        require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\"); \r\n        CREDI.safeTransfer(_msgSender(), details.stake_amount);\r\n        details.stake_amount -= amount;\r\n        emit CREDIWithdrawn(stake_id, amount);\r\n    }\r\n\r\n    function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner\r\n    {\r\n        uint total_amount = 0;\r\n        for(uint i = 0; i < stake_ids.length; i++)\r\n        {\r\n            require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n            StakeDetails storage details = stakes[stake_ids[i]];\r\n            require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\");\r\n            total_amount += details.stake_amount;\r\n            details.stake_amount = 0;          \r\n            emit CREDIWithdrawn(stake_ids[i], details.stake_amount);\r\n        }\r\n        require(total_amount > 0, \"ModuleX:Total amount is 0!\"); \r\n        CREDI.safeTransfer(_msgSender(), total_amount);\r\n    }\r\n\r\n    function addRewards(uint amount) external \r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        xCREDI.safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(amount);\r\n    }\r\n\r\n    function withdrawRewards(address to, uint amount) external onlyOwner\r\n    {\r\n        require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\");\r\n        xCREDI.safeTransfer(to, amount);\r\n        emit RewardWithdrawn(to, amount);\r\n    }\r\n\r\n    function stop() external onlyOwner\r\n    {\r\n        stopped = true;\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IModuleX\r\n{\r\n    function getCREDIAddress() external view returns(address);\r\n\r\n    function getxCREDIAddress() external view returns(address);\r\n\r\n    function getStakesCount() external view returns(uint);\r\n    \r\n    function getDifficulty() external view returns(uint);\r\n    \r\n    function calculateReward(uint stake_amount) external returns(uint);\r\n\r\n    function stake(uint96 lock_period, uint amount) external returns(uint stake_id, uint xCREDI_reward);\r\n\r\n    function claim(uint stake_id) external returns(uint xCREDI_reward);\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD80E8729FC834685B24B56DC8E4523CD0C95CFED21 0xA6 PUSH21 0xE80B6D3AEEDCEDD564736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xD80E8729FC834685B24B56DC8E4523CD0C95CFED21 0xA6 PUSH21 0xE80B6D3AEEDCEDD564736F6C634300081E00330000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074d80e8729fc834685b24b56dc8e4523cd0c95cfed21a674e80b6d3aeedcedd564736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ModuleX.sol": {
				"ModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_credi_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xcredi_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_DIFFICULTY_INTERVAL",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CREDIWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATURITY",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "stake_ids",
									"type": "uint256[]"
								}
							],
							"name": "batchWithdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maturity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stopped",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xCREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ModuleX.sol\":278:7208  contract ModuleX is IModuleX, Ownable ... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/ModuleX.sol\":530:535  false */\n  0x00\n    /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n    /* \"contracts/ModuleX.sol\":644:646  11 */\n  0x0b\n    /* \"contracts/ModuleX.sol\":608:646  uint immutable private DIFFICULTY = 11 */\n  0x80\n  mstore\n    /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n  0x01\n    /* \"contracts/ModuleX.sol\":854:883  uint private stakes_count = 1 */\n  0x02\n  sstore\n    /* \"contracts/ModuleX.sol\":890:918  uint public total_staked = 0 */\n  0x03\n  dup2\n  swap1\n  sstore\n    /* \"contracts/ModuleX.sol\":925:957  uint public pending_payments = 0 */\n  0x04\n  sstore\n    /* \"contracts/ModuleX.sol\":1433:1735  constructor(address _credi_addr, address _xcredi_addr, uint _DIFFICULTY, uint _DIFFICULTY_INTERVAL) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ModuleX.sol\":1572:1599  CREDI = IERC20(_credi_addr) */\n  swap4\n  dup5\n  and\n  0xc0\n  mstore\n    /* \"contracts/ModuleX.sol\":1610:1639  xCREDI = IERC20(_xcredi_addr) */\n  swap2\n  swap1\n  swap3\n  and\n  0xe0\n  mstore\n    /* \"contracts/ModuleX.sol\":1650:1692  DIFFICULTY_INTERVAL = _DIFFICULTY_INTERVAL */\n  0xa0\n  mstore\n    /* \"contracts/ModuleX.sol\":1703:1727  DIFFICULTY = _DIFFICULTY */\n  0x80\n  mstore\n    /* \"contracts/ModuleX.sol\":278:7208  contract ModuleX is IModuleX, Ownable ... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_18:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_21:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_23:\n    /* \"#utility.yul\":410:450   */\n  tag_24\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_25\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_18\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":580:582   */\n  0x40\n    /* \"#utility.yul\":565:583   */\n  dup7\n  add\n    /* \"#utility.yul\":559:584   */\n  mload\n    /* \"#utility.yul\":674:676   */\n  0x60\n    /* \"#utility.yul\":659:677   */\n  swap1\n  swap7\n  add\n    /* \"#utility.yul\":653:678   */\n  mload\n    /* \"#utility.yul\":196:710   */\n  swap5\n  swap8\n    /* \"#utility.yul\":459:518   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":715:918   */\ntag_19:\n    /* \"contracts/ModuleX.sol\":278:7208  contract ModuleX is IModuleX, Ownable ... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n  0x00\n  assignImmutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n  0x00\n  assignImmutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n  0x00\n  assignImmutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ModuleX.sol\":278:7208  contract ModuleX is IModuleX, Ownable ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf7568dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xce325bf8\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd6ef7af0\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xd6ef7af0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd93c04a0\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0xce325bf8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd46149a2\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0xb6baffe3\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb6baffe3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbc854352\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0xaf7568dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb109beec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb5fa91fe\n      eq\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x75f12b21\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x8e12c0cd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x8e12c0cd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f4729b7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xac00500f\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x75f12b21\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7c2fdeb5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0x07da68f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x109cf399\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6db08f25\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ModuleX.sol\":7130:7203  function stop() external onlyOwner... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/ModuleX.sol\":675:716  uint immutable public DIFFICULTY_INTERVAL */\n    tag_4:\n      tag_34\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":675:716  uint immutable public DIFFICULTY_INTERVAL */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":4635:5304  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_5:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":723:752  IERC20 immutable public CREDI */\n    tag_6:\n      tag_43\n      immutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":587:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":575:577   */\n      0x20\n        /* \"#utility.yul\":560:578   */\n      add\n        /* \"contracts/ModuleX.sol\":723:752  IERC20 immutable public CREDI */\n      tag_36\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_32\n      tag_48\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n    tag_8:\n      sload(0x00)\n      tag_49\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":837:851   */\n      swap1\n      iszero\n        /* \"#utility.yul\":830:852   */\n      iszero\n        /* \"#utility.yul\":812:853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":800:802   */\n      0x20\n        /* \"#utility.yul\":785:803   */\n      add\n        /* \"contracts/ModuleX.sol\":508:535  bool public stopped = false */\n      tag_36\n        /* \"#utility.yul\":672:859   */\n      jump\n        /* \"contracts/ModuleX.sol\":1858:1963  function getxCREDIAddress() external view returns(address)... */\n    tag_9:\n        /* \"contracts/ModuleX.sol\":1948:1954  xCREDI */\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n        /* \"contracts/ModuleX.sol\":1858:1963  function getxCREDIAddress() external view returns(address)... */\n      jump(tag_43)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_43)\n        /* \"contracts/ModuleX.sol\":543:588  uint96 constant public MATURITY = 180 minutes */\n    tag_11:\n      tag_60\n        /* \"contracts/ModuleX.sol\":577:588  180 minutes */\n      0x2a30\n        /* \"contracts/ModuleX.sol\":543:588  uint96 constant public MATURITY = 180 minutes */\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1257:1296   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1239:1297   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1227:1229   */\n      0x20\n        /* \"#utility.yul\":1212:1230   */\n      add\n        /* \"contracts/ModuleX.sol\":543:588  uint96 constant public MATURITY = 180 minutes */\n      tag_36\n        /* \"#utility.yul\":1095:1303   */\n      jump\n        /* \"contracts/ModuleX.sol\":925:957  uint public pending_payments = 0 */\n    tag_12:\n      tag_34\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":5312:5868  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_13:\n      tag_32\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":890:918  uint public total_staked = 0 */\n    tag_14:\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":759:789  IERC20 immutable public xCREDI */\n    tag_15:\n      tag_43\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":1971:2072  function getStakesCount() external view returns(uint)... */\n    tag_16:\n      tag_34\n      tag_78\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3502:3631  function getDifficulty() external view returns(uint)... */\n    tag_17:\n      tag_34\n      tag_81\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5876:6588  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_18:\n      tag_32\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":6596:6834  function addRewards(uint amount) external ... */\n    tag_19:\n      tag_32\n      tag_88\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":2080:2475  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_20:\n      tag_90\n      tag_91\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2523:2578   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":2505:2579   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2610:2612   */\n      0x20\n        /* \"#utility.yul\":2595:2613   */\n      dup6\n      add\n        /* \"#utility.yul\":2588:2622   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2638:2656   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2631:2665   */\n      mstore\n        /* \"#utility.yul\":2696:2698   */\n      0x60\n        /* \"#utility.yul\":2681:2699   */\n      dup3\n      add\n        /* \"#utility.yul\":2674:2708   */\n      mstore\n        /* \"#utility.yul\":2492:2495   */\n      0x80\n        /* \"#utility.yul\":2477:2496   */\n      add\n        /* \"contracts/ModuleX.sol\":2080:2475  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      tag_36\n        /* \"#utility.yul\":2274:2714   */\n      jump\n        /* \"contracts/ModuleX.sol\":2594:3494  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_21:\n      tag_34\n      tag_96\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":1747:1850  function getCREDIAddress() external view returns(address)... */\n    tag_22:\n        /* \"contracts/ModuleX.sol\":1836:1841  CREDI */\n      immutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n        /* \"contracts/ModuleX.sol\":1747:1850  function getCREDIAddress() external view returns(address)... */\n      jump(tag_43)\n        /* \"contracts/ModuleX.sol\":6842:7122  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_23:\n      tag_32\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3639:4627  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_24:\n      tag_106\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3816:3841   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup4\n      add\n        /* \"#utility.yul\":3850:3884   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3789:3807   */\n      add\n        /* \"contracts/ModuleX.sol\":3639:4627  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      tag_36\n        /* \"#utility.yul\":3642:3890   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_32\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":7130:7203  function stop() external onlyOwner... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/ModuleX.sol\":7181:7188  stopped */\n      0x00\n        /* \"contracts/ModuleX.sol\":7181:7195  stopped = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/ModuleX.sol\":7130:7203  function stop() external onlyOwner... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":4635:5304  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_41:\n        /* \"contracts/ModuleX.sol\":4707:4711  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":4689:4697  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1347:1348  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1336:1344  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1336:1348  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1363:1375  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1352:1360  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1352:1375  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n    tag_121:\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n      shl(0x38, 0x4d6f64756c65583a496e76616c6964205374616b6520494421)\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/ModuleX.sol\":4729:4757  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":4760:4776  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4760:4766  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":4760:4776  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":4795:4808  details.owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":4795:4824  details.owner == _msgSender() */\n      eq\n        /* \"contracts/ModuleX.sol\":4787:4860  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4642:4644   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4787:4860  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4624:4645   */\n      mstore\n        /* \"#utility.yul\":4681:4683   */\n      0x1f\n        /* \"#utility.yul\":4661:4679   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4654:4684   */\n      mstore\n        /* \"#utility.yul\":4720:4753   */\n      0x4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200\n        /* \"#utility.yul\":4700:4718   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4693:4754   */\n      mstore\n        /* \"#utility.yul\":4771:4789   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4787:4860  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_123\n        /* \"#utility.yul\":4440:4795   */\n      jump\n        /* \"contracts/ModuleX.sol\":4787:4860  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n    tag_128:\n        /* \"contracts/ModuleX.sol\":4893:4909  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2562:2577  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4879:4909  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":4871:4956  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5002:5004   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4871:4956  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4984:5005   */\n      mstore\n        /* \"#utility.yul\":5041:5043   */\n      0x2a\n        /* \"#utility.yul\":5021:5039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5014:5044   */\n      mstore\n        /* \"#utility.yul\":5080:5114   */\n      0x4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420\n        /* \"#utility.yul\":5060:5078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5053:5115   */\n      mstore\n      shl(0xb0, 0x7065726d697474656421)\n        /* \"#utility.yul\":5131:5149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5124:5164   */\n      mstore\n        /* \"#utility.yul\":5181:5200   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":4871:4956  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_123\n        /* \"#utility.yul\":4800:5206   */\n      jump\n        /* \"contracts/ModuleX.sol\":4871:4956  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n    tag_133:\n        /* \"contracts/ModuleX.sol\":5000:5001  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":4976:4983  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4976:4997  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":4976:5001  details.reward_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":4968:5030  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4968:5030  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5395:5416   */\n      mstore\n        /* \"#utility.yul\":5452:5454   */\n      0x18\n        /* \"#utility.yul\":5432:5450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5425:5455   */\n      mstore\n        /* \"#utility.yul\":5491:5517   */\n      0x4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":5471:5489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5464:5518   */\n      mstore\n        /* \"#utility.yul\":5535:5553   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4968:5030  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_123\n        /* \"#utility.yul\":5211:5559   */\n      jump\n        /* \"contracts/ModuleX.sol\":4968:5030  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n    tag_136:\n        /* \"contracts/ModuleX.sol\":5062:5083  details.reward_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5094:5142  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      tag_139\n        /* \"contracts/ModuleX.sol\":5094:5100  xCREDI */\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5094:5113  xCREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":5062:5083  details.reward_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5094:5113  xCREDI.safeTransfer */\n      tag_141\n        /* \"contracts/ModuleX.sol\":5094:5142  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/ModuleX.sol\":5178:5191  reward_amount */\n      dup1\n        /* \"contracts/ModuleX.sol\":5158:5174  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":5158:5191  pending_payments -= reward_amount */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5226:5227  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5202:5223  details.reward_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":5202:5227  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":5244:5264  RewardPaid(stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5244:5264  RewardPaid(stake_id) */\n      0x67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":5244:5264  RewardPaid(stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5283:5296  reward_amount */\n      swap5\n        /* \"contracts/ModuleX.sol\":4635:5304  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":5312:5868  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ModuleX.sol\":5397:5405  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1347:1348  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1336:1344  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1336:1348  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1363:1375  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1352:1360  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1352:1375  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n    tag_155:\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n      shl(0x38, 0x4d6f64756c65583a496e76616c6964205374616b6520494421)\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_123\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_156:\n        /* \"contracts/ModuleX.sol\":5441:5442  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5432:5438  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5432:5442  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":5423:5488  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5423:5488  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6013:6034   */\n      mstore\n        /* \"#utility.yul\":6070:6072   */\n      0x29\n        /* \"#utility.yul\":6050:6068   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6043:6073   */\n      mstore\n        /* \"#utility.yul\":6109:6143   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6089:6107   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6082:6144   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6160:6178   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6153:6192   */\n      mstore\n        /* \"#utility.yul\":6209:6228   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":5423:5488  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_123\n        /* \"#utility.yul\":5829:6234   */\n      jump\n        /* \"contracts/ModuleX.sol\":5423:5488  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_159:\n        /* \"contracts/ModuleX.sol\":5499:5527  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":5530:5546  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5530:5536  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":5530:5546  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":5579:5595  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2562:2577  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5565:5595  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5557:5621  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6441:6443   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5557:5621  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6423:6444   */\n      mstore\n        /* \"#utility.yul\":6480:6482   */\n      0x15\n        /* \"#utility.yul\":6460:6478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6453:6483   */\n      mstore\n      shl(0x58, 0x4d6f64756c65583a4275726e7420746f6b656e7321)\n        /* \"#utility.yul\":6499:6517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6492:6543   */\n      mstore\n        /* \"#utility.yul\":6560:6578   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5557:5621  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_123\n        /* \"#utility.yul\":6239:6584   */\n      jump\n        /* \"contracts/ModuleX.sol\":5557:5621  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_163:\n        /* \"contracts/ModuleX.sol\":5651:5658  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":5651:5671  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5641:5647  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5641:5671  amount <= details.stake_amount */\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5633:5705  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6791:6793   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5633:5705  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6773:6794   */\n      mstore\n        /* \"#utility.yul\":6830:6832   */\n      0x1d\n        /* \"#utility.yul\":6810:6828   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6803:6833   */\n      mstore\n        /* \"#utility.yul\":6869:6900   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6849:6867   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6842:6901   */\n      mstore\n        /* \"#utility.yul\":6918:6936   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5633:5705  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_123\n        /* \"#utility.yul\":6589:6942   */\n      jump\n        /* \"contracts/ModuleX.sol\":5633:5705  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n    tag_166:\n        /* \"contracts/ModuleX.sol\":5717:5771  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":5750:5770  details.stake_amount */\n      0x01\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5717:5722  CREDI */\n      immutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n        /* \"contracts/ModuleX.sol\":5717:5735  CREDI.safeTransfer */\n      and\n      swap2\n        /* \"contracts/ModuleX.sol\":5717:5771  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/ModuleX.sol\":5717:5735  CREDI.safeTransfer */\n      tag_141\n        /* \"contracts/ModuleX.sol\":5717:5771  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ModuleX.sol\":5806:5812  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5782:5789  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":5782:5802  details.stake_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/ModuleX.sol\":5782:5812  details.stake_amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_171:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5828:5860  CREDIWithdrawn(stake_id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3816:3841   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup2\n      add\n        /* \"#utility.yul\":3850:3884   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":5828:5860  CREDIWithdrawn(stake_id, amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n      swap2\n        /* \"#utility.yul\":3789:3807   */\n      add\n        /* \"contracts/ModuleX.sol\":5828:5860  CREDIWithdrawn(stake_id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5412:5868  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/ModuleX.sol\":5312:5868  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1971:2072  function getStakesCount() external view returns(uint)... */\n    tag_78:\n        /* \"contracts/ModuleX.sol\":2019:2023  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2063:2064  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":2048:2060  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":2048:2064  stakes_count - 1 */\n      tag_174\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_174:\n        /* \"contracts/ModuleX.sol\":2041:2064  return stakes_count - 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1971:2072  function getStakesCount() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3502:3631  function getDifficulty() external view returns(uint)... */\n    tag_81:\n        /* \"contracts/ModuleX.sol\":3549:3553  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3613:3623  DIFFICULTY */\n      immutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n        /* \"contracts/ModuleX.sol\":3591:3610  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":3578:3590  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3578:3610  total_staked/DIFFICULTY_INTERVAL */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"contracts/ModuleX.sol\":3578:3623  total_staked/DIFFICULTY_INTERVAL + DIFFICULTY */\n      tag_174\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5876:6588  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/ModuleX.sol\":5966:5983  uint total_amount */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":5998:6457  for(uint i = 0; i < stake_ids.length; i++)... */\n    tag_183:\n        /* \"contracts/ModuleX.sol\":6014:6034  i < stake_ids.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/ModuleX.sol\":5998:6457  for(uint i = 0; i < stake_ids.length; i++)... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/ModuleX.sol\":6088:6100  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":6073:6082  stake_ids */\n      dup5\n      dup5\n        /* \"contracts/ModuleX.sol\":6083:6084  i */\n      dup4\n        /* \"contracts/ModuleX.sol\":6073:6085  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6073:6100  stake_ids[i] < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":6065:6130  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6065:6130  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n      shl(0x38, 0x4d6f64756c65583a496e76616c6964205374616b6520494421)\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6065:6130  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_123\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX.sol\":6065:6130  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_189:\n        /* \"contracts/ModuleX.sol\":6145:6173  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":6176:6182  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":6176:6196  stakes[stake_ids[i]] */\n      0x00\n        /* \"contracts/ModuleX.sol\":6183:6192  stake_ids */\n      dup7\n      dup7\n        /* \"contracts/ModuleX.sol\":6193:6194  i */\n      dup6\n        /* \"contracts/ModuleX.sol\":6183:6195  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_192\n      tag_188\n      jump\t// in\n    tag_192:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6176:6196  stakes[stake_ids[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":6233:6249  details.maturity */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":6176:6196  stakes[stake_ids[i]] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":6233:6249  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2562:2577  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6219:6249  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":6211:6275  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6441:6443   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6211:6275  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6423:6444   */\n      mstore\n        /* \"#utility.yul\":6480:6482   */\n      0x15\n        /* \"#utility.yul\":6460:6478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6453:6483   */\n      mstore\n      shl(0x58, 0x4d6f64756c65583a4275726e7420746f6b656e7321)\n        /* \"#utility.yul\":6499:6517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6492:6543   */\n      mstore\n        /* \"#utility.yul\":6560:6578   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6211:6275  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_123\n        /* \"#utility.yul\":6239:6584   */\n      jump\n        /* \"contracts/ModuleX.sol\":6211:6275  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_194:\n        /* \"contracts/ModuleX.sol\":6306:6326  details.stake_amount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6290:6326  total_amount += details.stake_amount */\n      tag_196\n      swap1\n      dup5\n      tag_179\n      jump\t// in\n    tag_196:\n        /* \"contracts/ModuleX.sol\":6364:6365  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6341:6361  details.stake_amount */\n      0x01\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":6341:6365  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":6290:6326  total_amount += details.stake_amount */\n      swap3\n      pop\n        /* \"contracts/ModuleX.sol\":6395:6445  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX.sol\":6410:6419  stake_ids */\n      dup6\n      dup6\n        /* \"contracts/ModuleX.sol\":6420:6421  i */\n      dup5\n        /* \"contracts/ModuleX.sol\":6410:6422  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_188\n      jump\t// in\n    tag_198:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6424:6431  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":6424:6444  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6395:6445  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":3816:3841   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3872:3874   */\n      0x20\n        /* \"#utility.yul\":3857:3875   */\n      dup3\n      add\n        /* \"#utility.yul\":3850:3884   */\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x40\n        /* \"#utility.yul\":3789:3807   */\n      add\n      swap1\n        /* \"#utility.yul\":3642:3890   */\n      jump\n        /* \"contracts/ModuleX.sol\":6395:6445  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/ModuleX.sol\":6036:6039  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":5998:6457  for(uint i = 0; i < stake_ids.length; i++)... */\n      jump(tag_183)\n    tag_184:\n      pop\n        /* \"contracts/ModuleX.sol\":6490:6491  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6475:6487  total_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6475:6491  total_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6467:6522  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6467:6522  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7615:7636   */\n      mstore\n        /* \"#utility.yul\":7672:7674   */\n      0x1a\n        /* \"#utility.yul\":7652:7670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7645:7675   */\n      mstore\n        /* \"#utility.yul\":7711:7739   */\n      0x4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000\n        /* \"#utility.yul\":7691:7709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7684:7740   */\n      mstore\n        /* \"#utility.yul\":7757:7775   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6467:6522  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_123\n        /* \"#utility.yul\":7431:7781   */\n      jump\n        /* \"contracts/ModuleX.sol\":6467:6522  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n    tag_200:\n        /* \"contracts/ModuleX.sol\":6534:6580  CREDI.safeTransfer(_msgSender(), total_amount) */\n      tag_203\n        /* \"contracts/ModuleX.sol\":6534:6539  CREDI */\n      immutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6534:6552  CREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6567:6579  total_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":6534:6552  CREDI.safeTransfer */\n      tag_141\n        /* \"contracts/ModuleX.sol\":6534:6580  CREDI.safeTransfer(_msgSender(), total_amount) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ModuleX.sol\":5955:6588  {... */\n      pop\n        /* \"contracts/ModuleX.sol\":5876:6588  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6596:6834  function addRewards(uint amount) external ... */\n    tag_89:\n        /* \"contracts/ModuleX.sol\":6673:6674  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6664:6670  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6664:6674  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6655:6720  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6655:6720  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6013:6034   */\n      mstore\n        /* \"#utility.yul\":6070:6072   */\n      0x29\n        /* \"#utility.yul\":6050:6068   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6043:6073   */\n      mstore\n        /* \"#utility.yul\":6109:6143   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":6089:6107   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6082:6144   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":6160:6178   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6153:6192   */\n      mstore\n        /* \"#utility.yul\":6209:6228   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":6655:6720  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_123\n        /* \"#utility.yul\":5829:6234   */\n      jump\n        /* \"contracts/ModuleX.sol\":6655:6720  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n    tag_206:\n        /* \"contracts/ModuleX.sol\":6731:6791  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_208\n        /* \"contracts/ModuleX.sol\":6731:6737  xCREDI */\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6731:6754  xCREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6777:6781  this */\n      address\n        /* \"contracts/ModuleX.sol\":6784:6790  amount */\n      dup5\n        /* \"contracts/ModuleX.sol\":6731:6754  xCREDI.safeTransferFrom */\n      tag_210\n        /* \"contracts/ModuleX.sol\":6731:6791  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_208:\n        /* \"contracts/ModuleX.sol\":6807:6826  RewardAdded(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6807:6826  RewardAdded(amount) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":6807:6826  RewardAdded(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":6596:6834  function addRewards(uint amount) external ... */\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2080:2475  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_92:\n        /* \"contracts/ModuleX.sol\":2181:2194  address owner */\n      0x00\n        /* \"contracts/ModuleX.sol\":2205:2218  uint maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":2229:2246  uint stake_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2257:2275  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2137:2145  stake_id */\n      dup5\n        /* \"contracts/ModuleX.sol\":1347:1348  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1336:1344  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1336:1348  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1363:1375  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1352:1360  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1352:1375  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1336:1375  stake_id > 0 && stake_id < stakes_count */\n    tag_213:\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x19\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n      shl(0x38, 0x4d6f64756c65583a496e76616c6964205374616b6520494421)\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4394   */\n      mstore\n        /* \"#utility.yul\":4411:4429   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_123\n        /* \"#utility.yul\":4086:4435   */\n      jump\n        /* \"contracts/ModuleX.sol\":1328:1405  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n    tag_214:\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2315:2331  stakes[stake_id] */\n      0x00\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2315:2321  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2315:2331  stakes[stake_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ModuleX.sol\":2315:2337  stakes[stake_id].owner */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":2392:2421  stakes[stake_id].stake_amount */\n      swap2\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":2436:2466  stakes[stake_id].reward_amount */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":2315:2337  stakes[stake_id].owner */\n      dup4\n      and\n      swap4\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":2352:2377  stakes[stake_id].maturity */\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/ModuleX.sol\":2080:2475  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2594:3494  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_97:\n        /* \"contracts/ModuleX.sol\":2658:2662  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2681:2698  uint SCALE_FACTOR */\n      0x00\n        /* \"contracts/ModuleX.sol\":2701:2705  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ModuleX.sol\":2681:2705  uint SCALE_FACTOR = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2716:2731  uint curr_total */\n      0x00\n        /* \"contracts/ModuleX.sol\":2749:2761  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":2734:2746  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2734:2761  total_staked + stake_amount */\n      tag_218\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_218:\n        /* \"contracts/ModuleX.sol\":2716:2761  uint curr_total = total_staked + stake_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2772:2782  uint low_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":2798:2817  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":2785:2797  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2785:2817  total_staked/DIFFICULTY_INTERVAL */\n      tag_219\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_219:\n        /* \"contracts/ModuleX.sol\":2772:2817  uint low_d = total_staked/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2828:2839  uint high_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":2842:2872  curr_total/DIFFICULTY_INTERVAL */\n      tag_220\n        /* \"contracts/ModuleX.sol\":2853:2872  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":2842:2852  curr_total */\n      dup5\n        /* \"contracts/ModuleX.sol\":2842:2872  curr_total/DIFFICULTY_INTERVAL */\n      tag_177\n      jump\t// in\n    tag_220:\n        /* \"contracts/ModuleX.sol\":2828:2872  uint high_d = curr_total/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2895:2901  high_d */\n      dup1\n        /* \"contracts/ModuleX.sol\":2886:2891  low_d */\n      dup3\n        /* \"contracts/ModuleX.sol\":2886:2901  low_d == high_d */\n      sub\n        /* \"contracts/ModuleX.sol\":2883:3487  if(low_d == high_d)... */\n      tag_221\n      jumpi\n        /* \"contracts/ModuleX.sol\":2948:2966  low_d + DIFFICULTY */\n      tag_222\n        /* \"contracts/ModuleX.sol\":2956:2966  DIFFICULTY */\n      immutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n        /* \"contracts/ModuleX.sol\":2948:2953  low_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":2948:2966  low_d + DIFFICULTY */\n      tag_179\n      jump\t// in\n    tag_222:\n        /* \"contracts/ModuleX.sol\":2934:2967  stake_amount/(low_d + DIFFICULTY) */\n      tag_223\n      swap1\n        /* \"contracts/ModuleX.sol\":2934:2946  stake_amount */\n      dup8\n        /* \"contracts/ModuleX.sol\":2934:2967  stake_amount/(low_d + DIFFICULTY) */\n      tag_177\n      jump\t// in\n    tag_223:\n        /* \"contracts/ModuleX.sol\":2927:2967  return stake_amount/(low_d + DIFFICULTY) */\n      swap7\n        /* \"contracts/ModuleX.sol\":2594:3494  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2883:3487  if(low_d == high_d)... */\n    tag_221:\n        /* \"contracts/ModuleX.sol\":3019:3029  uint low_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3095:3113  low_d + DIFFICULTY */\n      tag_225\n        /* \"contracts/ModuleX.sol\":3103:3113  DIFFICULTY */\n      immutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n        /* \"contracts/ModuleX.sol\":3095:3100  low_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3095:3113  low_d + DIFFICULTY */\n      tag_179\n      jump\t// in\n    tag_225:\n        /* \"contracts/ModuleX.sol\":3080:3092  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3058:3077  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":3047:3056  low_d + 1 */\n      tag_226\n        /* \"contracts/ModuleX.sol\":3047:3052  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3055:3056  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3047:3056  low_d + 1 */\n      tag_179\n      jump\t// in\n    tag_226:\n        /* \"contracts/ModuleX.sol\":3046:3077  (low_d + 1)*DIFFICULTY_INTERVAL */\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/ModuleX.sol\":3046:3092  (low_d + 1)*DIFFICULTY_INTERVAL - total_staked */\n      tag_229\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_229:\n        /* \"contracts/ModuleX.sol\":3032:3093  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_230\n      swap1\n        /* \"contracts/ModuleX.sol\":3032:3044  SCALE_FACTOR */\n      dup8\n        /* \"contracts/ModuleX.sol\":3032:3093  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_228\n      jump\t// in\n    tag_230:\n        /* \"contracts/ModuleX.sol\":3032:3114  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      tag_231\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_231:\n        /* \"contracts/ModuleX.sol\":3019:3114  uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3129:3140  uint high_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3199:3218  high_d + DIFFICULTY */\n      tag_232\n        /* \"contracts/ModuleX.sol\":3208:3218  DIFFICULTY */\n      immutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n        /* \"contracts/ModuleX.sol\":3199:3205  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3199:3218  high_d + DIFFICULTY */\n      tag_179\n      jump\t// in\n    tag_232:\n        /* \"contracts/ModuleX.sol\":3170:3196  high_d*DIFFICULTY_INTERVAL */\n      tag_233\n        /* \"contracts/ModuleX.sol\":3177:3196  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":3170:3176  high_d */\n      dup6\n        /* \"contracts/ModuleX.sol\":3170:3196  high_d*DIFFICULTY_INTERVAL */\n      tag_228\n      jump\t// in\n    tag_233:\n        /* \"contracts/ModuleX.sol\":3157:3196  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_234\n      swap1\n        /* \"contracts/ModuleX.sol\":3157:3167  curr_total */\n      dup8\n        /* \"contracts/ModuleX.sol\":3157:3196  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_143\n      jump\t// in\n    tag_234:\n        /* \"contracts/ModuleX.sol\":3143:3197  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_235\n      swap1\n        /* \"contracts/ModuleX.sol\":3143:3155  SCALE_FACTOR */\n      dup9\n        /* \"contracts/ModuleX.sol\":3143:3197  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_228\n      jump\t// in\n    tag_235:\n        /* \"contracts/ModuleX.sol\":3143:3219  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      tag_236\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_236:\n        /* \"contracts/ModuleX.sol\":3129:3219  uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3234:3247  uint middle_r */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":3277:3286  low_d + 1 */\n      tag_240\n        /* \"contracts/ModuleX.sol\":3277:3282  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3285:3286  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3277:3286  low_d + 1 */\n      tag_179\n      jump\t// in\n    tag_240:\n        /* \"contracts/ModuleX.sol\":3270:3286  uint i=low_d + 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3266:3414  for(uint i=low_d + 1; i < high_d; i++)... */\n    tag_237:\n        /* \"contracts/ModuleX.sol\":3292:3298  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3288:3289  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":3288:3298  i < high_d */\n      lt\n        /* \"contracts/ModuleX.sol\":3266:3414  for(uint i=low_d + 1; i < high_d; i++)... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/ModuleX.sol\":3383:3397  i + DIFFICULTY */\n      tag_241\n        /* \"contracts/ModuleX.sol\":3387:3397  DIFFICULTY */\n      immutable(\"0x1067a32fc2bf4122310a8f066f11577e006583df65ce4c5172289c9680be102c\")\n        /* \"contracts/ModuleX.sol\":3383:3384  i */\n      dup3\n        /* \"contracts/ModuleX.sol\":3383:3397  i + DIFFICULTY */\n      tag_179\n      jump\t// in\n    tag_241:\n        /* \"contracts/ModuleX.sol\":3349:3381  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_242\n        /* \"contracts/ModuleX.sol\":3362:3381  DIFFICULTY_INTERVAL */\n      immutable(\"0x6c399bd406b5ecf5145e3304403866216a288795c3b017d0a3011c9de85d8145\")\n        /* \"contracts/ModuleX.sol\":3349:3361  SCALE_FACTOR */\n      dup11\n        /* \"contracts/ModuleX.sol\":3349:3381  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_228\n      jump\t// in\n    tag_242:\n        /* \"contracts/ModuleX.sol\":3349:3398  SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_243\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_243:\n        /* \"contracts/ModuleX.sol\":3337:3398  middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_244\n      swap1\n      dup4\n      tag_179\n      jump\t// in\n    tag_244:\n      swap2\n      pop\n        /* \"contracts/ModuleX.sol\":3300:3303  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":3266:3414  for(uint i=low_d + 1; i < high_d; i++)... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"contracts/ModuleX.sol\":3463:3475  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX.sol\":3455:3461  high_r */\n      dup3\n        /* \"contracts/ModuleX.sol\":3436:3452  low_r + middle_r */\n      tag_245\n        /* \"contracts/ModuleX.sol\":3444:3452  middle_r */\n      dup4\n        /* \"contracts/ModuleX.sol\":3436:3441  low_r */\n      dup7\n        /* \"contracts/ModuleX.sol\":3436:3452  low_r + middle_r */\n      tag_179\n      jump\t// in\n    tag_245:\n        /* \"contracts/ModuleX.sol\":3436:3461  low_r + middle_r + high_r */\n      tag_246\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_246:\n        /* \"contracts/ModuleX.sol\":3435:3475  (low_r + middle_r + high_r)/SCALE_FACTOR */\n      tag_247\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_247:\n        /* \"contracts/ModuleX.sol\":3428:3475  return (low_r + middle_r + high_r)/SCALE_FACTOR */\n      swap10\n        /* \"contracts/ModuleX.sol\":2594:3494  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6842:7122  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_250\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_250:\n        /* \"contracts/ModuleX.sol\":6979:6995  pending_payments */\n      sload(0x04)\n        /* \"contracts/ModuleX.sol\":6970:6995  amount + pending_payments */\n      tag_252\n      swap1\n        /* \"contracts/ModuleX.sol\":6970:6976  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6970:6995  amount + pending_payments */\n      tag_179\n      jump\t// in\n    tag_252:\n        /* \"contracts/ModuleX.sol\":6935:6966  xCREDI.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6960:6964  this */\n      address\n        /* \"contracts/ModuleX.sol\":6935:6966  xCREDI.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"contracts/ModuleX.sol\":6935:6941  xCREDI */\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6935:6951  xCREDI.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"contracts/ModuleX.sol\":6935:6966  xCREDI.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"contracts/ModuleX.sol\":6935:6995  xCREDI.balanceOf(address(this)) >= amount + pending_payments */\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":6927:7029  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6791:6793   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6927:7029  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6773:6794   */\n      mstore\n        /* \"#utility.yul\":6830:6832   */\n      0x1d\n        /* \"#utility.yul\":6810:6828   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6803:6833   */\n      mstore\n        /* \"#utility.yul\":6869:6900   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6849:6867   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6842:6901   */\n      mstore\n        /* \"#utility.yul\":6918:6936   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6927:7029  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_123\n        /* \"#utility.yul\":6589:6942   */\n      jump\n        /* \"contracts/ModuleX.sol\":6927:7029  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n    tag_258:\n        /* \"contracts/ModuleX.sol\":7040:7071  xCREDI.safeTransfer(to, amount) */\n      tag_260\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":7040:7046  xCREDI */\n      immutable(\"0x952803362675801135e2a054978c00aff991471bd59cc252d9b843c8ff1e2daa\")\n        /* \"contracts/ModuleX.sol\":7040:7059  xCREDI.safeTransfer */\n      and\n        /* \"contracts/ModuleX.sol\":7060:7062  to */\n      dup4\n        /* \"contracts/ModuleX.sol\":7064:7070  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":7040:7059  xCREDI.safeTransfer */\n      tag_141\n        /* \"contracts/ModuleX.sol\":7040:7071  xCREDI.safeTransfer(to, amount) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/ModuleX.sol\":7103:7105  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":7087:7114  RewardWithdrawn(to, amount) */\n      and\n      0x1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337\n        /* \"contracts/ModuleX.sol\":7107:7113  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":7087:7114  RewardWithdrawn(to, amount) */\n      mload(0x40)\n      tag_261\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/ModuleX.sol\":7087:7114  RewardWithdrawn(to, amount) */\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":6842:7122  function withdrawRewards(address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3639:4627  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_109:\n        /* \"contracts/ModuleX.sol\":3710:3714  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3747:3754  stopped */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":3710:3714  uint */\n      dup2\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":3747:3754  stopped */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ModuleX.sol\":3746:3754  !stopped */\n      iszero\n        /* \"contracts/ModuleX.sol\":3738:3775  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8350:8352   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3738:3775  require(!stopped, \"ModuleX:STOPPED!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8332:8353   */\n      mstore\n        /* \"#utility.yul\":8389:8391   */\n      0x10\n        /* \"#utility.yul\":8369:8387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8362:8392   */\n      mstore\n        /* \"#utility.yul\":8428:8446   */\n      0x4d6f64756c65583a53544f505045442100000000000000000000000000000000\n        /* \"#utility.yul\":8408:8426   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8401:8447   */\n      mstore\n        /* \"#utility.yul\":8464:8482   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":3738:3775  require(!stopped, \"ModuleX:STOPPED!\") */\n      tag_123\n        /* \"#utility.yul\":8148:8488   */\n      jump\n        /* \"contracts/ModuleX.sol\":3738:3775  require(!stopped, \"ModuleX:STOPPED!\") */\n    tag_263:\n        /* \"contracts/ModuleX.sol\":3809:3810  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":3794:3806  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":3794:3810  stake_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":3786:3859  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8695:8697   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3786:3859  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8677:8698   */\n      mstore\n        /* \"#utility.yul\":8734:8736   */\n      0x2c\n        /* \"#utility.yul\":8714:8732   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8707:8737   */\n      mstore\n        /* \"#utility.yul\":8773:8807   */\n      0x4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":8753:8771   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8746:8808   */\n      mstore\n      shl(0xa0, 0x61746572207468616e203021)\n        /* \"#utility.yul\":8824:8842   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8817:8859   */\n      mstore\n        /* \"#utility.yul\":8876:8895   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":3786:3859  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_123\n        /* \"#utility.yul\":8493:8901   */\n      jump\n        /* \"contracts/ModuleX.sol\":3786:3859  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n    tag_266:\n        /* \"contracts/ModuleX.sol\":577:588  180 minutes */\n      0x2a30\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3878:3901  lock_period >= MATURITY */\n      dup6\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":3870:3937  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9108:9110   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3870:3937  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9090:9111   */\n      mstore\n        /* \"#utility.yul\":9147:9149   */\n      0x1f\n        /* \"#utility.yul\":9127:9145   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9120:9150   */\n      mstore\n        /* \"#utility.yul\":9186:9219   */\n      0x4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100\n        /* \"#utility.yul\":9166:9184   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9159:9220   */\n      mstore\n        /* \"#utility.yul\":9237:9255   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":3870:3937  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_123\n        /* \"#utility.yul\":8906:9261   */\n      jump\n        /* \"contracts/ModuleX.sol\":3870:3937  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n    tag_269:\n        /* \"contracts/ModuleX.sol\":3948:4013  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_272\n        /* \"contracts/ModuleX.sol\":3948:3953  CREDI */\n      immutable(\"0xda4bc0834df5f35f2ff3b3ad68ab00da98db78b82aa2887322aa0d1e3df2efdc\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3948:3970  CREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":3993:3997  this */\n      address\n        /* \"contracts/ModuleX.sol\":4000:4012  stake_amount */\n      dup7\n        /* \"contracts/ModuleX.sol\":3948:3970  CREDI.safeTransferFrom */\n      tag_210\n        /* \"contracts/ModuleX.sol\":3948:4013  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_272:\n        /* \"contracts/ModuleX.sol\":4025:4040  uint96 maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":4043:4067  time_now() + lock_period */\n      tag_275\n        /* \"contracts/ModuleX.sol\":4056:4067  lock_period */\n      dup6\n        /* \"contracts/ModuleX.sol\":2562:2577  block.timestamp */\n      timestamp\n        /* \"contracts/ModuleX.sol\":4043:4067  time_now() + lock_period */\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"contracts/ModuleX.sol\":4025:4067  uint96 maturity = time_now() + lock_period */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4078:4096  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":4099:4128  calculateReward(stake_amount) */\n      tag_277\n        /* \"contracts/ModuleX.sol\":4115:4127  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":4099:4114  calculateReward */\n      tag_97\n        /* \"contracts/ModuleX.sol\":4099:4128  calculateReward(stake_amount) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/ModuleX.sol\":4078:4128  uint reward_amount = calculateReward(stake_amount) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4139:4152  uint stake_id */\n      0x00\n        /* \"contracts/ModuleX.sol\":4155:4167  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":4139:4167  uint stake_id = stakes_count */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4197:4373  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ModuleX.sol\":4232:4244  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ModuleX.sol\":4232:4244  _msgSender() */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4197:4373  StakeDetails({... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0x60\n      swap5\n      dup6\n      add\n      dup9\n      swap1\n      mstore\n      0x00\n        /* \"contracts/ModuleX.sol\":4178:4194  stakes[stake_id] */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4178:4184  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":4178:4194  stakes[stake_id] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/ModuleX.sol\":4178:4373  stakes[stake_id] = StakeDetails({... */\n      dup9\n      mload\n      swap5\n      dup10\n      add\n      mload\n      swap5\n      swap1\n      swap7\n      and\n      shl(0xa0, 0x01)\n      swap5\n      swap1\n      swap6\n      and\n      swap4\n      swap1\n      swap4\n      mul\n      swap4\n      swap1\n      swap4\n      or\n      dup5\n      sstore\n      dup6\n      add\n      mload\n      swap1\n      dup4\n      add\n      sstore\n      swap3\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/ModuleX.sol\":4394:4406  total_staked */\n      0x03\n        /* \"contracts/ModuleX.sol\":4394:4422  total_staked += stake_amount */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":4197:4373  StakeDetails({... */\n      dup9\n      swap3\n      swap1\n        /* \"contracts/ModuleX.sol\":4394:4422  total_staked += stake_amount */\n      tag_279\n      swap1\n        /* \"contracts/ModuleX.sol\":4197:4373  StakeDetails({... */\n      dup5\n      swap1\n        /* \"contracts/ModuleX.sol\":4394:4422  total_staked += stake_amount */\n      tag_179\n      jump\t// in\n    tag_279:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4454:4467  reward_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":4434:4450  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":4434:4467  pending_payments += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_280\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_280:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":4483:4552  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9715:9740   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9776:9815   */\n      dup6\n      and\n        /* \"#utility.yul\":9771:9773   */\n      0x20\n        /* \"#utility.yul\":9756:9774   */\n      dup3\n      add\n        /* \"#utility.yul\":9749:9816   */\n      mstore\n        /* \"#utility.yul\":9832:9850   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9825:9859   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":9890:9892   */\n      0x60\n        /* \"#utility.yul\":9875:9893   */\n      dup2\n      add\n        /* \"#utility.yul\":9868:9902   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":4483:4552  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ModuleX.sol\":4483:4552  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9702:9705   */\n      0x80\n        /* \"contracts/ModuleX.sol\":4483:4552  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      add\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":4563:4575  stakes_count */\n      0x02\n        /* \"contracts/ModuleX.sol\":4563:4577  stakes_count++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/ModuleX.sol\":4563:4575  stakes_count */\n      0x00\n        /* \"contracts/ModuleX.sol\":4563:4577  stakes_count++ */\n      tag_284\n      dup4\n      tag_285\n      jump\t// in\n    tag_284:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4595:4603  stake_id */\n      swap1\n      swap8\n        /* \"contracts/ModuleX.sol\":4605:4618  reward_amount */\n      swap2\n      swap7\n      pop\n        /* \"contracts/ModuleX.sol\":3639:4627  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_287\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_123\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_123\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10245:10300   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10227:10301   */\n      mstore\n        /* \"#utility.yul\":10317:10335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10310:10344   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_203\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10200:10218   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_302:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10575:10630   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10557:10631   */\n      mstore\n        /* \"#utility.yul\":10667:10722   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":10647:10665   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":10640:10723   */\n      mstore\n        /* \"#utility.yul\":10739:10757   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10732:10766   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_307\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":10530:10548   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_302\n        /* \"#utility.yul\":10355:10772   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_311:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_313)\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:660   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:661   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_123\n        /* \"#utility.yul\":427:667   */\n      jump\n        /* \"#utility.yul\":196:422   */\n    tag_40:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":369:392   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:422   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1308:1654   */\n    tag_69:\n        /* \"#utility.yul\":1376:1382   */\n      0x00\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1437:1439   */\n      0x40\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1416:1423   */\n      dup6\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1457   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1450:1451   */\n      0x00\n        /* \"#utility.yul\":1443:1455   */\n      revert\n        /* \"#utility.yul\":1405:1457   */\n    tag_327:\n      pop\n      pop\n        /* \"#utility.yul\":1498:1521   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1590:1622   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1308:1654   */\n      jump\t// out\n        /* \"#utility.yul\":1659:2269   */\n    tag_85:\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1794:1803   */\n      dup4\n        /* \"#utility.yul\":1785:1792   */\n      dup6\n        /* \"#utility.yul\":1781:1804   */\n      sub\n        /* \"#utility.yul\":1777:1809   */\n      slt\n        /* \"#utility.yul\":1774:1826   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      0x00\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1774:1826   */\n    tag_329:\n        /* \"#utility.yul\":1862:1871   */\n      dup3\n        /* \"#utility.yul\":1849:1872   */\n      calldataload\n        /* \"#utility.yul\":1895:1913   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1887:1893   */\n      dup2\n        /* \"#utility.yul\":1884:1914   */\n      gt\n        /* \"#utility.yul\":1881:1931   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1881:1931   */\n    tag_330:\n        /* \"#utility.yul\":1950:1972   */\n      dup4\n      add\n        /* \"#utility.yul\":2003:2007   */\n      0x1f\n        /* \"#utility.yul\":1995:2008   */\n      dup2\n      add\n        /* \"#utility.yul\":1991:2018   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1981:2036   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2032:2033   */\n      0x00\n        /* \"#utility.yul\":2029:2030   */\n      0x00\n        /* \"#utility.yul\":2022:2034   */\n      revert\n        /* \"#utility.yul\":1981:2036   */\n    tag_331:\n        /* \"#utility.yul\":2072:2074   */\n      dup1\n        /* \"#utility.yul\":2059:2075   */\n      calldataload\n        /* \"#utility.yul\":2098:2116   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2090:2096   */\n      dup2\n        /* \"#utility.yul\":2087:2117   */\n      gt\n        /* \"#utility.yul\":2084:2134   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2130:2131   */\n      0x00\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2120:2132   */\n      revert\n        /* \"#utility.yul\":2084:2134   */\n    tag_332:\n        /* \"#utility.yul\":2183:2190   */\n      dup6\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2168:2174   */\n      dup3\n        /* \"#utility.yul\":2165:2166   */\n      0x05\n        /* \"#utility.yul\":2161:2175   */\n      shl\n        /* \"#utility.yul\":2157:2159   */\n      dup5\n        /* \"#utility.yul\":2153:2176   */\n      add\n        /* \"#utility.yul\":2149:2181   */\n      add\n        /* \"#utility.yul\":2146:2191   */\n      gt\n        /* \"#utility.yul\":2143:2208   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2204:2205   */\n      0x00\n        /* \"#utility.yul\":2201:2202   */\n      0x00\n        /* \"#utility.yul\":2194:2206   */\n      revert\n        /* \"#utility.yul\":2143:2208   */\n    tag_333:\n        /* \"#utility.yul\":2235:2237   */\n      0x20\n        /* \"#utility.yul\":2227:2238   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2257:2263   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1659:2269   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2915   */\n    tag_316:\n        /* \"#utility.yul\":2787:2807   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2836:2890   */\n      dup2\n      and\n        /* \"#utility.yul\":2826:2891   */\n      dup2\n      eq\n        /* \"#utility.yul\":2816:2909   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2902:2903   */\n      0x00\n        /* \"#utility.yul\":2895:2907   */\n      revert\n        /* \"#utility.yul\":2816:2909   */\n    tag_336:\n        /* \"#utility.yul\":2719:2915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2920:3220   */\n    tag_104:\n        /* \"#utility.yul\":2988:2994   */\n      0x00\n        /* \"#utility.yul\":2996:3002   */\n      0x00\n        /* \"#utility.yul\":3049:3051   */\n      0x40\n        /* \"#utility.yul\":3037:3046   */\n      dup4\n        /* \"#utility.yul\":3028:3035   */\n      dup6\n        /* \"#utility.yul\":3024:3047   */\n      sub\n        /* \"#utility.yul\":3020:3052   */\n      slt\n        /* \"#utility.yul\":3017:3069   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3065:3066   */\n      0x00\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3055:3067   */\n      revert\n        /* \"#utility.yul\":3017:3069   */\n    tag_338:\n        /* \"#utility.yul\":3088:3117   */\n      tag_339\n        /* \"#utility.yul\":3107:3116   */\n      dup4\n        /* \"#utility.yul\":3088:3117   */\n      tag_316\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3078:3117   */\n      swap5\n        /* \"#utility.yul\":3186:3188   */\n      0x20\n        /* \"#utility.yul\":3171:3189   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3158:3190   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2920:3220   */\n      jump\t// out\n        /* \"#utility.yul\":3225:3637   */\n    tag_108:\n        /* \"#utility.yul\":3292:3298   */\n      0x00\n        /* \"#utility.yul\":3300:3306   */\n      0x00\n        /* \"#utility.yul\":3353:3355   */\n      0x40\n        /* \"#utility.yul\":3341:3350   */\n      dup4\n        /* \"#utility.yul\":3332:3339   */\n      dup6\n        /* \"#utility.yul\":3328:3351   */\n      sub\n        /* \"#utility.yul\":3324:3356   */\n      slt\n        /* \"#utility.yul\":3321:3373   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3369:3370   */\n      0x00\n        /* \"#utility.yul\":3366:3367   */\n      0x00\n        /* \"#utility.yul\":3359:3371   */\n      revert\n        /* \"#utility.yul\":3321:3373   */\n    tag_341:\n        /* \"#utility.yul\":3408:3417   */\n      dup3\n        /* \"#utility.yul\":3395:3418   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":3451:3456   */\n      dup2\n        /* \"#utility.yul\":3447:3485   */\n      and\n        /* \"#utility.yul\":3440:3445   */\n      dup2\n        /* \"#utility.yul\":3437:3486   */\n      eq\n        /* \"#utility.yul\":3427:3504   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3497:3498   */\n      0x00\n        /* \"#utility.yul\":3490:3502   */\n      revert\n        /* \"#utility.yul\":3895:4081   */\n    tag_114:\n        /* \"#utility.yul\":3954:3960   */\n      0x00\n        /* \"#utility.yul\":4007:4009   */\n      0x20\n        /* \"#utility.yul\":3995:4004   */\n      dup3\n        /* \"#utility.yul\":3986:3993   */\n      dup5\n        /* \"#utility.yul\":3982:4005   */\n      sub\n        /* \"#utility.yul\":3978:4010   */\n      slt\n        /* \"#utility.yul\":3975:4027   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4023:4024   */\n      0x00\n        /* \"#utility.yul\":4020:4021   */\n      0x00\n        /* \"#utility.yul\":4013:4025   */\n      revert\n        /* \"#utility.yul\":3975:4027   */\n    tag_345:\n        /* \"#utility.yul\":4046:4075   */\n      tag_346\n        /* \"#utility.yul\":4065:4074   */\n      dup3\n        /* \"#utility.yul\":4046:4075   */\n      tag_316\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4036:4075   */\n      swap4\n        /* \"#utility.yul\":3895:4081   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5564:5691   */\n    tag_317:\n        /* \"#utility.yul\":5625:5635   */\n      0x4e487b71\n        /* \"#utility.yul\":5620:5623   */\n      0xe0\n        /* \"#utility.yul\":5616:5636   */\n      shl\n        /* \"#utility.yul\":5613:5614   */\n      0x00\n        /* \"#utility.yul\":5606:5637   */\n      mstore\n        /* \"#utility.yul\":5656:5660   */\n      0x11\n        /* \"#utility.yul\":5653:5654   */\n      0x04\n        /* \"#utility.yul\":5646:5661   */\n      mstore\n        /* \"#utility.yul\":5680:5684   */\n      0x24\n        /* \"#utility.yul\":5677:5678   */\n      0x00\n        /* \"#utility.yul\":5670:5685   */\n      revert\n        /* \"#utility.yul\":5696:5824   */\n    tag_143:\n        /* \"#utility.yul\":5763:5772   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5784:5795   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5781:5818   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":5798:5816   */\n      tag_354\n      tag_317\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5696:5824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6947:7164   */\n    tag_177:\n        /* \"#utility.yul\":6987:6988   */\n      0x00\n        /* \"#utility.yul\":7013:7014   */\n      dup3\n        /* \"#utility.yul\":7003:7135   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":7057:7067   */\n      0x4e487b71\n        /* \"#utility.yul\":7052:7055   */\n      0xe0\n        /* \"#utility.yul\":7048:7068   */\n      shl\n        /* \"#utility.yul\":7045:7046   */\n      0x00\n        /* \"#utility.yul\":7038:7069   */\n      mstore\n        /* \"#utility.yul\":7092:7096   */\n      0x12\n        /* \"#utility.yul\":7089:7090   */\n      0x04\n        /* \"#utility.yul\":7082:7097   */\n      mstore\n        /* \"#utility.yul\":7120:7124   */\n      0x24\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7110:7125   */\n      revert\n        /* \"#utility.yul\":7003:7135   */\n    tag_359:\n      pop\n        /* \"#utility.yul\":7149:7158   */\n      div\n      swap1\n        /* \"#utility.yul\":6947:7164   */\n      jump\t// out\n        /* \"#utility.yul\":7169:7294   */\n    tag_179:\n        /* \"#utility.yul\":7234:7243   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7255:7265   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7252:7288   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7268:7286   */\n      tag_354\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":7299:7426   */\n    tag_188:\n        /* \"#utility.yul\":7360:7370   */\n      0x4e487b71\n        /* \"#utility.yul\":7355:7358   */\n      0xe0\n        /* \"#utility.yul\":7351:7371   */\n      shl\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7341:7372   */\n      mstore\n        /* \"#utility.yul\":7391:7395   */\n      0x32\n        /* \"#utility.yul\":7388:7389   */\n      0x04\n        /* \"#utility.yul\":7381:7396   */\n      mstore\n        /* \"#utility.yul\":7415:7419   */\n      0x24\n        /* \"#utility.yul\":7412:7413   */\n      0x00\n        /* \"#utility.yul\":7405:7420   */\n      revert\n        /* \"#utility.yul\":7786:7954   */\n    tag_228:\n        /* \"#utility.yul\":7859:7868   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7890:7899   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7907:7922   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7901:7923   */\n      dup5\n      eq\n        /* \"#utility.yul\":7887:7924   */\n      or\n        /* \"#utility.yul\":7877:7948   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7928:7946   */\n      tag_354\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":7959:8143   */\n    tag_257:\n        /* \"#utility.yul\":8029:8035   */\n      0x00\n        /* \"#utility.yul\":8082:8084   */\n      0x20\n        /* \"#utility.yul\":8070:8079   */\n      dup3\n        /* \"#utility.yul\":8061:8068   */\n      dup5\n        /* \"#utility.yul\":8057:8080   */\n      sub\n        /* \"#utility.yul\":8053:8085   */\n      slt\n        /* \"#utility.yul\":8050:8102   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":8098:8099   */\n      0x00\n        /* \"#utility.yul\":8095:8096   */\n      0x00\n        /* \"#utility.yul\":8088:8100   */\n      revert\n        /* \"#utility.yul\":8050:8102   */\n    tag_369:\n      pop\n        /* \"#utility.yul\":8121:8137   */\n      mload\n      swap2\n        /* \"#utility.yul\":7959:8143   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9266:9481   */\n    tag_276:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9334:9368   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":9370:9404   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":9330:9405   */\n      add\n      swap1\n        /* \"#utility.yul\":9417:9452   */\n      dup2\n      gt\n        /* \"#utility.yul\":9414:9475   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":9455:9473   */\n      tag_354\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":9913:10048   */\n    tag_285:\n        /* \"#utility.yul\":9952:9955   */\n      0x00\n        /* \"#utility.yul\":9973:9990   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9970:10013   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9993:10011   */\n      tag_379\n      tag_317\n      jump\t// in\n    tag_379:\n      pop\n        /* \"#utility.yul\":10040:10041   */\n      0x01\n        /* \"#utility.yul\":10029:10042   */\n      add\n      swap1\n        /* \"#utility.yul\":9913:10048   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f6ce814925eb8917629b1f92e81f273d26cfe7de88f6a2f88f4289aacc86006164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 156,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:920:10",
										"nodeType": "YulBlock",
										"src": "0:920:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "328:382:10",
													"nodeType": "YulBlock",
													"src": "328:382:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:10",
																"nodeType": "YulBlock",
																"src": "375:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:10",
																					"nodeType": "YulLiteral",
																					"src": "384:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:10",
																					"nodeType": "YulLiteral",
																					"src": "387:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:10"
																			},
																			"nativeSrc": "377:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:10"
																		},
																		"nativeSrc": "377:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:10"
																		},
																		"nativeSrc": "345:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:10",
																		"nodeType": "YulLiteral",
																		"src": "370:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:10"
																},
																"nativeSrc": "341:33:10",
																"nodeType": "YulFunctionCall",
																"src": "341:33:10"
															},
															"nativeSrc": "338:53:10",
															"nodeType": "YulIf",
															"src": "338:53:10"
														},
														{
															"nativeSrc": "400:50:10",
															"nodeType": "YulAssignment",
															"src": "400:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:10"
																},
																"nativeSrc": "410:40:10",
																"nodeType": "YulFunctionCall",
																"src": "410:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:10"
																}
															]
														},
														{
															"nativeSrc": "459:59:10",
															"nodeType": "YulAssignment",
															"src": "459:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "514:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nativeSrc": "499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:10"
																},
																"nativeSrc": "469:49:10",
																"nodeType": "YulFunctionCall",
																"src": "469:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:10"
																}
															]
														},
														{
															"nativeSrc": "527:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "527:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "540:1:10",
																"nodeType": "YulLiteral",
																"src": "540:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "531:5:10",
																	"nodeType": "YulTypedName",
																	"src": "531:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "550:34:10",
															"nodeType": "YulAssignment",
															"src": "550:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "569:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "569:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "580:2:10",
																				"nodeType": "YulLiteral",
																				"src": "580:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "565:3:10"
																		},
																		"nativeSrc": "565:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "565:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "559:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "559:5:10"
																},
																"nativeSrc": "559:25:10",
																"nodeType": "YulFunctionCall",
																"src": "559:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "550:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "550:5:10"
																}
															]
														},
														{
															"nativeSrc": "593:15:10",
															"nodeType": "YulAssignment",
															"src": "593:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "603:5:10",
																"nodeType": "YulIdentifier",
																"src": "603:5:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:10"
																}
															]
														},
														{
															"nativeSrc": "617:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "617:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "632:1:10",
																"nodeType": "YulLiteral",
																"src": "632:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "621:7:10",
																	"nodeType": "YulTypedName",
																	"src": "621:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "642:36:10",
															"nodeType": "YulAssignment",
															"src": "642:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "663:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "674:2:10",
																				"nodeType": "YulLiteral",
																				"src": "674:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "659:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:10"
																		},
																		"nativeSrc": "659:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "659:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:10"
																},
																"nativeSrc": "653:25:10",
																"nodeType": "YulFunctionCall",
																"src": "653:25:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "642:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "642:7:10"
																}
															]
														},
														{
															"nativeSrc": "687:17:10",
															"nodeType": "YulAssignment",
															"src": "687:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "697:7:10",
																"nodeType": "YulIdentifier",
																"src": "697:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "196:514:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:10",
														"nodeType": "YulTypedName",
														"src": "270:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:10",
														"nodeType": "YulTypedName",
														"src": "281:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:10",
														"nodeType": "YulTypedName",
														"src": "293:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:10",
														"nodeType": "YulTypedName",
														"src": "301:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:10",
														"nodeType": "YulTypedName",
														"src": "309:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:10",
														"nodeType": "YulTypedName",
														"src": "317:6:10",
														"type": ""
													}
												],
												"src": "196:514:10"
											},
											{
												"body": {
													"nativeSrc": "816:102:10",
													"nodeType": "YulBlock",
													"src": "816:102:10",
													"statements": [
														{
															"nativeSrc": "826:26:10",
															"nodeType": "YulAssignment",
															"src": "826:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:10",
																		"nodeType": "YulLiteral",
																		"src": "849:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:10"
																},
																"nativeSrc": "834:18:10",
																"nodeType": "YulFunctionCall",
																"src": "834:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:10",
																								"nodeType": "YulLiteral",
																								"src": "899:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:10",
																								"nodeType": "YulLiteral",
																								"src": "904:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:10"
																						},
																						"nativeSrc": "895:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:10",
																						"nodeType": "YulLiteral",
																						"src": "908:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:10"
																				},
																				"nativeSrc": "891:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:10"
																		},
																		"nativeSrc": "879:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:10"
																},
																"nativeSrc": "861:51:10",
																"nodeType": "YulFunctionCall",
																"src": "861:51:10"
															},
															"nativeSrc": "861:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:10",
														"nodeType": "YulTypedName",
														"src": "785:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:10",
														"nodeType": "YulTypedName",
														"src": "796:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:10",
														"nodeType": "YulTypedName",
														"src": "807:4:10",
														"type": ""
													}
												],
												"src": "715:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101006040525f805460ff60a01b19168155600b6080526001600255600381905560045534801561002e575f5ffd5b506040516118b23803806118b283398101604081905261004d91610106565b338061007257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61007b8161009c565b506001600160a01b0393841660c0529190921660e05260a052608052610146565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114610101575f5ffd5b919050565b5f5f5f5f60808587031215610119575f5ffd5b610122856100eb565b9350610130602086016100eb565b6040860151606090960151949790965092505050565b60805160a05160c05160e0516116b46101fe5f395f818161023c015281816102bb0152818161059201528181610b2801528181610ec70152610f9301525f81816101d501528181610365015281816107c301528181610a8e015261112101525f81816101880152818161087a01528181610c4c01528181610c8001528181610d1c01528181610da00152610e2c01525f818161085901528181610cb301528181610cf201528181610d760152610e0201526116b45ff3fe608060405234801561000f575f5ffd5b5060043610610175575f3560e01c8063af7568dd116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610389578063d93c04a01461039c578063f2fde38b146103c4575f5ffd5b8063ce325bf814610313578063d2d7231f14610350578063d46149a214610363575f5ffd5b8063b6baffe3116100b8578063b6baffe3146102e5578063bc854352146102ed578063beceed3914610300575f5ffd5b8063af7568dd146102ad578063b109beec146102b6578063b5fa91fe146102dd575f5ffd5b806375f12b211161013d5780638e12c0cd116101185780638e12c0cd146102705780638f4729b714610291578063ac00500f1461029a575f5ffd5b806375f12b21146102175780637c2fdeb51461023a5780638da5cb5b14610260575f5ffd5b806307da68f514610179578063109cf39914610183578063379607f5146101bd5780636db08f25146101d0578063715018a61461020f575b5f5ffd5b6101816103d7565b005b6101aa7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101aa6101cb366004611474565b6103f3565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b4565b610181610618565b5f5461022a90600160a01b900460ff1681565b60405190151581526020016101b4565b7f00000000000000000000000000000000000000000000000000000000000000006101f7565b5f546001600160a01b03166101f7565b610279612a3081565b6040516001600160601b0390911681526020016101b4565b6101aa60045481565b6101816102a836600461148b565b61062b565b6101aa60035481565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6101aa610841565b6101aa610856565b6101816102fb3660046114ab565b6108b0565b61018161030e366004611474565b610ac2565b610326610321366004611474565b610b8e565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101b4565b6101aa61035e366004611474565b610c2b565b7f00000000000000000000000000000000000000000000000000000000000000006101f7565b610181610397366004611537565b610e9d565b6103af6103aa36600461155f565b611001565b604080519283526020830191909152016101b4565b6101816103d2366004611586565b611290565b6103df6112cd565b5f805460ff60a01b1916600160a01b179055565b5f815f81118015610405575060025481105b6104525760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b60448201526064015b60405180910390fd5b5f83815260016020526040902080546001600160a01b031633146104b85760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572006044820152606401610449565b8054600160a01b90046001600160601b0316426001600160601b031610156105355760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74206044820152697065726d69747465642160b01b6064820152608401610449565b5f8160020154116105885760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d00000000000000006044820152606401610449565b60028101546105c17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112f9565b8060045f8282546105d291906115ba565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b6106206112cd565b6106295f61136d565b565b6106336112cd565b815f81118015610644575060025481105b61068c5760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5f82116106ed5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b6064820152608401610449565b5f8381526001602052604090208054600160a01b90046001600160601b0316426001600160601b0316111561075c5760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610449565b80600101548311156107b05760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610449565b6107ea3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906112f9565b82816001015f8282546107fd91906115ba565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f600160025461085191906115ba565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003546108a691906115d3565b61085191906115f2565b6108b86112cd565b5f805b82811015610a39576002548484838181106108d8576108d8611605565b90506020020135106109285760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5f60015f86868581811061093e5761093e611605565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b031611156109bb5760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610449565b60018101546109ca90846115f2565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a0557610a05611605565b905060200201358260010154604051610a28929190918252602082015260400190565b60405180910390a1506001016108bb565b505f8111610a895760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e742069732030210000000000006044820152606401610449565b610abd7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112f9565b505050565b5f8111610b235760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b6064820152608401610449565b610b587f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330846113c9565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b5f5f5f5f845f81118015610ba3575060025481105b610beb5760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5050505f92835250506001602081905260409091208054918101546002909101546001600160a01b03831693600160a01b9093046001600160601b031692565b5f5f670de0b6b3a764000090505f83600354610c4791906115f2565b90505f7f0000000000000000000000000000000000000000000000000000000000000000600354610c7891906115d3565b90505f610ca57f0000000000000000000000000000000000000000000000000000000000000000846115d3565b9050808203610cec57610cd87f0000000000000000000000000000000000000000000000000000000000000000836115f2565b610ce290876115d3565b9695505050505050565b5f610d177f0000000000000000000000000000000000000000000000000000000000000000846115f2565b6003547f0000000000000000000000000000000000000000000000000000000000000000610d468660016115f2565b610d509190611619565b610d5a91906115ba565b610d649087611619565b610d6e91906115d3565b90505f610d9b7f0000000000000000000000000000000000000000000000000000000000000000846115f2565b610dc57f000000000000000000000000000000000000000000000000000000000000000085611619565b610dcf90876115ba565b610dd99088611619565b610de391906115d3565b90505f80610df28660016115f2565b90505b84811015610e6f57610e277f0000000000000000000000000000000000000000000000000000000000000000826115f2565b610e517f00000000000000000000000000000000000000000000000000000000000000008a611619565b610e5b91906115d3565b610e6590836115f2565b9150600101610df5565b508682610e7c83866115f2565b610e8691906115f2565b610e9091906115d3565b9998505050505050505050565b610ea56112cd565b600454610eb290826115f2565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610f14573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f389190611630565b1015610f865760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610449565b610fba6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836112f9565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133782604051610ff591815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff161561105d5760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f5050454421000000000000000000000000000000006044820152606401610449565b5f83116110c15760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201526b61746572207468616e20302160a01b6064820152608401610449565b612a306001600160601b038516101561111c5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421006044820152606401610449565b6111517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330866113c9565b5f61115c8542611647565b90505f61116885610c2b565b90505f600254905060405180608001604052806111823390565b6001600160a01b0390811682526001600160601b0386811660208085019190915260408085018c905260609485018890525f878152600180845282822088519489015194909616600160a01b9490951693909302939093178455850151908301559290910151600290910155600380548892906112009084906115f2565b925050819055508160045f82825461121891906115f2565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260028054905f61127e83611666565b90915550909791965090945050505050565b6112986112cd565b6001600160a01b0381166112c157604051631e4fbdf760e01b81525f6004820152602401610449565b6112ca8161136d565b50565b5f546001600160a01b031633146106295760405163118cdaa760e01b8152336004820152602401610449565b6040516001600160a01b03838116602483015260448201839052610abd91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611408565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114029186918216906323b872dd90608401611326565b50505050565b5f5f60205f8451602086015f885af180611427576040513d5f823e3d81fd5b50505f513d9150811561143e57806001141561144b565b6001600160a01b0384163b155b1561140257604051635274afe760e01b81526001600160a01b0385166004820152602401610449565b5f60208284031215611484575f5ffd5b5035919050565b5f5f6040838503121561149c575f5ffd5b50508035926020909101359150565b5f5f602083850312156114bc575f5ffd5b823567ffffffffffffffff8111156114d2575f5ffd5b8301601f810185136114e2575f5ffd5b803567ffffffffffffffff8111156114f8575f5ffd5b8560208260051b840101111561150c575f5ffd5b6020919091019590945092505050565b80356001600160a01b0381168114611532575f5ffd5b919050565b5f5f60408385031215611548575f5ffd5b6115518361151c565b946020939093013593505050565b5f5f60408385031215611570575f5ffd5b82356001600160601b0381168114611551575f5ffd5b5f60208284031215611596575f5ffd5b61159f8261151c565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156115cd576115cd6115a6565b92915050565b5f826115ed57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156115cd576115cd6115a6565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115cd576115cd6115a6565b5f60208284031215611640575f5ffd5b5051919050565b6001600160601b0381811683821601908111156115cd576115cd6115a6565b5f60018201611677576116776115a6565b506001019056fea2646970667358221220f6ce814925eb8917629b1f92e81f273d26cfe7de88f6a2f88f4289aacc86006164736f6c634300081e0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0xB PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18B2 CODESIZE SUB DUP1 PUSH2 0x18B2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x4D SWAP2 PUSH2 0x106 JUMP JUMPDEST CALLER DUP1 PUSH2 0x72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B DUP2 PUSH2 0x9C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0xC0 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0xE0 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x80 MSTORE PUSH2 0x146 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x119 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x122 DUP6 PUSH2 0xEB JUMP JUMPDEST SWAP4 POP PUSH2 0x130 PUSH1 0x20 DUP7 ADD PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x16B4 PUSH2 0x1FE PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x23C ADD MSTORE DUP2 DUP2 PUSH2 0x2BB ADD MSTORE DUP2 DUP2 PUSH2 0x592 ADD MSTORE DUP2 DUP2 PUSH2 0xB28 ADD MSTORE DUP2 DUP2 PUSH2 0xEC7 ADD MSTORE PUSH2 0xF93 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1D5 ADD MSTORE DUP2 DUP2 PUSH2 0x365 ADD MSTORE DUP2 DUP2 PUSH2 0x7C3 ADD MSTORE DUP2 DUP2 PUSH2 0xA8E ADD MSTORE PUSH2 0x1121 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x188 ADD MSTORE DUP2 DUP2 PUSH2 0x87A ADD MSTORE DUP2 DUP2 PUSH2 0xC4C ADD MSTORE DUP2 DUP2 PUSH2 0xC80 ADD MSTORE DUP2 DUP2 PUSH2 0xD1C ADD MSTORE DUP2 DUP2 PUSH2 0xDA0 ADD MSTORE PUSH2 0xE2C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x859 ADD MSTORE DUP2 DUP2 PUSH2 0xCB3 ADD MSTORE DUP2 DUP2 PUSH2 0xCF2 ADD MSTORE DUP2 DUP2 PUSH2 0xD76 ADD MSTORE PUSH2 0xE02 ADD MSTORE PUSH2 0x16B4 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x175 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x363 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB6BAFFE3 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x300 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8E12C0CD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x29A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x181 PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x1F7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x618 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x22A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x841 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x856 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x1537 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x405 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7065726D697474656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x5C1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12F9 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x620 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x629 PUSH0 PUSH2 0x136D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x633 PUSH2 0x12CD JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x644 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8D8 JUMPI PUSH2 0x8D8 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93E PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x9CA SWAP1 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA28 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x8BB JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xABD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xB58 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xBA3 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCA5 PUSH32 0x0 DUP5 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xCEC JUMPI PUSH2 0xCD8 PUSH32 0x0 DUP4 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xCE2 SWAP1 DUP8 PUSH2 0x15D3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD17 PUSH32 0x0 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH32 0x0 PUSH2 0xD46 DUP7 PUSH1 0x1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0xD64 SWAP1 DUP8 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD9B PUSH32 0x0 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xDC5 PUSH32 0x0 DUP6 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xDCF SWAP1 DUP8 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0xDD9 SWAP1 DUP9 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xDF2 DUP7 PUSH1 0x1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE27 PUSH32 0x0 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE51 PUSH32 0x0 DUP11 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xE65 SWAP1 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xDF5 JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xE7C DUP4 DUP7 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEA5 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xEB2 SWAP1 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF14 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST LT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xFBA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x12F9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x105D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x61746572207468616E203021 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x2A30 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1151 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x13C9 JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP6 TIMESTAMP PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1168 DUP6 PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1182 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1200 SWAP1 DUP5 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1218 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x127E DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x12CA DUP2 PUSH2 0x136D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xABD SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1408 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1402 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1326 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1427 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x143E JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x144B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1484 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x150C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1532 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1551 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x159F DUP3 PUSH2 0x151C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1640 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1677 JUMPI PUSH2 0x1677 PUSH2 0x15A6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xCE DUP2 BLOBHASH 0x25 0xEB DUP10 OR PUSH3 0x9B1F92 0xE8 0x1F 0x27 RETURNDATASIZE 0x26 0xCF SWAPN 0xDE DUP9 0xF6 LOG2 EXTCALL DUP16 TIMESTAMP DUP10 0xAA 0xCC DUP7 STOP PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "278:6930:8:-:0;;;530:5;508:27;;-1:-1:-1;;;;508:27:8;;;644:2;608:38;;508:27;854:29;;890:28;;;;925:32;;1433:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:10;834:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1572:27:8;;::::1;;::::0;1610:29;;;::::1;;::::0;1650:42:::1;::::0;1703:24:::1;::::0;278:6930;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;580:2;565:18;;559:25;674:2;659:18;;;653:25;196:514;;459:59;;-1:-1:-1;196:514:10;-1:-1:-1;;;196:514:10:o;715:203::-;278:6930:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_858": {
									"entryPoint": null,
									"id": 858,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_INTERVAL_855": {
									"entryPoint": null,
									"id": 855,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MATURITY_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5128,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4813,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4973,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1517": {
									"entryPoint": 2754,
									"id": 1517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchWithdrawCREDI_1488": {
									"entryPoint": 2224,
									"id": 1488,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1155": {
									"entryPoint": 3115,
									"id": 1155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1337": {
									"entryPoint": 1011,
									"id": 1337,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCREDIAddress_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDifficulty_1167": {
									"entryPoint": 2134,
									"id": 1167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1027": {
									"entryPoint": 2958,
									"id": 1027,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getStakesCount_992": {
									"entryPoint": 2113,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getxCREDIAddress_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_875": {
									"entryPoint": null,
									"id": 875,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1560,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 5065,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 4857,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1264": {
									"entryPoint": 4097,
									"id": 1264,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@stop_1564": {
									"entryPoint": 983,
									"id": 1564,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stopped_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@time_now_1039": {
									"entryPoint": null,
									"id": 1039,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@total_staked_872": {
									"entryPoint": null,
									"id": 872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4752,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCREDI_1401": {
									"entryPoint": 1579,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_1554": {
									"entryPoint": 3741,
									"id": 1554,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xCREDI_861": {
									"entryPoint": null,
									"id": 861,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10774:10",
										"nodeType": "YulBlock",
										"src": "0:10774:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:10",
													"nodeType": "YulBlock",
													"src": "115:76:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:25:10",
																"nodeType": "YulFunctionCall",
																"src": "160:25:10"
															},
															"nativeSrc": "160:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "266:156:10",
													"nodeType": "YulBlock",
													"src": "266:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:10",
																"nodeType": "YulBlock",
																"src": "312:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:10",
																					"nodeType": "YulLiteral",
																					"src": "321:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "324:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:10"
																			},
																			"nativeSrc": "314:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:10"
																		},
																		"nativeSrc": "314:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:10"
																		},
																		"nativeSrc": "283:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:10"
																},
																"nativeSrc": "279:32:10",
																"nodeType": "YulFunctionCall",
																"src": "279:32:10"
															},
															"nativeSrc": "276:52:10",
															"nodeType": "YulIf",
															"src": "276:52:10"
														},
														{
															"nativeSrc": "337:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "337:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "350:1:10",
																"nodeType": "YulLiteral",
																"src": "350:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "341:5:10",
																	"nodeType": "YulTypedName",
																	"src": "341:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "360:32:10",
															"nodeType": "YulAssignment",
															"src": "360:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "369:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:10"
																},
																"nativeSrc": "369:23:10",
																"nodeType": "YulFunctionCall",
																"src": "369:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																}
															]
														},
														{
															"nativeSrc": "401:15:10",
															"nodeType": "YulAssignment",
															"src": "401:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "411:5:10",
																"nodeType": "YulIdentifier",
																"src": "411:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:10",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:10",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:10",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													}
												],
												"src": "196:226:10"
											},
											{
												"body": {
													"nativeSrc": "542:125:10",
													"nodeType": "YulBlock",
													"src": "542:125:10",
													"statements": [
														{
															"nativeSrc": "552:26:10",
															"nodeType": "YulAssignment",
															"src": "552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:10"
																},
																"nativeSrc": "560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "594:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "617:42:10",
																				"nodeType": "YulLiteral",
																				"src": "617:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:10"
																		},
																		"nativeSrc": "605:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "605:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:74:10",
																"nodeType": "YulFunctionCall",
																"src": "587:74:10"
															},
															"nativeSrc": "587:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "587:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "427:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "511:9:10",
														"nodeType": "YulTypedName",
														"src": "511:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "522:6:10",
														"nodeType": "YulTypedName",
														"src": "522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "533:4:10",
														"nodeType": "YulTypedName",
														"src": "533:4:10",
														"type": ""
													}
												],
												"src": "427:240:10"
											},
											{
												"body": {
													"nativeSrc": "767:92:10",
													"nodeType": "YulBlock",
													"src": "767:92:10",
													"statements": [
														{
															"nativeSrc": "777:26:10",
															"nodeType": "YulAssignment",
															"src": "777:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "789:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "800:2:10",
																		"nodeType": "YulLiteral",
																		"src": "800:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "785:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:10"
																},
																"nativeSrc": "785:18:10",
																"nodeType": "YulFunctionCall",
																"src": "785:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "844:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "844:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "837:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "837:6:10"
																				},
																				"nativeSrc": "837:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "837:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "830:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "830:6:10"
																		},
																		"nativeSrc": "830:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "830:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:10"
																},
																"nativeSrc": "812:41:10",
																"nodeType": "YulFunctionCall",
																"src": "812:41:10"
															},
															"nativeSrc": "812:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "812:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "672:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:10",
														"nodeType": "YulTypedName",
														"src": "736:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "747:6:10",
														"nodeType": "YulTypedName",
														"src": "747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "758:4:10",
														"nodeType": "YulTypedName",
														"src": "758:4:10",
														"type": ""
													}
												],
												"src": "672:187:10"
											},
											{
												"body": {
													"nativeSrc": "965:125:10",
													"nodeType": "YulBlock",
													"src": "965:125:10",
													"statements": [
														{
															"nativeSrc": "975:26:10",
															"nodeType": "YulAssignment",
															"src": "975:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "987:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:10"
																},
																"nativeSrc": "983:18:10",
																"nodeType": "YulFunctionCall",
																"src": "983:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "975:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "975:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1032:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1032:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1040:42:10",
																				"nodeType": "YulLiteral",
																				"src": "1040:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1028:3:10"
																		},
																		"nativeSrc": "1028:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1028:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1010:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:10"
																},
																"nativeSrc": "1010:74:10",
																"nodeType": "YulFunctionCall",
																"src": "1010:74:10"
															},
															"nativeSrc": "1010:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "1010:74:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "864:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "934:9:10",
														"nodeType": "YulTypedName",
														"src": "934:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "945:6:10",
														"nodeType": "YulTypedName",
														"src": "945:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "956:4:10",
														"nodeType": "YulTypedName",
														"src": "956:4:10",
														"type": ""
													}
												],
												"src": "864:226:10"
											},
											{
												"body": {
													"nativeSrc": "1194:109:10",
													"nodeType": "YulBlock",
													"src": "1194:109:10",
													"statements": [
														{
															"nativeSrc": "1204:26:10",
															"nodeType": "YulAssignment",
															"src": "1204:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1216:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1216:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1212:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:3:10"
																},
																"nativeSrc": "1212:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1212:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1204:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1204:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1246:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1261:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1269:26:10",
																				"nodeType": "YulLiteral",
																				"src": "1269:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1257:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1257:3:10"
																		},
																		"nativeSrc": "1257:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:10"
																},
																"nativeSrc": "1239:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1239:58:10"
															},
															"nativeSrc": "1239:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1239:58:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "1095:208:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1163:9:10",
														"nodeType": "YulTypedName",
														"src": "1163:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1174:6:10",
														"nodeType": "YulTypedName",
														"src": "1174:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1185:4:10",
														"nodeType": "YulTypedName",
														"src": "1185:4:10",
														"type": ""
													}
												],
												"src": "1095:208:10"
											},
											{
												"body": {
													"nativeSrc": "1395:259:10",
													"nodeType": "YulBlock",
													"src": "1395:259:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1441:16:10",
																"nodeType": "YulBlock",
																"src": "1441:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1443:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:10"
																			},
																			"nativeSrc": "1443:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1443:12:10"
																		},
																		"nativeSrc": "1443:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1416:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1412:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:10"
																		},
																		"nativeSrc": "1412:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:10"
																},
																"nativeSrc": "1408:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1408:32:10"
															},
															"nativeSrc": "1405:52:10",
															"nodeType": "YulIf",
															"src": "1405:52:10"
														},
														{
															"nativeSrc": "1466:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1466:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1479:1:10",
																"nodeType": "YulLiteral",
																"src": "1479:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1470:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1470:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1489:32:10",
															"nodeType": "YulAssignment",
															"src": "1489:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1511:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1511:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1498:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1498:12:10"
																},
																"nativeSrc": "1498:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1498:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1489:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1489:5:10"
																}
															]
														},
														{
															"nativeSrc": "1530:15:10",
															"nodeType": "YulAssignment",
															"src": "1530:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1540:5:10",
																"nodeType": "YulIdentifier",
																"src": "1540:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1530:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1530:6:10"
																}
															]
														},
														{
															"nativeSrc": "1554:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1554:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1569:1:10",
																"nodeType": "YulLiteral",
																"src": "1569:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1558:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1558:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1579:43:10",
															"nodeType": "YulAssignment",
															"src": "1579:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1607:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1607:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1618:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1603:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1603:3:10"
																		},
																		"nativeSrc": "1603:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1603:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1590:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1590:12:10"
																},
																"nativeSrc": "1590:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1590:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1579:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1579:7:10"
																}
															]
														},
														{
															"nativeSrc": "1631:17:10",
															"nodeType": "YulAssignment",
															"src": "1631:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1641:7:10",
																"nodeType": "YulIdentifier",
																"src": "1641:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1308:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1353:9:10",
														"nodeType": "YulTypedName",
														"src": "1353:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1364:7:10",
														"nodeType": "YulTypedName",
														"src": "1364:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1376:6:10",
														"nodeType": "YulTypedName",
														"src": "1376:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1384:6:10",
														"nodeType": "YulTypedName",
														"src": "1384:6:10",
														"type": ""
													}
												],
												"src": "1308:346:10"
											},
											{
												"body": {
													"nativeSrc": "1764:505:10",
													"nodeType": "YulBlock",
													"src": "1764:505:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1810:16:10",
																"nodeType": "YulBlock",
																"src": "1810:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1819:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1822:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1812:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:10"
																			},
																			"nativeSrc": "1812:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:10"
																		},
																		"nativeSrc": "1812:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1785:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1794:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1781:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:10"
																		},
																		"nativeSrc": "1781:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1777:3:10"
																},
																"nativeSrc": "1777:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1777:32:10"
															},
															"nativeSrc": "1774:52:10",
															"nodeType": "YulIf",
															"src": "1774:52:10"
														},
														{
															"nativeSrc": "1835:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1835:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1862:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1849:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:12:10"
																},
																"nativeSrc": "1849:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1839:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1839:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1915:16:10",
																"nodeType": "YulBlock",
																"src": "1915:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1924:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1924:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1927:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1917:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1917:6:10"
																			},
																			"nativeSrc": "1917:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1917:12:10"
																		},
																		"nativeSrc": "1917:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1917:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1887:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1895:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1895:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1884:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:10"
																},
																"nativeSrc": "1884:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1884:30:10"
															},
															"nativeSrc": "1881:50:10",
															"nodeType": "YulIf",
															"src": "1881:50:10"
														},
														{
															"nativeSrc": "1940:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1940:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1954:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1965:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:10"
																},
																"nativeSrc": "1950:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1950:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1944:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1944:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2020:16:10",
																"nodeType": "YulBlock",
																"src": "2020:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2029:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2029:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2032:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2032:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2022:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:10"
																			},
																			"nativeSrc": "2022:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2022:12:10"
																		},
																		"nativeSrc": "2022:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2022:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1999:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1999:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2003:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2003:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1995:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1995:3:10"
																				},
																				"nativeSrc": "1995:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1995:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2010:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2010:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:10"
																		},
																		"nativeSrc": "1991:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1991:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:10"
																},
																"nativeSrc": "1984:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1984:35:10"
															},
															"nativeSrc": "1981:55:10",
															"nodeType": "YulIf",
															"src": "1981:55:10"
														},
														{
															"nativeSrc": "2045:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2045:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2072:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2072:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2059:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2059:12:10"
																},
																"nativeSrc": "2059:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2059:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2049:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2049:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2118:16:10",
																"nodeType": "YulBlock",
																"src": "2118:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2127:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2130:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2120:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2120:6:10"
																			},
																			"nativeSrc": "2120:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2120:12:10"
																		},
																		"nativeSrc": "2120:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2120:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2090:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2090:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:18:10",
																		"nodeType": "YulLiteral",
																		"src": "2098:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2087:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2087:2:10"
																},
																"nativeSrc": "2087:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2087:30:10"
															},
															"nativeSrc": "2084:50:10",
															"nodeType": "YulIf",
															"src": "2084:50:10"
														},
														{
															"body": {
																"nativeSrc": "2192:16:10",
																"nodeType": "YulBlock",
																"src": "2192:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2201:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2201:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2204:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2204:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2194:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2194:6:10"
																			},
																			"nativeSrc": "2194:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2194:12:10"
																		},
																		"nativeSrc": "2194:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2194:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2157:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2157:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2165:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2165:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2168:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "2168:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2161:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2161:3:10"
																						},
																						"nativeSrc": "2161:14:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2161:14:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2153:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:10"
																				},
																				"nativeSrc": "2153:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2153:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2178:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2178:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:10"
																		},
																		"nativeSrc": "2149:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:32:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2183:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2183:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2146:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2146:2:10"
																},
																"nativeSrc": "2146:45:10",
																"nodeType": "YulFunctionCall",
																"src": "2146:45:10"
															},
															"nativeSrc": "2143:65:10",
															"nodeType": "YulIf",
															"src": "2143:65:10"
														},
														{
															"nativeSrc": "2217:21:10",
															"nodeType": "YulAssignment",
															"src": "2217:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2231:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "2231:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2235:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:10"
																},
																"nativeSrc": "2227:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2227:11:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:10"
																}
															]
														},
														{
															"nativeSrc": "2247:16:10",
															"nodeType": "YulAssignment",
															"src": "2247:16:10",
															"value": {
																"name": "length",
																"nativeSrc": "2257:6:10",
																"nodeType": "YulIdentifier",
																"src": "2257:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1659:610:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1722:9:10",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1733:7:10",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1745:6:10",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1753:6:10",
														"nodeType": "YulTypedName",
														"src": "1753:6:10",
														"type": ""
													}
												],
												"src": "1659:610:10"
											},
											{
												"body": {
													"nativeSrc": "2459:255:10",
													"nodeType": "YulBlock",
													"src": "2459:255:10",
													"statements": [
														{
															"nativeSrc": "2469:27:10",
															"nodeType": "YulAssignment",
															"src": "2469:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2492:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2492:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:10"
																},
																"nativeSrc": "2477:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2477:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2512:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2512:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2527:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2527:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2535:42:10",
																				"nodeType": "YulLiteral",
																				"src": "2535:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2523:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2523:3:10"
																		},
																		"nativeSrc": "2523:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2523:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2505:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:10"
																},
																"nativeSrc": "2505:74:10",
																"nodeType": "YulFunctionCall",
																"src": "2505:74:10"
															},
															"nativeSrc": "2505:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "2505:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2599:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2610:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2610:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:10"
																		},
																		"nativeSrc": "2595:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2615:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:10"
																},
																"nativeSrc": "2588:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2588:34:10"
															},
															"nativeSrc": "2588:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2588:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2642:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2653:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2653:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2638:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:10"
																		},
																		"nativeSrc": "2638:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2638:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:10"
																},
																"nativeSrc": "2631:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2631:34:10"
															},
															"nativeSrc": "2631:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2631:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2685:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2696:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2696:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2681:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:10"
																		},
																		"nativeSrc": "2681:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2701:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2674:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:10"
																},
																"nativeSrc": "2674:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2674:34:10"
															},
															"nativeSrc": "2674:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2674:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2274:440:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:10",
														"nodeType": "YulTypedName",
														"src": "2404:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2415:6:10",
														"nodeType": "YulTypedName",
														"src": "2415:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2423:6:10",
														"nodeType": "YulTypedName",
														"src": "2423:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2431:6:10",
														"nodeType": "YulTypedName",
														"src": "2431:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2439:6:10",
														"nodeType": "YulTypedName",
														"src": "2439:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2450:4:10",
														"nodeType": "YulTypedName",
														"src": "2450:4:10",
														"type": ""
													}
												],
												"src": "2274:440:10"
											},
											{
												"body": {
													"nativeSrc": "2768:147:10",
													"nodeType": "YulBlock",
													"src": "2768:147:10",
													"statements": [
														{
															"nativeSrc": "2778:29:10",
															"nodeType": "YulAssignment",
															"src": "2778:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2800:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2800:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2787:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2787:12:10"
																},
																"nativeSrc": "2787:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2787:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2893:16:10",
																"nodeType": "YulBlock",
																"src": "2893:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2902:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2905:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2905:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2895:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:10"
																			},
																			"nativeSrc": "2895:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2895:12:10"
																		},
																		"nativeSrc": "2895:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2895:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2829:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2829:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2840:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2847:42:10",
																						"nodeType": "YulLiteral",
																						"src": "2847:42:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:54:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:54:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2826:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:2:10"
																		},
																		"nativeSrc": "2826:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2826:65:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2819:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:10"
																},
																"nativeSrc": "2819:73:10",
																"nodeType": "YulFunctionCall",
																"src": "2819:73:10"
															},
															"nativeSrc": "2816:93:10",
															"nodeType": "YulIf",
															"src": "2816:93:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "2719:196:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2747:6:10",
														"nodeType": "YulTypedName",
														"src": "2747:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2758:5:10",
														"nodeType": "YulTypedName",
														"src": "2758:5:10",
														"type": ""
													}
												],
												"src": "2719:196:10"
											},
											{
												"body": {
													"nativeSrc": "3007:213:10",
													"nodeType": "YulBlock",
													"src": "3007:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3053:16:10",
																"nodeType": "YulBlock",
																"src": "3053:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3062:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3055:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3055:6:10"
																			},
																			"nativeSrc": "3055:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3055:12:10"
																		},
																		"nativeSrc": "3055:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3055:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3028:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3037:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3037:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3024:3:10"
																		},
																		"nativeSrc": "3024:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3024:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3020:3:10"
																},
																"nativeSrc": "3020:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3020:32:10"
															},
															"nativeSrc": "3017:52:10",
															"nodeType": "YulIf",
															"src": "3017:52:10"
														},
														{
															"nativeSrc": "3078:39:10",
															"nodeType": "YulAssignment",
															"src": "3078:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3107:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3107:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3088:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3088:18:10"
																},
																"nativeSrc": "3088:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3088:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:10"
																}
															]
														},
														{
															"nativeSrc": "3126:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3126:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3139:1:10",
																"nodeType": "YulLiteral",
																"src": "3139:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3130:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3130:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3149:41:10",
															"nodeType": "YulAssignment",
															"src": "3149:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3186:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3186:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3171:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:10"
																		},
																		"nativeSrc": "3171:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3158:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3158:12:10"
																},
																"nativeSrc": "3158:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3158:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:10"
																}
															]
														},
														{
															"nativeSrc": "3199:15:10",
															"nodeType": "YulAssignment",
															"src": "3199:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3209:5:10",
																"nodeType": "YulIdentifier",
																"src": "3209:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2920:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2965:9:10",
														"nodeType": "YulTypedName",
														"src": "2965:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2976:7:10",
														"nodeType": "YulTypedName",
														"src": "2976:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2988:6:10",
														"nodeType": "YulTypedName",
														"src": "2988:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2996:6:10",
														"nodeType": "YulTypedName",
														"src": "2996:6:10",
														"type": ""
													}
												],
												"src": "2920:300:10"
											},
											{
												"body": {
													"nativeSrc": "3311:326:10",
													"nodeType": "YulBlock",
													"src": "3311:326:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3357:16:10",
																"nodeType": "YulBlock",
																"src": "3357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3366:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3369:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3359:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3359:6:10"
																			},
																			"nativeSrc": "3359:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3359:12:10"
																		},
																		"nativeSrc": "3359:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3332:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3332:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3328:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:10"
																		},
																		"nativeSrc": "3328:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3328:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3353:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3324:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:10"
																},
																"nativeSrc": "3324:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3324:32:10"
															},
															"nativeSrc": "3321:52:10",
															"nodeType": "YulIf",
															"src": "3321:52:10"
														},
														{
															"nativeSrc": "3382:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3382:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3408:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3395:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3395:12:10"
																},
																"nativeSrc": "3395:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3395:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3386:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3386:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3488:16:10",
																"nodeType": "YulBlock",
																"src": "3488:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3497:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3500:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3490:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:10"
																			},
																			"nativeSrc": "3490:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3490:12:10"
																		},
																		"nativeSrc": "3490:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3440:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3440:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3451:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3451:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3458:26:10",
																						"nodeType": "YulLiteral",
																						"src": "3458:26:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3447:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3447:3:10"
																				},
																				"nativeSrc": "3447:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3447:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3437:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3437:2:10"
																		},
																		"nativeSrc": "3437:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3430:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:6:10"
																},
																"nativeSrc": "3430:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:57:10"
															},
															"nativeSrc": "3427:77:10",
															"nodeType": "YulIf",
															"src": "3427:77:10"
														},
														{
															"nativeSrc": "3513:15:10",
															"nodeType": "YulAssignment",
															"src": "3513:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3523:5:10",
																"nodeType": "YulIdentifier",
																"src": "3523:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:10"
																}
															]
														},
														{
															"nativeSrc": "3537:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3537:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3552:1:10",
																"nodeType": "YulLiteral",
																"src": "3552:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3541:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3541:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3562:43:10",
															"nodeType": "YulAssignment",
															"src": "3562:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3590:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3590:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3601:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3601:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3586:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:10"
																		},
																		"nativeSrc": "3586:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3573:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3573:12:10"
																},
																"nativeSrc": "3573:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3573:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3562:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3562:7:10"
																}
															]
														},
														{
															"nativeSrc": "3614:17:10",
															"nodeType": "YulAssignment",
															"src": "3614:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3624:7:10",
																"nodeType": "YulIdentifier",
																"src": "3624:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3614:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nativeSrc": "3225:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3269:9:10",
														"nodeType": "YulTypedName",
														"src": "3269:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3280:7:10",
														"nodeType": "YulTypedName",
														"src": "3280:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3292:6:10",
														"nodeType": "YulTypedName",
														"src": "3292:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3300:6:10",
														"nodeType": "YulTypedName",
														"src": "3300:6:10",
														"type": ""
													}
												],
												"src": "3225:412:10"
											},
											{
												"body": {
													"nativeSrc": "3771:119:10",
													"nodeType": "YulBlock",
													"src": "3771:119:10",
													"statements": [
														{
															"nativeSrc": "3781:26:10",
															"nodeType": "YulAssignment",
															"src": "3781:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3793:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3789:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3789:3:10"
																},
																"nativeSrc": "3789:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3789:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3781:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3823:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3834:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3816:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:10"
																},
																"nativeSrc": "3816:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3816:25:10"
															},
															"nativeSrc": "3816:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3816:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3861:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3861:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3872:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3872:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3857:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3857:3:10"
																		},
																		"nativeSrc": "3857:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3857:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3877:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:10"
																},
																"nativeSrc": "3850:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3850:34:10"
															},
															"nativeSrc": "3850:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3850:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3642:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3732:9:10",
														"nodeType": "YulTypedName",
														"src": "3732:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3743:6:10",
														"nodeType": "YulTypedName",
														"src": "3743:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3751:6:10",
														"nodeType": "YulTypedName",
														"src": "3751:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3762:4:10",
														"nodeType": "YulTypedName",
														"src": "3762:4:10",
														"type": ""
													}
												],
												"src": "3642:248:10"
											},
											{
												"body": {
													"nativeSrc": "3965:116:10",
													"nodeType": "YulBlock",
													"src": "3965:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4011:16:10",
																"nodeType": "YulBlock",
																"src": "4011:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4020:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4020:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4023:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4023:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4013:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4013:6:10"
																			},
																			"nativeSrc": "4013:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4013:12:10"
																		},
																		"nativeSrc": "4013:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3986:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3986:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3995:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3995:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3982:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:10"
																		},
																		"nativeSrc": "3982:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4007:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3978:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3978:3:10"
																},
																"nativeSrc": "3978:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3978:32:10"
															},
															"nativeSrc": "3975:52:10",
															"nodeType": "YulIf",
															"src": "3975:52:10"
														},
														{
															"nativeSrc": "4036:39:10",
															"nodeType": "YulAssignment",
															"src": "4036:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4065:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4065:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4046:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "4046:18:10"
																},
																"nativeSrc": "4046:29:10",
																"nodeType": "YulFunctionCall",
																"src": "4046:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4036:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3895:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3931:9:10",
														"nodeType": "YulTypedName",
														"src": "3931:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3942:7:10",
														"nodeType": "YulTypedName",
														"src": "3942:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3954:6:10",
														"nodeType": "YulTypedName",
														"src": "3954:6:10",
														"type": ""
													}
												],
												"src": "3895:186:10"
											},
											{
												"body": {
													"nativeSrc": "4260:175:10",
													"nodeType": "YulBlock",
													"src": "4260:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4277:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4288:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:10"
																},
																"nativeSrc": "4270:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4270:21:10"
															},
															"nativeSrc": "4270:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4270:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4311:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4322:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4307:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nativeSrc": "4307:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4327:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4300:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:10"
																},
																"nativeSrc": "4300:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4300:30:10"
															},
															"nativeSrc": "4300:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4300:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4350:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4361:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4346:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:10"
																		},
																		"nativeSrc": "4346:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "4366:27:10",
																		"nodeType": "YulLiteral",
																		"src": "4366:27:10",
																		"type": "",
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4339:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:10"
																},
																"nativeSrc": "4339:55:10",
																"nodeType": "YulFunctionCall",
																"src": "4339:55:10"
															},
															"nativeSrc": "4339:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "4339:55:10"
														},
														{
															"nativeSrc": "4403:26:10",
															"nodeType": "YulAssignment",
															"src": "4403:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4415:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4415:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4426:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4426:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4411:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:10"
																},
																"nativeSrc": "4411:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4411:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4403:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4086:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4237:9:10",
														"nodeType": "YulTypedName",
														"src": "4237:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4251:4:10",
														"nodeType": "YulTypedName",
														"src": "4251:4:10",
														"type": ""
													}
												],
												"src": "4086:349:10"
											},
											{
												"body": {
													"nativeSrc": "4614:181:10",
													"nodeType": "YulBlock",
													"src": "4614:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4631:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4631:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4642:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4642:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:10"
																},
																"nativeSrc": "4624:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4624:21:10"
															},
															"nativeSrc": "4624:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4624:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4676:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4676:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:10"
																		},
																		"nativeSrc": "4661:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4661:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4654:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:10"
																},
																"nativeSrc": "4654:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4654:30:10"
															},
															"nativeSrc": "4654:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4654:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4715:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4715:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4700:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:10"
																		},
																		"nativeSrc": "4700:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4700:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4720:33:10",
																		"nodeType": "YulLiteral",
																		"src": "4720:33:10",
																		"type": "",
																		"value": "ModuleX:Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4693:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:10"
																},
																"nativeSrc": "4693:61:10",
																"nodeType": "YulFunctionCall",
																"src": "4693:61:10"
															},
															"nativeSrc": "4693:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "4693:61:10"
														},
														{
															"nativeSrc": "4763:26:10",
															"nodeType": "YulAssignment",
															"src": "4763:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4775:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4775:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4786:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4771:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4771:3:10"
																},
																"nativeSrc": "4771:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4771:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4763:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4763:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4440:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4591:9:10",
														"nodeType": "YulTypedName",
														"src": "4591:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4605:4:10",
														"nodeType": "YulTypedName",
														"src": "4605:4:10",
														"type": ""
													}
												],
												"src": "4440:355:10"
											},
											{
												"body": {
													"nativeSrc": "4974:232:10",
													"nodeType": "YulBlock",
													"src": "4974:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4991:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4991:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5002:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:10"
																},
																"nativeSrc": "4984:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4984:21:10"
															},
															"nativeSrc": "4984:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4984:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5036:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5021:3:10"
																		},
																		"nativeSrc": "5021:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5021:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5014:6:10"
																},
																"nativeSrc": "5014:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5014:30:10"
															},
															"nativeSrc": "5014:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5014:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5064:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5064:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5075:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5075:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5060:3:10"
																		},
																		"nativeSrc": "5060:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "5080:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5080:34:10",
																		"type": "",
																		"value": "ModuleX:Early Withdrawal is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5053:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:10"
																},
																"nativeSrc": "5053:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5053:62:10"
															},
															"nativeSrc": "5053:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5053:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5135:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5146:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5131:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:10"
																		},
																		"nativeSrc": "5131:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:10"
																	},
																	{
																		"hexValue": "7065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "5151:12:10",
																		"nodeType": "YulLiteral",
																		"src": "5151:12:10",
																		"type": "",
																		"value": "permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5124:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:10"
																},
																"nativeSrc": "5124:40:10",
																"nodeType": "YulFunctionCall",
																"src": "5124:40:10"
															},
															"nativeSrc": "5124:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "5124:40:10"
														},
														{
															"nativeSrc": "5173:27:10",
															"nodeType": "YulAssignment",
															"src": "5173:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5185:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5185:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5196:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5181:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:10"
																},
																"nativeSrc": "5181:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5181:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5173:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5173:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4800:406:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4951:9:10",
														"nodeType": "YulTypedName",
														"src": "4951:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4965:4:10",
														"nodeType": "YulTypedName",
														"src": "4965:4:10",
														"type": ""
													}
												],
												"src": "4800:406:10"
											},
											{
												"body": {
													"nativeSrc": "5385:174:10",
													"nodeType": "YulBlock",
													"src": "5385:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5402:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5402:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:10"
																},
																"nativeSrc": "5395:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5395:21:10"
															},
															"nativeSrc": "5395:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5395:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5436:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5447:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5447:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5432:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:10"
																		},
																		"nativeSrc": "5432:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5432:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5452:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5425:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:10"
																},
																"nativeSrc": "5425:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5425:30:10"
															},
															"nativeSrc": "5425:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5425:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5475:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5475:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5486:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5486:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5471:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5471:3:10"
																		},
																		"nativeSrc": "5471:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5471:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "5491:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5491:26:10",
																		"type": "",
																		"value": "ModuleX:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:10"
																},
																"nativeSrc": "5464:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5464:54:10"
															},
															"nativeSrc": "5464:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "5464:54:10"
														},
														{
															"nativeSrc": "5527:26:10",
															"nodeType": "YulAssignment",
															"src": "5527:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:10"
																},
																"nativeSrc": "5535:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5535:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5527:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5527:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5211:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5362:9:10",
														"nodeType": "YulTypedName",
														"src": "5362:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5376:4:10",
														"nodeType": "YulTypedName",
														"src": "5376:4:10",
														"type": ""
													}
												],
												"src": "5211:348:10"
											},
											{
												"body": {
													"nativeSrc": "5596:95:10",
													"nodeType": "YulBlock",
													"src": "5596:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5613:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5613:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5620:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5620:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5625:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5616:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5616:3:10"
																		},
																		"nativeSrc": "5616:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5616:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:10"
																},
																"nativeSrc": "5606:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5606:31:10"
															},
															"nativeSrc": "5606:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5606:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5653:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5653:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5656:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5656:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:10"
																},
																"nativeSrc": "5646:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5646:15:10"
															},
															"nativeSrc": "5646:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5646:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5677:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5677:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5680:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5670:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5670:6:10"
																},
																"nativeSrc": "5670:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5670:15:10"
															},
															"nativeSrc": "5670:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5670:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5564:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5564:127:10"
											},
											{
												"body": {
													"nativeSrc": "5745:79:10",
													"nodeType": "YulBlock",
													"src": "5745:79:10",
													"statements": [
														{
															"nativeSrc": "5755:17:10",
															"nodeType": "YulAssignment",
															"src": "5755:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5767:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5767:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5770:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5770:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:10"
																},
																"nativeSrc": "5763:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5763:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5755:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5796:22:10",
																"nodeType": "YulBlock",
																"src": "5796:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5798:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5798:16:10"
																			},
																			"nativeSrc": "5798:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5798:18:10"
																		},
																		"nativeSrc": "5798:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5798:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5787:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5787:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5793:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5793:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5784:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5784:2:10"
																},
																"nativeSrc": "5784:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5784:11:10"
															},
															"nativeSrc": "5781:37:10",
															"nodeType": "YulIf",
															"src": "5781:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5696:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5727:1:10",
														"nodeType": "YulTypedName",
														"src": "5727:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5730:1:10",
														"nodeType": "YulTypedName",
														"src": "5730:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5736:4:10",
														"nodeType": "YulTypedName",
														"src": "5736:4:10",
														"type": ""
													}
												],
												"src": "5696:128:10"
											},
											{
												"body": {
													"nativeSrc": "6003:231:10",
													"nodeType": "YulBlock",
													"src": "6003:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6020:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6020:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6031:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6031:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6013:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:10"
																},
																"nativeSrc": "6013:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6013:21:10"
															},
															"nativeSrc": "6013:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6013:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6065:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6065:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6050:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:10"
																		},
																		"nativeSrc": "6050:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6070:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6070:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6043:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:10"
																},
																"nativeSrc": "6043:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6043:30:10"
															},
															"nativeSrc": "6043:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6043:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6093:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6093:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6104:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6104:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:10"
																		},
																		"nativeSrc": "6089:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6089:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "6109:34:10",
																		"nodeType": "YulLiteral",
																		"src": "6109:34:10",
																		"type": "",
																		"value": "ModuleX:amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6082:6:10"
																},
																"nativeSrc": "6082:62:10",
																"nodeType": "YulFunctionCall",
																"src": "6082:62:10"
															},
															"nativeSrc": "6082:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "6082:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6164:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6164:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6175:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6175:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6160:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:10"
																		},
																		"nativeSrc": "6160:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:18:10"
																	},
																	{
																		"hexValue": "68616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "6180:11:10",
																		"nodeType": "YulLiteral",
																		"src": "6180:11:10",
																		"type": "",
																		"value": "han zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6153:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:10"
																},
																"nativeSrc": "6153:39:10",
																"nodeType": "YulFunctionCall",
																"src": "6153:39:10"
															},
															"nativeSrc": "6153:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "6153:39:10"
														},
														{
															"nativeSrc": "6201:27:10",
															"nodeType": "YulAssignment",
															"src": "6201:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6213:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6213:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6224:3:10",
																		"nodeType": "YulLiteral",
																		"src": "6224:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6209:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:10"
																},
																"nativeSrc": "6209:19:10",
																"nodeType": "YulFunctionCall",
																"src": "6209:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6201:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6201:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5829:405:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5980:9:10",
														"nodeType": "YulTypedName",
														"src": "5980:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5994:4:10",
														"nodeType": "YulTypedName",
														"src": "5994:4:10",
														"type": ""
													}
												],
												"src": "5829:405:10"
											},
											{
												"body": {
													"nativeSrc": "6413:171:10",
													"nodeType": "YulBlock",
													"src": "6413:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6430:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6430:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6441:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6441:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6423:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:10"
																},
																"nativeSrc": "6423:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6423:21:10"
															},
															"nativeSrc": "6423:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6423:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6464:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6464:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6475:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6475:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6460:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:10"
																		},
																		"nativeSrc": "6460:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6460:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6480:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6453:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:10"
																},
																"nativeSrc": "6453:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6453:30:10"
															},
															"nativeSrc": "6453:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6453:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6503:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6503:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6514:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6514:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6499:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:10"
																		},
																		"nativeSrc": "6499:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "6519:23:10",
																		"nodeType": "YulLiteral",
																		"src": "6519:23:10",
																		"type": "",
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6492:6:10"
																},
																"nativeSrc": "6492:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6492:51:10"
															},
															"nativeSrc": "6492:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6492:51:10"
														},
														{
															"nativeSrc": "6552:26:10",
															"nodeType": "YulAssignment",
															"src": "6552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6575:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:10"
																},
																"nativeSrc": "6560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6239:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6390:9:10",
														"nodeType": "YulTypedName",
														"src": "6390:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6404:4:10",
														"nodeType": "YulTypedName",
														"src": "6404:4:10",
														"type": ""
													}
												],
												"src": "6239:345:10"
											},
											{
												"body": {
													"nativeSrc": "6763:179:10",
													"nodeType": "YulBlock",
													"src": "6763:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6780:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6780:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6791:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6773:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6773:6:10"
																},
																"nativeSrc": "6773:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6773:21:10"
															},
															"nativeSrc": "6773:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6773:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6814:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6814:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6825:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6825:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:10"
																		},
																		"nativeSrc": "6810:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6810:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6830:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6830:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6803:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6803:6:10"
																},
																"nativeSrc": "6803:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6803:30:10"
															},
															"nativeSrc": "6803:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6803:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6864:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6864:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:10"
																		},
																		"nativeSrc": "6849:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "6869:31:10",
																		"nodeType": "YulLiteral",
																		"src": "6869:31:10",
																		"type": "",
																		"value": "ModuleX:Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:10"
																},
																"nativeSrc": "6842:59:10",
																"nodeType": "YulFunctionCall",
																"src": "6842:59:10"
															},
															"nativeSrc": "6842:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "6842:59:10"
														},
														{
															"nativeSrc": "6910:26:10",
															"nodeType": "YulAssignment",
															"src": "6910:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:10"
																},
																"nativeSrc": "6918:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6589:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6740:9:10",
														"nodeType": "YulTypedName",
														"src": "6740:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6754:4:10",
														"nodeType": "YulTypedName",
														"src": "6754:4:10",
														"type": ""
													}
												],
												"src": "6589:353:10"
											},
											{
												"body": {
													"nativeSrc": "6993:171:10",
													"nodeType": "YulBlock",
													"src": "6993:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7024:111:10",
																"nodeType": "YulBlock",
																"src": "7024:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7045:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7045:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7052:3:10",
																							"nodeType": "YulLiteral",
																							"src": "7052:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7057:10:10",
																							"nodeType": "YulLiteral",
																							"src": "7057:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7048:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7048:3:10"
																					},
																					"nativeSrc": "7048:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7048:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7038:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7038:6:10"
																			},
																			"nativeSrc": "7038:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7038:31:10"
																		},
																		"nativeSrc": "7038:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7038:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7089:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7092:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7092:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7082:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:10"
																			},
																			"nativeSrc": "7082:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7082:15:10"
																		},
																		"nativeSrc": "7082:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7117:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7117:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7120:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7120:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7110:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7110:6:10"
																			},
																			"nativeSrc": "7110:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7110:15:10"
																		},
																		"nativeSrc": "7110:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7110:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7013:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7006:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7006:6:10"
																},
																"nativeSrc": "7006:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7006:9:10"
															},
															"nativeSrc": "7003:132:10",
															"nodeType": "YulIf",
															"src": "7003:132:10"
														},
														{
															"nativeSrc": "7144:14:10",
															"nodeType": "YulAssignment",
															"src": "7144:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7153:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7153:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7156:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7156:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7149:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7149:3:10"
																},
																"nativeSrc": "7149:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7149:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7144:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7144:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6947:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6978:1:10",
														"nodeType": "YulTypedName",
														"src": "6978:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6981:1:10",
														"nodeType": "YulTypedName",
														"src": "6981:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6987:1:10",
														"nodeType": "YulTypedName",
														"src": "6987:1:10",
														"type": ""
													}
												],
												"src": "6947:217:10"
											},
											{
												"body": {
													"nativeSrc": "7217:77:10",
													"nodeType": "YulBlock",
													"src": "7217:77:10",
													"statements": [
														{
															"nativeSrc": "7227:16:10",
															"nodeType": "YulAssignment",
															"src": "7227:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7238:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7238:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7241:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7241:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7234:3:10"
																},
																"nativeSrc": "7234:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7234:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7227:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7266:22:10",
																"nodeType": "YulBlock",
																"src": "7266:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7268:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7268:16:10"
																			},
																			"nativeSrc": "7268:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7268:18:10"
																		},
																		"nativeSrc": "7268:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7268:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7258:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7258:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7261:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7261:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7255:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7255:2:10"
																},
																"nativeSrc": "7255:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7255:10:10"
															},
															"nativeSrc": "7252:36:10",
															"nodeType": "YulIf",
															"src": "7252:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7169:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7200:1:10",
														"nodeType": "YulTypedName",
														"src": "7200:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7203:1:10",
														"nodeType": "YulTypedName",
														"src": "7203:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7209:3:10",
														"nodeType": "YulTypedName",
														"src": "7209:3:10",
														"type": ""
													}
												],
												"src": "7169:125:10"
											},
											{
												"body": {
													"nativeSrc": "7331:95:10",
													"nodeType": "YulBlock",
													"src": "7331:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7348:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7348:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7355:3:10",
																				"nodeType": "YulLiteral",
																				"src": "7355:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7360:10:10",
																				"nodeType": "YulLiteral",
																				"src": "7360:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7351:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7351:3:10"
																		},
																		"nativeSrc": "7351:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7351:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7341:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:10"
																},
																"nativeSrc": "7341:31:10",
																"nodeType": "YulFunctionCall",
																"src": "7341:31:10"
															},
															"nativeSrc": "7341:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "7341:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7388:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7388:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7391:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7391:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7381:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7381:6:10"
																},
																"nativeSrc": "7381:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7381:15:10"
															},
															"nativeSrc": "7381:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7381:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7412:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7412:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7415:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7415:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7405:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7405:6:10"
																},
																"nativeSrc": "7405:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7405:15:10"
															},
															"nativeSrc": "7405:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7405:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7299:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7299:127:10"
											},
											{
												"body": {
													"nativeSrc": "7605:176:10",
													"nodeType": "YulBlock",
													"src": "7605:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7622:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7633:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7615:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:10"
																},
																"nativeSrc": "7615:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7615:21:10"
															},
															"nativeSrc": "7615:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7615:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7656:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7656:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7667:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7667:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:10"
																		},
																		"nativeSrc": "7652:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7645:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:10"
																},
																"nativeSrc": "7645:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7645:30:10"
															},
															"nativeSrc": "7645:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7645:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7695:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7695:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7706:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7706:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7691:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:10"
																		},
																		"nativeSrc": "7691:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
																		"kind": "string",
																		"nativeSrc": "7711:28:10",
																		"nodeType": "YulLiteral",
																		"src": "7711:28:10",
																		"type": "",
																		"value": "ModuleX:Total amount is 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7684:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7684:6:10"
																},
																"nativeSrc": "7684:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7684:56:10"
															},
															"nativeSrc": "7684:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "7684:56:10"
														},
														{
															"nativeSrc": "7749:26:10",
															"nodeType": "YulAssignment",
															"src": "7749:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7761:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7761:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7772:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7772:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7757:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7757:3:10"
																},
																"nativeSrc": "7757:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7757:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7749:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7749:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7431:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7582:9:10",
														"nodeType": "YulTypedName",
														"src": "7582:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7596:4:10",
														"nodeType": "YulTypedName",
														"src": "7596:4:10",
														"type": ""
													}
												],
												"src": "7431:350:10"
											},
											{
												"body": {
													"nativeSrc": "7838:116:10",
													"nodeType": "YulBlock",
													"src": "7838:116:10",
													"statements": [
														{
															"nativeSrc": "7848:20:10",
															"nodeType": "YulAssignment",
															"src": "7848:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7863:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7863:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7866:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7866:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7859:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7859:3:10"
																},
																"nativeSrc": "7859:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7859:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7848:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7848:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7926:22:10",
																"nodeType": "YulBlock",
																"src": "7926:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7928:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7928:16:10"
																			},
																			"nativeSrc": "7928:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7928:18:10"
																		},
																		"nativeSrc": "7928:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7928:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7897:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7897:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7890:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7890:6:10"
																				},
																				"nativeSrc": "7890:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7890:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7904:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7904:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7911:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "7911:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7920:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "7920:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7907:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7907:3:10"
																						},
																						"nativeSrc": "7907:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7907:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7901:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7901:2:10"
																				},
																				"nativeSrc": "7901:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7901:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7887:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7887:2:10"
																		},
																		"nativeSrc": "7887:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7887:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7880:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7880:6:10"
																},
																"nativeSrc": "7880:45:10",
																"nodeType": "YulFunctionCall",
																"src": "7880:45:10"
															},
															"nativeSrc": "7877:71:10",
															"nodeType": "YulIf",
															"src": "7877:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7786:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7817:1:10",
														"nodeType": "YulTypedName",
														"src": "7817:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7820:1:10",
														"nodeType": "YulTypedName",
														"src": "7820:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7826:7:10",
														"nodeType": "YulTypedName",
														"src": "7826:7:10",
														"type": ""
													}
												],
												"src": "7786:168:10"
											},
											{
												"body": {
													"nativeSrc": "8040:103:10",
													"nodeType": "YulBlock",
													"src": "8040:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8086:16:10",
																"nodeType": "YulBlock",
																"src": "8086:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8095:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8095:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8098:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8098:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8088:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:10"
																			},
																			"nativeSrc": "8088:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8088:12:10"
																		},
																		"nativeSrc": "8088:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8088:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8061:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8061:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8070:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8070:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8057:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:10"
																		},
																		"nativeSrc": "8057:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8057:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8082:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8082:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8053:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8053:3:10"
																},
																"nativeSrc": "8053:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8053:32:10"
															},
															"nativeSrc": "8050:52:10",
															"nodeType": "YulIf",
															"src": "8050:52:10"
														},
														{
															"nativeSrc": "8111:26:10",
															"nodeType": "YulAssignment",
															"src": "8111:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8127:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8127:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8121:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8121:5:10"
																},
																"nativeSrc": "8121:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8121:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8111:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7959:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8006:9:10",
														"nodeType": "YulTypedName",
														"src": "8006:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8017:7:10",
														"nodeType": "YulTypedName",
														"src": "8017:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8029:6:10",
														"nodeType": "YulTypedName",
														"src": "8029:6:10",
														"type": ""
													}
												],
												"src": "7959:184:10"
											},
											{
												"body": {
													"nativeSrc": "8322:166:10",
													"nodeType": "YulBlock",
													"src": "8322:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8339:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8339:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8350:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8350:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8332:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:10"
																},
																"nativeSrc": "8332:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8332:21:10"
															},
															"nativeSrc": "8332:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8332:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8373:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8373:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8384:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8369:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8369:3:10"
																		},
																		"nativeSrc": "8369:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8369:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8362:6:10"
																},
																"nativeSrc": "8362:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8362:30:10"
															},
															"nativeSrc": "8362:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8362:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:10"
																		},
																		"nativeSrc": "8408:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a53544f5050454421",
																		"kind": "string",
																		"nativeSrc": "8428:18:10",
																		"nodeType": "YulLiteral",
																		"src": "8428:18:10",
																		"type": "",
																		"value": "ModuleX:STOPPED!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:10"
																},
																"nativeSrc": "8401:46:10",
																"nodeType": "YulFunctionCall",
																"src": "8401:46:10"
															},
															"nativeSrc": "8401:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "8401:46:10"
														},
														{
															"nativeSrc": "8456:26:10",
															"nodeType": "YulAssignment",
															"src": "8456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8468:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8468:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8479:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8479:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8464:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8464:3:10"
																},
																"nativeSrc": "8464:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8464:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8456:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8456:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8148:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8299:9:10",
														"nodeType": "YulTypedName",
														"src": "8299:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8313:4:10",
														"nodeType": "YulTypedName",
														"src": "8313:4:10",
														"type": ""
													}
												],
												"src": "8148:340:10"
											},
											{
												"body": {
													"nativeSrc": "8667:234:10",
													"nodeType": "YulBlock",
													"src": "8667:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8684:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8684:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8695:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8695:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8677:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8677:6:10"
																},
																"nativeSrc": "8677:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8677:21:10"
															},
															"nativeSrc": "8677:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8677:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8718:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8718:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8729:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8729:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8714:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:10"
																		},
																		"nativeSrc": "8714:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8714:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8734:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8734:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:10"
																},
																"nativeSrc": "8707:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8707:30:10"
															},
															"nativeSrc": "8707:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8707:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8757:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8768:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8768:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8753:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:10"
																		},
																		"nativeSrc": "8753:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8753:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "8773:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8773:34:10",
																		"type": "",
																		"value": "ModuleX:Stake amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8746:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:10"
																},
																"nativeSrc": "8746:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8746:62:10"
															},
															"nativeSrc": "8746:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8746:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8828:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8839:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8824:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:10"
																		},
																		"nativeSrc": "8824:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:10"
																	},
																	{
																		"hexValue": "61746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "8844:14:10",
																		"nodeType": "YulLiteral",
																		"src": "8844:14:10",
																		"type": "",
																		"value": "ater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8817:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:10"
																},
																"nativeSrc": "8817:42:10",
																"nodeType": "YulFunctionCall",
																"src": "8817:42:10"
															},
															"nativeSrc": "8817:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "8817:42:10"
														},
														{
															"nativeSrc": "8868:27:10",
															"nodeType": "YulAssignment",
															"src": "8868:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8880:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8880:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8891:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8891:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8876:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8876:3:10"
																},
																"nativeSrc": "8876:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8876:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8868:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8868:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8493:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8644:9:10",
														"nodeType": "YulTypedName",
														"src": "8644:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8658:4:10",
														"nodeType": "YulTypedName",
														"src": "8658:4:10",
														"type": ""
													}
												],
												"src": "8493:408:10"
											},
											{
												"body": {
													"nativeSrc": "9080:181:10",
													"nodeType": "YulBlock",
													"src": "9080:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9097:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9097:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9108:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9090:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9090:6:10"
																},
																"nativeSrc": "9090:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9090:21:10"
															},
															"nativeSrc": "9090:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9090:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9131:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9131:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9142:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9142:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9127:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9127:3:10"
																		},
																		"nativeSrc": "9127:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9147:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9147:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:10"
																},
																"nativeSrc": "9120:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9120:30:10"
															},
															"nativeSrc": "9120:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9120:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9170:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9170:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9181:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9181:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9166:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9166:3:10"
																		},
																		"nativeSrc": "9166:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9166:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
																		"kind": "string",
																		"nativeSrc": "9186:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9186:33:10",
																		"type": "",
																		"value": "ModuleX:Use longer lock_period!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9159:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:10"
																},
																"nativeSrc": "9159:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9159:61:10"
															},
															"nativeSrc": "9159:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "9159:61:10"
														},
														{
															"nativeSrc": "9229:26:10",
															"nodeType": "YulAssignment",
															"src": "9229:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9241:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9241:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9252:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9252:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9237:3:10"
																},
																"nativeSrc": "9237:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9237:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9229:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9229:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8906:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9057:9:10",
														"nodeType": "YulTypedName",
														"src": "9057:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9071:4:10",
														"nodeType": "YulTypedName",
														"src": "9071:4:10",
														"type": ""
													}
												],
												"src": "8906:355:10"
											},
											{
												"body": {
													"nativeSrc": "9313:168:10",
													"nodeType": "YulBlock",
													"src": "9313:168:10",
													"statements": [
														{
															"nativeSrc": "9323:82:10",
															"nodeType": "YulAssignment",
															"src": "9323:82:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "9338:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "9338:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9341:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9341:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9334:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9334:3:10"
																		},
																		"nativeSrc": "9334:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9334:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "9374:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "9374:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9377:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9377:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9370:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:10"
																		},
																		"nativeSrc": "9370:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9370:34:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9330:3:10"
																},
																"nativeSrc": "9330:75:10",
																"nodeType": "YulFunctionCall",
																"src": "9330:75:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9323:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9453:22:10",
																"nodeType": "YulBlock",
																"src": "9453:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9455:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9455:16:10"
																			},
																			"nativeSrc": "9455:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9455:18:10"
																		},
																		"nativeSrc": "9455:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9455:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "9420:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9425:26:10",
																		"nodeType": "YulLiteral",
																		"src": "9425:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9417:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9417:2:10"
																},
																"nativeSrc": "9417:35:10",
																"nodeType": "YulFunctionCall",
																"src": "9417:35:10"
															},
															"nativeSrc": "9414:61:10",
															"nodeType": "YulIf",
															"src": "9414:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "9266:215:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9296:1:10",
														"nodeType": "YulTypedName",
														"src": "9296:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9299:1:10",
														"nodeType": "YulTypedName",
														"src": "9299:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9305:3:10",
														"nodeType": "YulTypedName",
														"src": "9305:3:10",
														"type": ""
													}
												],
												"src": "9266:215:10"
											},
											{
												"body": {
													"nativeSrc": "9669:239:10",
													"nodeType": "YulBlock",
													"src": "9669:239:10",
													"statements": [
														{
															"nativeSrc": "9679:27:10",
															"nodeType": "YulAssignment",
															"src": "9679:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9691:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9691:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9702:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9702:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9687:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9687:3:10"
																},
																"nativeSrc": "9687:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9687:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9679:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9679:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9722:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9722:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9733:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9733:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9715:6:10"
																},
																"nativeSrc": "9715:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9715:25:10"
															},
															"nativeSrc": "9715:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "9715:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9760:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9760:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9771:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9771:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9756:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:10"
																		},
																		"nativeSrc": "9756:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9780:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9780:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9788:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9788:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9776:3:10"
																		},
																		"nativeSrc": "9776:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9776:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9749:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:10"
																},
																"nativeSrc": "9749:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9749:67:10"
															},
															"nativeSrc": "9749:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "9749:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9836:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9836:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9847:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9847:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9832:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9832:3:10"
																		},
																		"nativeSrc": "9832:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9832:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9852:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9852:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9825:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9825:6:10"
																},
																"nativeSrc": "9825:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9825:34:10"
															},
															"nativeSrc": "9825:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9825:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9879:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9879:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9890:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9890:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9875:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9875:3:10"
																		},
																		"nativeSrc": "9875:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9875:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9895:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9895:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9868:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9868:6:10"
																},
																"nativeSrc": "9868:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9868:34:10"
															},
															"nativeSrc": "9868:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9868:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9486:422:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9614:9:10",
														"nodeType": "YulTypedName",
														"src": "9614:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9625:6:10",
														"nodeType": "YulTypedName",
														"src": "9625:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9633:6:10",
														"nodeType": "YulTypedName",
														"src": "9633:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9641:6:10",
														"nodeType": "YulTypedName",
														"src": "9641:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9649:6:10",
														"nodeType": "YulTypedName",
														"src": "9649:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9660:4:10",
														"nodeType": "YulTypedName",
														"src": "9660:4:10",
														"type": ""
													}
												],
												"src": "9486:422:10"
											},
											{
												"body": {
													"nativeSrc": "9960:88:10",
													"nodeType": "YulBlock",
													"src": "9960:88:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9991:22:10",
																"nodeType": "YulBlock",
																"src": "9991:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9993:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9993:16:10"
																			},
																			"nativeSrc": "9993:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9993:18:10"
																		},
																		"nativeSrc": "9993:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9993:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9976:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9976:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9987:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9987:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:10"
																		},
																		"nativeSrc": "9983:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9983:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9973:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9973:2:10"
																},
																"nativeSrc": "9973:17:10",
																"nodeType": "YulFunctionCall",
																"src": "9973:17:10"
															},
															"nativeSrc": "9970:43:10",
															"nodeType": "YulIf",
															"src": "9970:43:10"
														},
														{
															"nativeSrc": "10022:20:10",
															"nodeType": "YulAssignment",
															"src": "10022:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10033:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "10033:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10040:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10029:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:10"
																},
																"nativeSrc": "10029:13:10",
																"nodeType": "YulFunctionCall",
																"src": "10029:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10022:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9913:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9942:5:10",
														"nodeType": "YulTypedName",
														"src": "9942:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9952:3:10",
														"nodeType": "YulTypedName",
														"src": "9952:3:10",
														"type": ""
													}
												],
												"src": "9913:135:10"
											},
											{
												"body": {
													"nativeSrc": "10182:168:10",
													"nodeType": "YulBlock",
													"src": "10182:168:10",
													"statements": [
														{
															"nativeSrc": "10192:26:10",
															"nodeType": "YulAssignment",
															"src": "10192:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10204:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10204:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10215:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10215:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10200:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10200:3:10"
																},
																"nativeSrc": "10200:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10200:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10192:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10192:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10234:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10234:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10249:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10249:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10257:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10257:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:10"
																		},
																		"nativeSrc": "10245:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10227:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:10"
																},
																"nativeSrc": "10227:74:10",
																"nodeType": "YulFunctionCall",
																"src": "10227:74:10"
															},
															"nativeSrc": "10227:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "10227:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10332:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:10"
																		},
																		"nativeSrc": "10317:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10337:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10337:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10310:6:10"
																},
																"nativeSrc": "10310:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10310:34:10"
															},
															"nativeSrc": "10310:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10310:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10053:297:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10143:9:10",
														"nodeType": "YulTypedName",
														"src": "10143:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10154:6:10",
														"nodeType": "YulTypedName",
														"src": "10154:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10162:6:10",
														"nodeType": "YulTypedName",
														"src": "10162:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10173:4:10",
														"nodeType": "YulTypedName",
														"src": "10173:4:10",
														"type": ""
													}
												],
												"src": "10053:297:10"
											},
											{
												"body": {
													"nativeSrc": "10512:260:10",
													"nodeType": "YulBlock",
													"src": "10512:260:10",
													"statements": [
														{
															"nativeSrc": "10522:26:10",
															"nodeType": "YulAssignment",
															"src": "10522:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10534:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10534:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10545:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10545:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10530:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10530:3:10"
																},
																"nativeSrc": "10530:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10530:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10522:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10522:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10564:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10579:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10579:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10587:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10587:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10575:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:10"
																		},
																		"nativeSrc": "10575:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10557:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10557:6:10"
																},
																"nativeSrc": "10557:74:10",
																"nodeType": "YulFunctionCall",
																"src": "10557:74:10"
															},
															"nativeSrc": "10557:74:10",
															"nodeType": "YulExpressionStatement",
															"src": "10557:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10651:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10651:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10662:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10662:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10647:3:10"
																		},
																		"nativeSrc": "10647:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10647:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10671:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10671:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10679:42:10",
																				"nodeType": "YulLiteral",
																				"src": "10679:42:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10667:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10667:3:10"
																		},
																		"nativeSrc": "10667:55:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10667:55:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10640:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10640:6:10"
																},
																"nativeSrc": "10640:83:10",
																"nodeType": "YulFunctionCall",
																"src": "10640:83:10"
															},
															"nativeSrc": "10640:83:10",
															"nodeType": "YulExpressionStatement",
															"src": "10640:83:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10743:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10743:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10754:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10754:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10739:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10739:3:10"
																		},
																		"nativeSrc": "10739:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10739:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10759:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10759:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10732:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10732:6:10"
																},
																"nativeSrc": "10732:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10732:34:10"
															},
															"nativeSrc": "10732:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10732:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10355:417:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10465:9:10",
														"nodeType": "YulTypedName",
														"src": "10465:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10476:6:10",
														"nodeType": "YulTypedName",
														"src": "10476:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10484:6:10",
														"nodeType": "YulTypedName",
														"src": "10484:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10492:6:10",
														"nodeType": "YulTypedName",
														"src": "10492:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10503:4:10",
														"nodeType": "YulTypedName",
														"src": "10503:4:10",
														"type": ""
													}
												],
												"src": "10355:417:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ModuleX:Invalid Stake ID!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ModuleX:Early Withdrawal is not \")\n        mstore(add(headStart, 96), \"permitted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ModuleX:Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ModuleX:amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ModuleX:Burnt tokens!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ModuleX:Insufficient balance!\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ModuleX:Total amount is 0!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"ModuleX:STOPPED!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ModuleX:Stake amount must be gre\")\n        mstore(add(headStart, 96), \"ater than 0!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Use longer lock_period!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"853": [
									{
										"length": 32,
										"start": 2137
									},
									{
										"length": 32,
										"start": 3251
									},
									{
										"length": 32,
										"start": 3314
									},
									{
										"length": 32,
										"start": 3446
									},
									{
										"length": 32,
										"start": 3586
									}
								],
								"855": [
									{
										"length": 32,
										"start": 392
									},
									{
										"length": 32,
										"start": 2170
									},
									{
										"length": 32,
										"start": 3148
									},
									{
										"length": 32,
										"start": 3200
									},
									{
										"length": 32,
										"start": 3356
									},
									{
										"length": 32,
										"start": 3488
									},
									{
										"length": 32,
										"start": 3628
									}
								],
								"858": [
									{
										"length": 32,
										"start": 469
									},
									{
										"length": 32,
										"start": 869
									},
									{
										"length": 32,
										"start": 1987
									},
									{
										"length": 32,
										"start": 2702
									},
									{
										"length": 32,
										"start": 4385
									}
								],
								"861": [
									{
										"length": 32,
										"start": 572
									},
									{
										"length": 32,
										"start": 699
									},
									{
										"length": 32,
										"start": 1426
									},
									{
										"length": 32,
										"start": 2856
									},
									{
										"length": 32,
										"start": 3783
									},
									{
										"length": 32,
										"start": 3987
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610175575f3560e01c8063af7568dd116100dd578063ce325bf811610088578063d6ef7af011610063578063d6ef7af014610389578063d93c04a01461039c578063f2fde38b146103c4575f5ffd5b8063ce325bf814610313578063d2d7231f14610350578063d46149a214610363575f5ffd5b8063b6baffe3116100b8578063b6baffe3146102e5578063bc854352146102ed578063beceed3914610300575f5ffd5b8063af7568dd146102ad578063b109beec146102b6578063b5fa91fe146102dd575f5ffd5b806375f12b211161013d5780638e12c0cd116101185780638e12c0cd146102705780638f4729b714610291578063ac00500f1461029a575f5ffd5b806375f12b21146102175780637c2fdeb51461023a5780638da5cb5b14610260575f5ffd5b806307da68f514610179578063109cf39914610183578063379607f5146101bd5780636db08f25146101d0578063715018a61461020f575b5f5ffd5b6101816103d7565b005b6101aa7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101aa6101cb366004611474565b6103f3565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b4565b610181610618565b5f5461022a90600160a01b900460ff1681565b60405190151581526020016101b4565b7f00000000000000000000000000000000000000000000000000000000000000006101f7565b5f546001600160a01b03166101f7565b610279612a3081565b6040516001600160601b0390911681526020016101b4565b6101aa60045481565b6101816102a836600461148b565b61062b565b6101aa60035481565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6101aa610841565b6101aa610856565b6101816102fb3660046114ab565b6108b0565b61018161030e366004611474565b610ac2565b610326610321366004611474565b610b8e565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101b4565b6101aa61035e366004611474565b610c2b565b7f00000000000000000000000000000000000000000000000000000000000000006101f7565b610181610397366004611537565b610e9d565b6103af6103aa36600461155f565b611001565b604080519283526020830191909152016101b4565b6101816103d2366004611586565b611290565b6103df6112cd565b5f805460ff60a01b1916600160a01b179055565b5f815f81118015610405575060025481105b6104525760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b60448201526064015b60405180910390fd5b5f83815260016020526040902080546001600160a01b031633146104b85760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572006044820152606401610449565b8054600160a01b90046001600160601b0316426001600160601b031610156105355760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74206044820152697065726d69747465642160b01b6064820152608401610449565b5f8160020154116105885760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d00000000000000006044820152606401610449565b60028101546105c17f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112f9565b8060045f8282546105d291906115ba565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b6106206112cd565b6106295f61136d565b565b6106336112cd565b815f81118015610644575060025481105b61068c5760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5f82116106ed5760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b6064820152608401610449565b5f8381526001602052604090208054600160a01b90046001600160601b0316426001600160601b0316111561075c5760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610449565b80600101548311156107b05760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610449565b6107ea3360018301546001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906112f9565b82816001015f8282546107fd91906115ba565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f600160025461085191906115ba565b905090565b5f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003546108a691906115d3565b61085191906115f2565b6108b86112cd565b5f805b82811015610a39576002548484838181106108d8576108d8611605565b90506020020135106109285760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5f60015f86868581811061093e5761093e611605565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b031611156109bb5760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610449565b60018101546109ca90846115f2565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610a0557610a05611605565b905060200201358260010154604051610a28929190918252602082015260400190565b60405180910390a1506001016108bb565b505f8111610a895760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e742069732030210000000000006044820152606401610449565b610abd7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633836112f9565b505050565b5f8111610b235760405162461bcd60e51b815260206004820152602960248201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460448201526868616e207a65726f2160b81b6064820152608401610449565b610b587f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330846113c9565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b5f5f5f5f845f81118015610ba3575060025481105b610beb5760405162461bcd60e51b81526020600482015260196024820152784d6f64756c65583a496e76616c6964205374616b652049442160381b6044820152606401610449565b5050505f92835250506001602081905260409091208054918101546002909101546001600160a01b03831693600160a01b9093046001600160601b031692565b5f5f670de0b6b3a764000090505f83600354610c4791906115f2565b90505f7f0000000000000000000000000000000000000000000000000000000000000000600354610c7891906115d3565b90505f610ca57f0000000000000000000000000000000000000000000000000000000000000000846115d3565b9050808203610cec57610cd87f0000000000000000000000000000000000000000000000000000000000000000836115f2565b610ce290876115d3565b9695505050505050565b5f610d177f0000000000000000000000000000000000000000000000000000000000000000846115f2565b6003547f0000000000000000000000000000000000000000000000000000000000000000610d468660016115f2565b610d509190611619565b610d5a91906115ba565b610d649087611619565b610d6e91906115d3565b90505f610d9b7f0000000000000000000000000000000000000000000000000000000000000000846115f2565b610dc57f000000000000000000000000000000000000000000000000000000000000000085611619565b610dcf90876115ba565b610dd99088611619565b610de391906115d3565b90505f80610df28660016115f2565b90505b84811015610e6f57610e277f0000000000000000000000000000000000000000000000000000000000000000826115f2565b610e517f00000000000000000000000000000000000000000000000000000000000000008a611619565b610e5b91906115d3565b610e6590836115f2565b9150600101610df5565b508682610e7c83866115f2565b610e8691906115f2565b610e9091906115d3565b9998505050505050505050565b610ea56112cd565b600454610eb290826115f2565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610f14573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f389190611630565b1015610f865760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610449565b610fba6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001683836112f9565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133782604051610ff591815260200190565b60405180910390a25050565b5f80548190600160a01b900460ff161561105d5760405162461bcd60e51b815260206004820152601060248201527f4d6f64756c65583a53544f5050454421000000000000000000000000000000006044820152606401610449565b5f83116110c15760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201526b61746572207468616e20302160a01b6064820152608401610449565b612a306001600160601b038516101561111c5760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421006044820152606401610449565b6111517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163330866113c9565b5f61115c8542611647565b90505f61116885610c2b565b90505f600254905060405180608001604052806111823390565b6001600160a01b0390811682526001600160601b0386811660208085019190915260408085018c905260609485018890525f878152600180845282822088519489015194909616600160a01b9490951693909302939093178455850151908301559290910151600290910155600380548892906112009084906115f2565b925050819055508160045f82825461121891906115f2565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260028054905f61127e83611666565b90915550909791965090945050505050565b6112986112cd565b6001600160a01b0381166112c157604051631e4fbdf760e01b81525f6004820152602401610449565b6112ca8161136d565b50565b5f546001600160a01b031633146106295760405163118cdaa760e01b8152336004820152602401610449565b6040516001600160a01b03838116602483015260448201839052610abd91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611408565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526114029186918216906323b872dd90608401611326565b50505050565b5f5f60205f8451602086015f885af180611427576040513d5f823e3d81fd5b50505f513d9150811561143e57806001141561144b565b6001600160a01b0384163b155b1561140257604051635274afe760e01b81526001600160a01b0385166004820152602401610449565b5f60208284031215611484575f5ffd5b5035919050565b5f5f6040838503121561149c575f5ffd5b50508035926020909101359150565b5f5f602083850312156114bc575f5ffd5b823567ffffffffffffffff8111156114d2575f5ffd5b8301601f810185136114e2575f5ffd5b803567ffffffffffffffff8111156114f8575f5ffd5b8560208260051b840101111561150c575f5ffd5b6020919091019590945092505050565b80356001600160a01b0381168114611532575f5ffd5b919050565b5f5f60408385031215611548575f5ffd5b6115518361151c565b946020939093013593505050565b5f5f60408385031215611570575f5ffd5b82356001600160601b0381168114611551575f5ffd5b5f60208284031215611596575f5ffd5b61159f8261151c565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156115cd576115cd6115a6565b92915050565b5f826115ed57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156115cd576115cd6115a6565b634e487b7160e01b5f52603260045260245ffd5b80820281158282048414176115cd576115cd6115a6565b5f60208284031215611640575f5ffd5b5051919050565b6001600160601b0381811683821601908111156115cd576115cd6115a6565b5f60018201611677576116776115a6565b506001019056fea2646970667358221220f6ce814925eb8917629b1f92e81f273d26cfe7de88f6a2f88f4289aacc86006164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x175 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xDD JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD6EF7AF0 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x363 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB6BAFFE3 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x300 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x2DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x8E12C0CD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x29A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x75F12B21 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7DA68F5 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x109CF399 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x181 PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x1F7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x618 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x22A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F7 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1AA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F7 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x841 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x856 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1AA PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x397 CALLDATASIZE PUSH1 0x4 PUSH2 0x1537 JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x155F JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x1290 JUMP JUMPDEST PUSH2 0x3DF PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x405 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x452 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7065726D697474656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x5C1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12F9 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x620 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x629 PUSH0 PUSH2 0x136D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x633 PUSH2 0x12CD JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x644 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x7EA CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x8A6 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0x8B8 PUSH2 0x12CD JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x8D8 JUMPI PUSH2 0x8D8 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x928 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93E PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x9BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x9CA SWAP1 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0x1605 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xA28 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x8BB JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xABD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x12F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xB58 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xBA3 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xBEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4D6F64756C65583A496E76616C6964205374616B6520494421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xCA5 PUSH32 0x0 DUP5 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xCEC JUMPI PUSH2 0xCD8 PUSH32 0x0 DUP4 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xCE2 SWAP1 DUP8 PUSH2 0x15D3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD17 PUSH32 0x0 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH32 0x0 PUSH2 0xD46 DUP7 PUSH1 0x1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0xD64 SWAP1 DUP8 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD9B PUSH32 0x0 DUP5 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xDC5 PUSH32 0x0 DUP6 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xDCF SWAP1 DUP8 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0xDD9 SWAP1 DUP9 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xDF2 DUP7 PUSH1 0x1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE6F JUMPI PUSH2 0xE27 PUSH32 0x0 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE51 PUSH32 0x0 DUP11 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0xE5B SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xE65 SWAP1 DUP4 PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xDF5 JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xE7C DUP4 DUP7 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEA5 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xEB2 SWAP1 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF14 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST LT ISZERO PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0xFBA PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x12F9 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x105D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A53544F505045442100000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x61746572207468616E203021 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x2A30 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x1151 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x13C9 JUMP JUMPDEST PUSH0 PUSH2 0x115C DUP6 TIMESTAMP PUSH2 0x1647 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1168 DUP6 PUSH2 0xC2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1182 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1200 SWAP1 DUP5 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1218 SWAP2 SWAP1 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x127E DUP4 PUSH2 0x1666 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1298 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x12C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH2 0x12CA DUP2 PUSH2 0x136D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0xABD SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1408 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1402 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0x1326 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1427 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x143E JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x144B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x449 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1484 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x150C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1532 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1548 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1551 DUP4 PUSH2 0x151C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x159F DUP3 PUSH2 0x151C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1640 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x15CD JUMPI PUSH2 0x15CD PUSH2 0x15A6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1677 JUMPI PUSH2 0x1677 PUSH2 0x15A6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xCE DUP2 BLOBHASH 0x25 0xEB DUP10 OR PUSH3 0x9B1F92 0xE8 0x1F 0x27 RETURNDATASIZE 0x26 0xCF SWAPN 0xDE DUP9 0xF6 LOG2 EXTCALL DUP16 TIMESTAMP DUP10 0xAA 0xCC DUP7 STOP PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "278:6930:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7130:73;;;:::i;:::-;;675:41;;;;;;;;160:25:10;;;148:2;133:18;675:41:8;;;;;;;;4635:669;;;;;;:::i;:::-;;:::i;723:29::-;;;;;;;;-1:-1:-1;;;;;605:55:10;;;587:74;;575:2;560:18;723:29:8;427:240:10;2293:101:0;;;:::i;508:27:8:-;;;;;-1:-1:-1;;;508:27:8;;;;;;;;;837:14:10;;830:22;812:41;;800:2;785:18;508:27:8;672:187:10;1858:105:8;1948:6;1858:105;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;543:45:8;;577:11;543:45;;;;;-1:-1:-1;;;;;1257:39:10;;;1239:58;;1227:2;1212:18;543:45:8;1095:208:10;925:32:8;;;;;;5312:556;;;;;;:::i;:::-;;:::i;890:28::-;;;;;;759:30;;;;;1971:101;;;:::i;3502:129::-;;;:::i;5876:712::-;;;;;;:::i;:::-;;:::i;6596:238::-;;;;;;:::i;:::-;;:::i;2080:395::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2523:55:10;;;2505:74;;2610:2;2595:18;;2588:34;;;;2638:18;;;2631:34;2696:2;2681:18;;2674:34;2492:3;2477:19;2080:395:8;2274:440:10;2594:900:8;;;;;;:::i;:::-;;:::i;1747:103::-;1836:5;1747:103;;6842:280;;;;;;:::i;:::-;;:::i;3639:988::-;;;;;;:::i;:::-;;:::i;:::-;;;;3816:25:10;;;3872:2;3857:18;;3850:34;;;;3789:18;3639:988:8;3642:248:10;2543:215:0;;;;;;:::i;:::-;;:::i;7130:73:8:-;1531:13:0;:11;:13::i;:::-;7181:7:8::1;:14:::0;;-1:-1:-1;;;;7181:14:8::1;-1:-1:-1::0;;;7181:14:8::1;::::0;;7130:73::o;4635:669::-;4707:4;4689:8;1347:1;1336:8;:12;:39;;;;;1363:12;;1352:8;:23;1336:39;1328:77;;;;-1:-1:-1;;;1328:77:8;;4288:2:10;1328:77:8;;;4270:21:10;4327:2;4307:18;;;4300:30;-1:-1:-1;;;4346:18:10;;;4339:55;4411:18;;1328:77:8;;;;;;;;;4729:28:::1;4760:16:::0;;;:6:::1;:16;::::0;;;;4795:13;;-1:-1:-1;;;;;4795:13:8::1;735:10:6::0;4795:29:8::1;4787:73;;;::::0;-1:-1:-1;;;4787:73:8;;4642:2:10;4787:73:8::1;::::0;::::1;4624:21:10::0;4681:2;4661:18;;;4654:30;4720:33;4700:18;;;4693:61;4771:18;;4787:73:8::1;4440:355:10::0;4787:73:8::1;4893:16:::0;;-1:-1:-1;;;4893:16:8;::::1;-1:-1:-1::0;;;;;4893:16:8::1;2562:15:::0;-1:-1:-1;;;;;4879:30:8::1;;;4871:85;;;::::0;-1:-1:-1;;;4871:85:8;;5002:2:10;4871:85:8::1;::::0;::::1;4984:21:10::0;5041:2;5021:18;;;5014:30;5080:34;5060:18;;;5053:62;-1:-1:-1;;;5131:18:10;;;5124:40;5181:19;;4871:85:8::1;4800:406:10::0;4871:85:8::1;5000:1;4976:7;:21;;;:25;4968:62;;;::::0;-1:-1:-1;;;4968:62:8;;5413:2:10;4968:62:8::1;::::0;::::1;5395:21:10::0;5452:2;5432:18;;;5425:30;5491:26;5471:18;;;5464:54;5535:18;;4968:62:8::1;5211:348:10::0;4968:62:8::1;5062:21;::::0;::::1;::::0;5094:48:::1;:6;-1:-1:-1::0;;;;;5094:19:8::1;735:10:6::0;5062:21:8;5094:19:::1;:48::i;:::-;5178:13;5158:16;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5226:1:8::1;5202:21;::::0;::::1;:25:::0;5244:20:::1;::::0;160:25:10;;;5244:20:8::1;::::0;148:2:10;133:18;5244:20:8::1;;;;;;;5283:13:::0;4635:669;-1:-1:-1;;;;4635:669:8:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5312:556:8:-;1531:13:0;:11;:13::i;:::-;5397:8:8::1;1347:1;1336:8;:12;:39;;;;;1363:12;;1352:8;:23;1336:39;1328:77;;;::::0;-1:-1:-1;;;1328:77:8;;4288:2:10;1328:77:8::1;::::0;::::1;4270:21:10::0;4327:2;4307:18;;;4300:30;-1:-1:-1;;;4346:18:10;;;4339:55;4411:18;;1328:77:8::1;4086:349:10::0;1328:77:8::1;5441:1:::2;5432:6;:10;5423:65;;;::::0;-1:-1:-1;;;5423:65:8;;6031:2:10;5423:65:8::2;::::0;::::2;6013:21:10::0;6070:2;6050:18;;;6043:30;6109:34;6089:18;;;6082:62;-1:-1:-1;;;6160:18:10;;;6153:39;6209:19;;5423:65:8::2;5829:405:10::0;5423:65:8::2;5499:28;5530:16:::0;;;:6:::2;:16;::::0;;;;5579;;-1:-1:-1;;;5579:16:8;::::2;-1:-1:-1::0;;;;;5579:16:8::2;2562:15:::0;-1:-1:-1;;;;;5565:30:8::2;;;5557:64;;;::::0;-1:-1:-1;;;5557:64:8;;6441:2:10;5557:64:8::2;::::0;::::2;6423:21:10::0;6480:2;6460:18;;;6453:30;-1:-1:-1;;;6499:18:10;;;6492:51;6560:18;;5557:64:8::2;6239:345:10::0;5557:64:8::2;5651:7;:20;;;5641:6;:30;;5633:72;;;::::0;-1:-1:-1;;;5633:72:8;;6791:2:10;5633:72:8::2;::::0;::::2;6773:21:10::0;6830:2;6810:18;;;6803:30;6869:31;6849:18;;;6842:59;6918:18;;5633:72:8::2;6589:353:10::0;5633:72:8::2;5717:54;735:10:6::0;5750:20:8::2;::::0;::::2;::::0;-1:-1:-1;;;;;5717:5:8::2;:18;::::0;:54;:18:::2;:54::i;:::-;5806:6;5782:7;:20;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5828:32:8::2;::::0;;3816:25:10;;;3872:2;3857:18;;3850:34;;;5828:32:8::2;::::0;3789:18:10;5828:32:8::2;;;;;;;5412:456;1554:1:0::1;5312:556:8::0;;:::o;1971:101::-;2019:4;2063:1;2048:12;;:16;;;;:::i;:::-;2041:23;;1971:101;:::o;3502:129::-;3549:4;3613:10;3591:19;3578:12;;:32;;;;:::i;:::-;:45;;;;:::i;5876:712::-;1531:13:0;:11;:13::i;:::-;5966:17:8::1;::::0;5998:459:::1;6014:20:::0;;::::1;5998:459;;;6088:12;;6073:9;;6083:1;6073:12;;;;;;;:::i;:::-;;;;;;;:27;6065:65;;;::::0;-1:-1:-1;;;6065:65:8;;4288:2:10;6065:65:8::1;::::0;::::1;4270:21:10::0;4327:2;4307:18;;;4300:30;-1:-1:-1;;;4346:18:10;;;4339:55;4411:18;;6065:65:8::1;4086:349:10::0;6065:65:8::1;6145:28;6176:6;:20;6183:9;;6193:1;6183:12;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;6176:20:::0;;-1:-1:-1;6176:20:8;::::1;::::0;;;;;;-1:-1:-1;6176:20:8;6233:16;;6176:20;;-1:-1:-1;;;;6233:16:8;::::1;-1:-1:-1::0;;;;;6233:16:8::1;2562:15:::0;-1:-1:-1;;;;;6219:30:8::1;;;6211:64;;;::::0;-1:-1:-1;;;6211:64:8;;6441:2:10;6211:64:8::1;::::0;::::1;6423:21:10::0;6480:2;6460:18;;;6453:30;-1:-1:-1;;;6499:18:10;;;6492:51;6560:18;;6211:64:8::1;6239:345:10::0;6211:64:8::1;6306:20;::::0;::::1;::::0;6290:36:::1;::::0;;::::1;:::i;:::-;6364:1;6341:20;::::0;::::1;:24:::0;6290:36;-1:-1:-1;6395:50:8::1;6410:9:::0;;6420:1;6410:12;;::::1;;;;;:::i;:::-;;;;;;;6424:7;:20;;;6395:50;;;;;;3816:25:10::0;;;3872:2;3857:18;;3850:34;3804:2;3789:18;;3642:248;6395:50:8::1;;;;;;;;-1:-1:-1::0;6036:3:8::1;;5998:459;;;;6490:1;6475:12;:16;6467:55;;;::::0;-1:-1:-1;;;6467:55:8;;7633:2:10;6467:55:8::1;::::0;::::1;7615:21:10::0;7672:2;7652:18;;;7645:30;7711:28;7691:18;;;7684:56;7757:18;;6467:55:8::1;7431:350:10::0;6467:55:8::1;6534:46;:5;-1:-1:-1::0;;;;;6534:18:8::1;735:10:6::0;6567:12:8;6534:18:::1;:46::i;:::-;5955:633;5876:712:::0;;:::o;6596:238::-;6673:1;6664:6;:10;6655:65;;;;-1:-1:-1;;;6655:65:8;;6031:2:10;6655:65:8;;;6013:21:10;6070:2;6050:18;;;6043:30;6109:34;6089:18;;;6082:62;-1:-1:-1;;;6160:18:10;;;6153:39;6209:19;;6655:65:8;5829:405:10;6655:65:8;6731:60;:6;-1:-1:-1;;;;;6731:23:8;735:10:6;6777:4:8;6784:6;6731:23;:60::i;:::-;6807:19;;160:25:10;;;6807:19:8;;148:2:10;133:18;6807:19:8;;;;;;;6596:238;:::o;2080:395::-;2181:13;2205;2229:17;2257:18;2137:8;1347:1;1336:8;:12;:39;;;;;1363:12;;1352:8;:23;1336:39;1328:77;;;;-1:-1:-1;;;1328:77:8;;4288:2:10;1328:77:8;;;4270:21:10;4327:2;4307:18;;;4300:30;-1:-1:-1;;;4346:18:10;;;4339:55;4411:18;;1328:77:8;4086:349:10;1328:77:8;-1:-1:-1;;;2315:16:8::1;::::0;;;-1:-1:-1;;2315:6:8::1;:16;::::0;;;;;;;:22;;2392:29;;::::1;::::0;2436:30:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2315:22:8;::::1;::::0;-1:-1:-1;;;2352:25:8;;::::1;-1:-1:-1::0;;;;;2352:25:8::1;::::0;2080:395::o;2594:900::-;2658:4;2681:17;2701:4;2681:24;;2716:15;2749:12;2734;;:27;;;;:::i;:::-;2716:45;;2772:10;2798:19;2785:12;;:32;;;;:::i;:::-;2772:45;-1:-1:-1;2828:11:8;2842:30;2853:19;2842:10;:30;:::i;:::-;2828:44;;2895:6;2886:5;:15;2883:604;;2948:18;2956:10;2948:5;:18;:::i;:::-;2934:33;;:12;:33;:::i;:::-;2927:40;2594:900;-1:-1:-1;;;;;;2594:900:8:o;2883:604::-;3019:10;3095:18;3103:10;3095:5;:18;:::i;:::-;3080:12;;3058:19;3047:9;:5;3055:1;3047:9;:::i;:::-;3046:31;;;;:::i;:::-;:46;;;;:::i;:::-;3032:61;;:12;:61;:::i;:::-;:82;;;;:::i;:::-;3019:95;-1:-1:-1;3129:11:8;3199:19;3208:10;3199:6;:19;:::i;:::-;3170:26;3177:19;3170:6;:26;:::i;:::-;3157:39;;:10;:39;:::i;:::-;3143:54;;:12;:54;:::i;:::-;:76;;;;:::i;:::-;3129:90;-1:-1:-1;3234:13:8;;3277:9;:5;3285:1;3277:9;:::i;:::-;3270:16;;3266:148;3292:6;3288:1;:10;3266:148;;;3383:14;3387:10;3383:1;:14;:::i;:::-;3349:32;3362:19;3349:12;:32;:::i;:::-;:49;;;;:::i;:::-;3337:61;;;;:::i;:::-;;-1:-1:-1;3300:3:8;;3266:148;;;-1:-1:-1;3463:12:8;3455:6;3436:16;3444:8;3436:5;:16;:::i;:::-;:25;;;;:::i;:::-;3435:40;;;;:::i;:::-;3428:47;2594:900;-1:-1:-1;;;;;;;;;2594:900:8:o;6842:280::-;1531:13:0;:11;:13::i;:::-;6979:16:8::1;::::0;6970:25:::1;::::0;:6;:25:::1;:::i;:::-;6935:31;::::0;-1:-1:-1;;;6935:31:8;;6960:4:::1;6935:31;::::0;::::1;587:74:10::0;6935:6:8::1;-1:-1:-1::0;;;;;6935:16:8::1;::::0;::::1;::::0;560:18:10;;6935:31:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6927:102;;;::::0;-1:-1:-1;;;6927:102:8;;6791:2:10;6927:102:8::1;::::0;::::1;6773:21:10::0;6830:2;6810:18;;;6803:30;6869:31;6849:18;;;6842:59;6918:18;;6927:102:8::1;6589:353:10::0;6927:102:8::1;7040:31;-1:-1:-1::0;;;;;7040:6:8::1;:19;7060:2:::0;7064:6;7040:19:::1;:31::i;:::-;7103:2;-1:-1:-1::0;;;;;7087:27:8::1;;7107:6;7087:27;;;;160:25:10::0;;148:2;133:18;;14:177;7087:27:8::1;;;;;;;;6842:280:::0;;:::o;3639:988::-;3710:4;3747:7;;3710:4;;-1:-1:-1;;;3747:7:8;;;;3746:8;3738:37;;;;-1:-1:-1;;;3738:37:8;;8350:2:10;3738:37:8;;;8332:21:10;8389:2;8369:18;;;8362:30;8428:18;8408;;;8401:46;8464:18;;3738:37:8;8148:340:10;3738:37:8;3809:1;3794:12;:16;3786:73;;;;-1:-1:-1;;;3786:73:8;;8695:2:10;3786:73:8;;;8677:21:10;8734:2;8714:18;;;8707:30;8773:34;8753:18;;;8746:62;-1:-1:-1;;;8824:18:10;;;8817:42;8876:19;;3786:73:8;8493:408:10;3786:73:8;577:11;-1:-1:-1;;;;;3878:23:8;;;;3870:67;;;;-1:-1:-1;;;3870:67:8;;9108:2:10;3870:67:8;;;9090:21:10;9147:2;9127:18;;;9120:30;9186:33;9166:18;;;9159:61;9237:18;;3870:67:8;8906:355:10;3870:67:8;3948:65;:5;-1:-1:-1;;;;;3948:22:8;735:10:6;3993:4:8;4000:12;3948:22;:65::i;:::-;4025:15;4043:24;4056:11;2562:15;4043:24;:::i;:::-;4025:42;;4078:18;4099:29;4115:12;4099:15;:29::i;:::-;4078:50;;4139:13;4155:12;;4139:28;;4197:176;;;;;;;;4232:12;735:10:6;;656:96;4232:12:8;-1:-1:-1;;;;;4197:176:8;;;;;-1:-1:-1;;;;;4197:176:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4178:16:8;;;:6;:16;;;;;;:195;;;;;;;;;;-1:-1:-1;;;4178:195:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4394:12;:28;;4197:176;;-1:-1:-1;4394:28:8;;4197:176;;4394:28;:::i;:::-;;;;;;;;4454:13;4434:16;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;4483:69:8;;;9715:25:10;;;-1:-1:-1;;;;;9776:39:10;;9771:2;9756:18;;9749:67;9832:18;;;9825:34;;;9890:2;9875:18;;9868:34;;;4483:69:8;;735:10:6;;4483:69:8;;;;;;9702:3:10;4483:69:8;;;4563:12;:14;;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;4595:8:8;;4605:13;;-1:-1:-1;3639:988:8;;-1:-1:-1;;;;;3639:988:8:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;587:74:10::0;560:18;;2672:31:0::1;427:240:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;587:74:10;560:18;;1901:40:0;427:240:10;1219:160:5;1328:43;;-1:-1:-1;;;;;10245:55:10;;;1328:43:5;;;10227:74:10;10317:18;;;10310:34;;;1301:71:5;;1321:5;;1343:14;;;;;10200:18:10;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1618:188:5:-;1745:53;;-1:-1:-1;;;;;10575:55:10;;;1745:53:5;;;10557:74:10;10667:55;;;10647:18;;;10640:83;10739:18;;;10732:34;;;1718:81:5;;1738:5;;1760:18;;;;;10530::10;;1745:53:5;10355:417:10;1718:81:5;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:5;;-1:-1:-1;;;;;605:55:10;;9033:40:5;;;587:74:10;560:18;;9033:40:5;427:240:10;196:226;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:10;;196:226;-1:-1:-1;196:226:10:o;1308:346::-;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;-1:-1:-1;;1498:23:10;;;1618:2;1603:18;;;1590:32;;-1:-1:-1;1308:346:10:o;1659:610::-;1745:6;1753;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1862:9;1849:23;1895:18;1887:6;1884:30;1881:50;;;1927:1;1924;1917:12;1881:50;1950:22;;2003:4;1995:13;;1991:27;-1:-1:-1;1981:55:10;;2032:1;2029;2022:12;1981:55;2072:2;2059:16;2098:18;2090:6;2087:30;2084:50;;;2130:1;2127;2120:12;2084:50;2183:7;2178:2;2168:6;2165:1;2161:14;2157:2;2153:23;2149:32;2146:45;2143:65;;;2204:1;2201;2194:12;2143:65;2235:2;2227:11;;;;;2257:6;;-1:-1:-1;1659:610:10;-1:-1:-1;;;1659:610:10:o;2719:196::-;2787:20;;-1:-1:-1;;;;;2836:54:10;;2826:65;;2816:93;;2905:1;2902;2895:12;2816:93;2719:196;;;:::o;2920:300::-;2988:6;2996;3049:2;3037:9;3028:7;3024:23;3020:32;3017:52;;;3065:1;3062;3055:12;3017:52;3088:29;3107:9;3088:29;:::i;:::-;3078:39;3186:2;3171:18;;;;3158:32;;-1:-1:-1;;;2920:300:10:o;3225:412::-;3292:6;3300;3353:2;3341:9;3332:7;3328:23;3324:32;3321:52;;;3369:1;3366;3359:12;3321:52;3408:9;3395:23;-1:-1:-1;;;;;3451:5:10;3447:38;3440:5;3437:49;3427:77;;3500:1;3497;3490:12;3895:186;3954:6;4007:2;3995:9;3986:7;3982:23;3978:32;3975:52;;;4023:1;4020;4013:12;3975:52;4046:29;4065:9;4046:29;:::i;:::-;4036:39;3895:186;-1:-1:-1;;;3895:186:10:o;5564:127::-;5625:10;5620:3;5616:20;5613:1;5606:31;5656:4;5653:1;5646:15;5680:4;5677:1;5670:15;5696:128;5763:9;;;5784:11;;;5781:37;;;5798:18;;:::i;:::-;5696:128;;;;:::o;6947:217::-;6987:1;7013;7003:132;;7057:10;7052:3;7048:20;7045:1;7038:31;7092:4;7089:1;7082:15;7120:4;7117:1;7110:15;7003:132;-1:-1:-1;7149:9:10;;6947:217::o;7169:125::-;7234:9;;;7255:10;;;7252:36;;;7268:18;;:::i;7299:127::-;7360:10;7355:3;7351:20;7348:1;7341:31;7391:4;7388:1;7381:15;7415:4;7412:1;7405:15;7786:168;7859:9;;;7890;;7907:15;;;7901:22;;7887:37;7877:71;;7928:18;;:::i;7959:184::-;8029:6;8082:2;8070:9;8061:7;8057:23;8053:32;8050:52;;;8098:1;8095;8088:12;8050:52;-1:-1:-1;8121:16:10;;7959:184;-1:-1:-1;7959:184:10:o;9266:215::-;-1:-1:-1;;;;;9334:34:10;;;9370;;;9330:75;;9417:35;;9414:61;;;9455:18;;:::i;9913:135::-;9952:3;9973:17;;;9970:43;;9993:18;;:::i;:::-;-1:-1:-1;10040:1:10;10029:13;;9913:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1162400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"DIFFICULTY_INTERVAL()": "infinite",
								"MATURITY()": "260",
								"addRewards(uint256)": "infinite",
								"batchWithdrawCREDI(uint256[])": "infinite",
								"calculateReward(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"getCREDIAddress()": "infinite",
								"getDifficulty()": "infinite",
								"getStake(uint256)": "9039",
								"getStakesCount()": "2470",
								"getxCREDIAddress()": "infinite",
								"owner()": "2419",
								"pending_payments()": "2350",
								"renounceOwnership()": "infinite",
								"stake(uint96,uint256)": "infinite",
								"stop()": "26565",
								"stopped()": "2371",
								"total_staked()": "2329",
								"transferOwnership(address)": "28405",
								"withdrawCREDI(uint256,uint256)": "infinite",
								"withdrawRewards(address,uint256)": "infinite",
								"xCREDI()": "infinite"
							},
							"internal": {
								"time_now()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 530,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 508,
									"end": 535,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 644,
									"end": 646,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 608,
									"end": 646,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 608,
									"end": 646,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 508,
									"end": 535,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 854,
									"end": 883,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 854,
									"end": 883,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 890,
									"end": 918,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 890,
									"end": 918,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 890,
									"end": 918,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 890,
									"end": 918,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 925,
									"end": 957,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 925,
									"end": 957,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1433,
									"end": 1735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1572,
									"end": 1599,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1572,
									"end": 1599,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1572,
									"end": 1599,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1572,
									"end": 1599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 1572,
									"end": 1599,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1639,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1639,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1639,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1639,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1610,
									"end": 1639,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1692,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1650,
									"end": 1692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1703,
									"end": 1727,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 580,
									"end": 582,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 565,
									"end": 583,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 559,
									"end": 584,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 674,
									"end": 676,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 659,
									"end": 677,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 653,
									"end": 678,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 715,
									"end": 918,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 715,
									"end": 918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "861"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "858"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "855"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "853"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7208,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6ce814925eb8917629b1f92e81f273d26cfe7de88f6a2f88f4289aacc86006164736f6c634300081e0033",
									".code": [
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "D93C04A0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "D46149A2"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "BECEED39"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "B5FA91FE"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "75F12B21"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "AC00500F"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "75F12B21"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "7DA68F5"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "109CF399"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7130,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 675,
											"end": 716,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 675,
											"end": 716,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 5304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4635,
											"end": 5304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 723,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 723,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 723,
											"end": 752,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "858"
										},
										{
											"begin": 723,
											"end": 752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 723,
											"end": 752,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 723,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 723,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 723,
											"end": 752,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 752,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 575,
											"end": 577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 723,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 837,
											"end": 851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 830,
											"end": 852,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 812,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 800,
											"end": 802,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 803,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 859,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 1963,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1858,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": 1858,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1858,
											"end": 1963,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 543,
											"end": 588,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 577,
											"end": 588,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": 543,
											"end": 588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 543,
											"end": 588,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 543,
											"end": 588,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 543,
											"end": 588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 543,
											"end": 588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 588,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 543,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1095,
											"end": 1303,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 925,
											"end": 957,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 925,
											"end": 957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 925,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 925,
											"end": 957,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 925,
											"end": 957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 925,
											"end": 957,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 5312,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5312,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 890,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 890,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 890,
											"end": 918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 890,
											"end": 918,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 789,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 759,
											"end": 789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 759,
											"end": 789,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": 759,
											"end": 789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 789,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1971,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3502,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5876,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5876,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6596,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6596,
											"end": 6834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2080,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2578,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2579,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2505,
											"end": 2579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2665,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2708,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2495,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2274,
											"end": 2714,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2594,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1747,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1836,
											"end": 1841,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "858"
										},
										{
											"begin": 1747,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1747,
											"end": 1850,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 6842,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6842,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 3639,
											"end": 4627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3639,
											"end": 4627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3642,
											"end": 3890,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 7130,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7181,
											"end": 7195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7181,
											"end": 7195,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7195,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4707,
											"end": 4711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A496E76616C6964205374616B6520494421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4760,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4760,
											"end": 4776,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4808,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4795,
											"end": 4808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 4824,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4644,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4679,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4684,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4440,
											"end": 4795,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4787,
											"end": 4860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4909,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 4909,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 4909,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4909,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4879,
											"end": 4909,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4871,
											"end": 4956,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5004,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4984,
											"end": 5005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5014,
											"end": 5044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5080,
											"end": 5114,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7065726D697474656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5124,
											"end": 5164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4800,
											"end": 5206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4871,
											"end": 4956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5000,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4976,
											"end": 4997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 4997,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 5001,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4968,
											"end": 5030,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 5030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5030,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4968,
											"end": 5030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 5416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5454,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5517,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5553,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5535,
											"end": 5553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5211,
											"end": 5559,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4968,
											"end": 5030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5062,
											"end": 5083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5083,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5094,
											"end": 5100,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5094,
											"end": 5113,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 5094,
											"end": 5142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 5094,
											"end": 5142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5158,
											"end": 5174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5158,
											"end": 5191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5158,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5158,
											"end": 5191,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5226,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5202,
											"end": 5223,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5227,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5264,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19"
										},
										{
											"begin": 5244,
											"end": 5264,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5264,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5296,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4635,
											"end": 5304,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5405,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1348,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1375,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1375,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1336,
											"end": 1375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A496E76616C6964205374616B6520494421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1328,
											"end": 1405,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5442,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5438,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5442,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5423,
											"end": 5488,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5423,
											"end": 5488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5423,
											"end": 5488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5829,
											"end": 6234,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5423,
											"end": 5488,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5530,
											"end": 5546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5579,
											"end": 5595,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5595,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5565,
											"end": 5595,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5595,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5565,
											"end": 5595,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5557,
											"end": 5621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6483,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A4275726E7420746F6B656E7321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6492,
											"end": 6543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6239,
											"end": 6584,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5557,
											"end": 5621,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5658,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5651,
											"end": 5671,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 5671,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5647,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5671,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5641,
											"end": 5671,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5633,
											"end": 5705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5633,
											"end": 5705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5633,
											"end": 5705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6773,
											"end": 6794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 6900,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6589,
											"end": 6942,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5633,
											"end": 5705,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5771,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5750,
											"end": 5770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5722,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "858"
										},
										{
											"begin": 5717,
											"end": 5735,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 5717,
											"end": 5771,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5771,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5717,
											"end": 5771,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5789,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5782,
											"end": 5812,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5782,
											"end": 5812,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5812,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5860,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 5828,
											"end": 5860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5860,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2048,
											"end": 2060,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2048,
											"end": 2060,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2048,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 2048,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2072,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3502,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "853"
										},
										{
											"begin": 3591,
											"end": 3610,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3578,
											"end": 3590,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3578,
											"end": 3610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 3578,
											"end": 3623,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3578,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3578,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5966,
											"end": 5983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6014,
											"end": 6034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6014,
											"end": 6034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6014,
											"end": 6034,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6088,
											"end": 6100,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6082,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6082,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6083,
											"end": 6084,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6073,
											"end": 6085,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6085,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6073,
											"end": 6100,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6130,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6065,
											"end": 6130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6130,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6065,
											"end": 6130,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A496E76616C6964205374616B6520494421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6065,
											"end": 6130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6176,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6192,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6192,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6183,
											"end": 6195,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6183,
											"end": 6195,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6249,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6249,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6233,
											"end": 6249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6233,
											"end": 6249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6249,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6211,
											"end": 6275,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6211,
											"end": 6275,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6275,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6211,
											"end": 6275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6423,
											"end": 6444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6483,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A4275726E7420746F6B656E7321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6499,
											"end": 6517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6492,
											"end": 6543,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6239,
											"end": 6584,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6211,
											"end": 6275,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6306,
											"end": 6326,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6290,
											"end": 6326,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6326,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6290,
											"end": 6326,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6290,
											"end": 6326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6364,
											"end": 6365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6341,
											"end": 6361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6365,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6326,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 6410,
											"end": 6419,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6419,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6420,
											"end": 6421,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6410,
											"end": 6422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6444,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6444,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3890,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6445,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6036,
											"end": 6039,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6490,
											"end": 6491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6491,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6522,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6467,
											"end": 6522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7615,
											"end": 7636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7645,
											"end": 7675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7711,
											"end": 7739,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7684,
											"end": 7740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7431,
											"end": 7781,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6467,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6534,
											"end": 6580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6534,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "858"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6534,
											"end": 6552,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6534,
											"end": 6552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6534,
											"end": 6580,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6534,
											"end": 6580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 6534,
											"end": 6580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 6588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 6588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6674,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6034,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6153,
											"end": 6192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5829,
											"end": 6234,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6655,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6731,
											"end": 6754,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 6731,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6791,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 6731,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2080,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1375,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1336,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A496E76616C6964205374616B6520494421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4086,
											"end": 4435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1328,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2315,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2331,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2337,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2337,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2421,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2436,
											"end": 2466,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2436,
											"end": 2466,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2337,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2337,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2377,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2705,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2746,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2734,
											"end": 2746,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2734,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2817,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 2785,
											"end": 2797,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2785,
											"end": 2797,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2785,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2828,
											"end": 2839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2853,
											"end": 2872,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2842,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2872,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2901,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2901,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2883,
											"end": 3487,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2956,
											"end": 2966,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "853"
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 2948,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2948,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2946,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2934,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2934,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2967,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 3494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3487,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2883,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3103,
											"end": 3113,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "853"
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3095,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3092,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3080,
											"end": 3092,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3047,
											"end": 3052,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3047,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3046,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3046,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3046,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3046,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3032,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3032,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3032,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3032,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3114,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3208,
											"end": 3218,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "853"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3199,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3177,
											"end": 3196,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 3170,
											"end": 3176,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3170,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3196,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3170,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3167,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3157,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3143,
											"end": 3197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3143,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3197,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3143,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3143,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3143,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3234,
											"end": 3247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3277,
											"end": 3282,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3277,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3298,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "853"
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3383,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3362,
											"end": 3381,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "855"
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3349,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3381,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 3349,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3349,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 3349,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3337,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3300,
											"end": 3303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3266,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3444,
											"end": 3452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3436,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3452,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3436,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3436,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 3435,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3435,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3428,
											"end": 3475,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2594,
											"end": 3494,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 3494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6970,
											"end": 6995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 6995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6970,
											"end": 6995,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 6995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6970,
											"end": 6995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6964,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6941,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6935,
											"end": 6951,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6935,
											"end": 6951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 6935,
											"end": 6966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6935,
											"end": 6966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6995,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6935,
											"end": 6995,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6927,
											"end": 7029,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6927,
											"end": 7029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 7029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6927,
											"end": 7029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6773,
											"end": 6794,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6869,
											"end": 6900,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6589,
											"end": 6942,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 6927,
											"end": 7029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7040,
											"end": 7046,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "861"
										},
										{
											"begin": 7040,
											"end": 7059,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7040,
											"end": 7071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7040,
											"end": 7071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7103,
											"end": 7105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337"
										},
										{
											"begin": 7107,
											"end": 7113,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7114,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 7122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3754,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8332,
											"end": 8353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8369,
											"end": 8387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8362,
											"end": 8392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8446,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A53544F505045442100000000000000000000000000000000"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8464,
											"end": 8482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8148,
											"end": 8488,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3738,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3794,
											"end": 3810,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8695,
											"end": 8697,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8734,
											"end": 8736,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8714,
											"end": 8732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8707,
											"end": 8737,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8807,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61746572207468616E203021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8817,
											"end": 8859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8876,
											"end": 8895,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8876,
											"end": 8895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8493,
											"end": 8901,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 3786,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 577,
											"end": 588,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9090,
											"end": 9111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9149,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9186,
											"end": 9219,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9159,
											"end": 9220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8906,
											"end": 9261,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3870,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3948,
											"end": 3953,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "858"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 3997,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4012,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3970,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4043,
											"end": 4067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4043,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4115,
											"end": 4127,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4099,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4128,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4099,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4155,
											"end": 4167,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4232,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4244,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4232,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4194,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4373,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4394,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4454,
											"end": 4467,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4450,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4434,
											"end": 4450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 4434,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4434,
											"end": 4467,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9715,
											"end": 9740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9715,
											"end": 9740,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9815,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9776,
											"end": 9815,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9773,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9756,
											"end": 9774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9749,
											"end": 9816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9859,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9825,
											"end": 9859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 9892,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9868,
											"end": 9902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "PUSH",
											"source": 8,
											"value": "24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146"
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4552,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4563,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4577,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4595,
											"end": 4603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4603,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4618,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 4627,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10245,
											"end": 10300,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10245,
											"end": 10300,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10227,
											"end": 10301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10200,
											"end": 10218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10575,
											"end": 10630,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10575,
											"end": 10630,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10667,
											"end": 10722,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10667,
											"end": 10722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10667,
											"end": 10722,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10355,
											"end": 10772,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 660,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 605,
											"end": 660,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 427,
											"end": 667,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1308,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1455,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1405,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1308,
											"end": 1654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1804,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1809,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1774,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1872,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 1914,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1881,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 1972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 2008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2034,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 1981,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2117,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2132,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2084,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2190,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2149,
											"end": 2181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2191,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2143,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 2269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2890,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2891,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2816,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2719,
											"end": 2915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 3220,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2920,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 2994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3037,
											"end": 3046,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3047,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3020,
											"end": 3052,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3017,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 3088,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3088,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3637,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3225,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3356,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 3321,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3418,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3451,
											"end": 3456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3427,
											"end": 3504,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3993,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4010,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4025,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3975,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4065,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4046,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 4046,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4075,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 4081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5691,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5564,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5635,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5620,
											"end": 5623,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5616,
											"end": 5636,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5646,
											"end": 5661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5685,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5781,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5781,
											"end": 5818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5798,
											"end": 5816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5798,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5696,
											"end": 5824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 7164,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 6947,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7003,
											"end": 7135,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7067,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7052,
											"end": 7055,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7048,
											"end": 7068,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7120,
											"end": 7124,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7125,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7003,
											"end": 7135,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 7003,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7158,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7149,
											"end": 7158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 7164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7294,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7169,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7265,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7252,
											"end": 7288,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7252,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7252,
											"end": 7288,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7268,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7268,
											"end": 7286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7299,
											"end": 7426,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7299,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7360,
											"end": 7370,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7355,
											"end": 7358,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7351,
											"end": 7371,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7381,
											"end": 7396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7419,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7412,
											"end": 7413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7420,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7954,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 7786,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7868,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7859,
											"end": 7868,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7907,
											"end": 7922,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7901,
											"end": 7923,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7901,
											"end": 7923,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7877,
											"end": 7948,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 7928,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8143,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7959,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8029,
											"end": 8035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 8084,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8061,
											"end": 8068,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8057,
											"end": 8080,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8085,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8050,
											"end": 8102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8100,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8102,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8050,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8121,
											"end": 8137,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7959,
											"end": 8143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9481,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9266,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9334,
											"end": 9368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9368,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9404,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9417,
											"end": 9452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9417,
											"end": 9452,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9475,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9414,
											"end": 9475,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9455,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9455,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9455,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 10048,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 9913,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9952,
											"end": 9955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9973,
											"end": 9990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9970,
											"end": 10013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9993,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10041,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10029,
											"end": 10042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 10048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"DIFFICULTY_INTERVAL()": "109cf399",
							"MATURITY()": "8e12c0cd",
							"addRewards(uint256)": "beceed39",
							"batchWithdrawCREDI(uint256[])": "bc854352",
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStake(uint256)": "ce325bf8",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"owner()": "8da5cb5b",
							"pending_payments()": "8f4729b7",
							"renounceOwnership()": "715018a6",
							"stake(uint96,uint256)": "d93c04a0",
							"stop()": "07da68f5",
							"stopped()": "75f12b21",
							"total_staked()": "af7568dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCREDI(uint256,uint256)": "ac00500f",
							"withdrawRewards(address,uint256)": "d6ef7af0",
							"xCREDI()": "b109beec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credi_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xcredi_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_DIFFICULTY_INTERVAL\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CREDIWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURITY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stake_ids\",\"type\":\"uint256[]\"}],\"name\":\"batchWithdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xCREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ModuleX.sol\":\"ModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ModuleX.sol\":{\"keccak256\":\"0x11e84be27cfb1efbdbc3949dc4e9474112418aafdc3b4e3ad1d7a8c897a5415a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71bac5a9904bce80d03ef2250e35bb64368b53116713e8165c41b729523cebe0\",\"dweb:/ipfs/QmbZqimmjz4tYBabLTbBoAAedSHW5WxqBvBKWefJC2yHyV\"]},\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 847,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stopped",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 866,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)844_storage)"
							},
							{
								"astId": 869,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes_count",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 872,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "total_staked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 875,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "pending_payments",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)844_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ModuleX.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)844_storage"
							},
							"t_struct(StakeDetails)844_storage": {
								"encoding": "inplace",
								"label": "struct ModuleX.StakeDetails",
								"members": [
									{
										"astId": 837,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 839,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 841,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "stake_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 843,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "reward_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IModuleX.sol": {
				"IModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"stake(uint96,uint256)": "d93c04a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IModuleX.sol\":\"IModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xe488182db68cc6c3f36721122793f9ae18c0121b496f81fcf04db3a920cdd305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a131102987d248464278c0095139c9fa869966455db5d1002311216f61cd1e\",\"dweb:/ipfs/Qmf4Em7XiH35WNu8oyemuhzegDEPvJ7827zo9U4cM7zbNU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 821,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/ModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/ModuleX.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IModuleX": [
							1613
						],
						"ModuleX": [
							1565
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 316,
							"src": "115:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 780,
							"src": "173:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IModuleX.sol",
							"file": "./interface/IModuleX.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1566,
							"sourceUnit": 1614,
							"src": "240:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IModuleX",
										"nameLocations": [
											"298:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1613,
										"src": "298:8:8"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "298:8:8"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"308:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:8"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:8"
								}
							],
							"canonicalName": "ModuleX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1565,
							"linearizedBaseContracts": [
								1565,
								147,
								809,
								1613
							],
							"name": "ModuleX",
							"nameLocation": "287:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 835,
									"libraryName": {
										"id": 832,
										"name": "SafeERC20",
										"nameLocations": [
											"331:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "331:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "325:27:8",
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"345:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "345:6:8"
										},
										"referencedDeclaration": 315,
										"src": "345:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ModuleX.StakeDetails",
									"id": 844,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "404:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "396:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "427:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "420:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 838,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "451:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "446:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "479:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "474:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "367:12:8",
									"nodeType": "StructDefinition",
									"scope": 1565,
									"src": "360:140:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f12b21",
									"id": 847,
									"mutability": "mutable",
									"name": "stopped",
									"nameLocation": "520:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "508:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 845,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "508:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e12c0cd",
									"id": 850,
									"mutability": "constant",
									"name": "MATURITY",
									"nameLocation": "566:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "543:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 848,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "543:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "577:11:8",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10800_by_1",
											"typeString": "int_const 10800"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 853,
									"mutability": "immutable",
									"name": "DIFFICULTY",
									"nameLocation": "631:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "608:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "608:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "644:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "109cf399",
									"id": 855,
									"mutability": "immutable",
									"name": "DIFFICULTY_INTERVAL",
									"nameLocation": "697:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "675:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "675:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 858,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "747:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "723:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 857,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 856,
											"name": "IERC20",
											"nameLocations": [
												"723:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "723:6:8"
										},
										"referencedDeclaration": 315,
										"src": "723:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b109beec",
									"id": 861,
									"mutability": "immutable",
									"name": "xCREDI",
									"nameLocation": "783:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "759:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 860,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 859,
											"name": "IERC20",
											"nameLocations": [
												"759:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "759:6:8"
										},
										"referencedDeclaration": 315,
										"src": "759:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "841:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "802:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
										"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
									},
									"typeName": {
										"id": 865,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 862,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "811:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "802:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
											"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 864,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 863,
												"name": "StakeDetails",
												"nameLocations": [
													"819:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "819:12:8"
											},
											"referencedDeclaration": 844,
											"src": "819:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
												"typeString": "struct ModuleX.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 869,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "867:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "854:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "854:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 868,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "882:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "af7568dd",
									"id": 872,
									"mutability": "mutable",
									"name": "total_staked",
									"nameLocation": "902:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "890:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 870,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "890:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 871,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "917:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f4729b7",
									"id": 875,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "937:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1565,
									"src": "925:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 873,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "925:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 874,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "956:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 879,
									"name": "RewardAdded",
									"nameLocation": "972:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "989:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "984:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "984:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:13:8"
									},
									"src": "966:31:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337",
									"id": 885,
									"name": "RewardWithdrawn",
									"nameLocation": "1009:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1041:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1025:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1050:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1045:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:33:8"
									},
									"src": "1003:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146",
									"id": 897,
									"name": "Staked",
									"nameLocation": "1070:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1093:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1077:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1104:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1099:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1121:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1114:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 890,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1136:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1131:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1131:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1155:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1150:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1150:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:94:8"
									},
									"src": "1064:107:8"
								},
								{
									"anonymous": false,
									"eventSelector": "03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c",
									"id": 903,
									"name": "CREDIWithdrawn",
									"nameLocation": "1183:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1203:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1198:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1198:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1218:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "1213:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:28:8"
									},
									"src": "1177:49:8"
								},
								{
									"anonymous": false,
									"eventSelector": "67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19",
									"id": 907,
									"name": "RewardPaid",
									"nameLocation": "1238:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1254:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1249:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1249:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:15:8"
									},
									"src": "1232:32:8"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "1317:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 912,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "1336:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1347:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1336:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 915,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "1352:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 916,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1363:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1352:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1336:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1377:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															},
															"value": "ModuleX:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1328:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1328:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1328:77:8"
											},
											{
												"id": 922,
												"nodeType": "PlaceholderStatement",
												"src": "1416:1:8"
											}
										]
									},
									"id": 924,
									"name": "validate_stake",
									"nameLocation": "1281:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1301:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1296:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1296:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:15:8"
									},
									"src": "1272:153:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "1560:175:8",
										"statements": [
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 939,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1572:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 941,
																"name": "_credi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "1587:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 940,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1580:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1580:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1572:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "1572:27:8"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 945,
														"name": "xCREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "1610:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 947,
																"name": "_xcredi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1626:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 946,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1619:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1619:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1610:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "1610:29:8"
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 951,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1650:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 952,
														"name": "_DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "1672:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1650:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1650:42:8"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 955,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "1703:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 956,
														"name": "_DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1716:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1703:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "1703:24:8"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 935,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1541:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 937,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 934,
												"name": "Ownable",
												"nameLocations": [
													"1533:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1533:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1533:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "_credi_addr",
												"nameLocation": "1453:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1445:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_xcredi_addr",
												"nameLocation": "1474:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1466:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_DIFFICULTY",
												"nameLocation": "1493:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1488:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1488:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "_DIFFICULTY_INTERVAL",
												"nameLocation": "1511:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1506:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:88:8"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:0:8"
									},
									"scope": 1565,
									"src": "1433:302:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1572
									],
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "1810:40:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "1836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1828:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 965,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1828:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 964,
												"id": 969,
												"nodeType": "Return",
												"src": "1821:21:8"
											}
										]
									},
									"functionSelector": "d46149a2",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "1756:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:2:8"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1796:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:9:8"
									},
									"scope": 1565,
									"src": "1747:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1577
									],
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1922:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1948:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1940:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 976,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1940:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 980,
												"nodeType": "Return",
												"src": "1933:22:8"
											}
										]
									},
									"functionSelector": "7c2fdeb5",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "1867:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1883:2:8"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:9:8"
									},
									"scope": 1565,
									"src": "1858:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1582
									],
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "2030:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 987,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2048:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2063:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2048:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 986,
												"id": 990,
												"nodeType": "Return",
												"src": "2041:23:8"
											}
										]
									},
									"functionSelector": "b5fa91fe",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "1980:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:2:8"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2019:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2019:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:6:8"
									},
									"scope": 1565,
									"src": "1971:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "2282:193:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1008,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "2315:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1010,
																"indexExpression": {
																	"id": 1009,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "2322:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2315:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2332:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2315:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1012,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "2352:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1014,
																"indexExpression": {
																	"id": 1013,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "2359:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2352:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2369:8:8",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "2352:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1016,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "2392:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"id": 1017,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "2399:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2392:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2409:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "2392:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1020,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "2436:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1022,
																"indexExpression": {
																	"id": 1021,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "2443:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2436:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2453:13:8",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "2436:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1024,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2300:167:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint96_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint96,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1025,
												"nodeType": "Return",
												"src": "2293:174:8"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 997,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 994,
													"src": "2137:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 996,
												"name": "validate_stake",
												"nameLocations": [
													"2122:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 924,
												"src": "2122:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2122:24:8"
										}
									],
									"name": "getStake",
									"nameLocation": "2089:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2103:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "2098:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2098:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:15:8"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2189:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "2181:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2210:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "2205:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2205:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2234:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "2229:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2229:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "2262:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "2257:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:106:8"
									},
									"scope": 1565,
									"src": "2080:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2537:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1034,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2562:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2568:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2562:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2555:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1032,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2555:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2555:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1037,
												"nodeType": "Return",
												"src": "2548:30:8"
											}
										]
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "2492:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2500:2:8"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2524:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1029,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2524:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2523:8:8"
									},
									"scope": 1565,
									"src": "2483:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1594
									],
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2669:825:8",
										"statements": [
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "SCALE_FACTOR",
														"nameLocation": "2686:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "2681:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1046,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2681:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2701:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2681:24:8"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "curr_total",
														"nameLocation": "2721:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "2716:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2716:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2734:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1053,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2749:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2716:45:8"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "low_d",
														"nameLocation": "2777:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "2772:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1056,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2772:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "2785:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1059,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2798:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2785:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2772:45:8"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "high_d",
														"nameLocation": "2833:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1154,
														"src": "2828:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2828:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1067,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "curr_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "2842:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1065,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "2853:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2842:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2828:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1068,
														"name": "low_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "2886:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1069,
														"name": "high_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "2895:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2886:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "3004:483:8",
													"statements": [
														{
															"assignments": [
																1080
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1080,
																	"mutability": "mutable",
																	"name": "low_r",
																	"nameLocation": "3024:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1152,
																	"src": "3019:10:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1079,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3019:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1097,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1081,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "3032:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1084,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1082,
																									"name": "low_d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1057,
																									"src": "3047:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1083,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3055:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3047:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1085,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3046:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1086,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "3058:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3046:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1088,
																					"name": "total_staked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "3080:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3046:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3045:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3032:61:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1092,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "3095:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1093,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "3103:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3095:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3094:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3032:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3019:95:8"
														},
														{
															"assignments": [
																1099
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1099,
																	"mutability": "mutable",
																	"name": "high_r",
																	"nameLocation": "3134:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1152,
																	"src": "3129:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1098,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3129:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1113,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1100,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "3143:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1101,
																					"name": "curr_total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1051,
																					"src": "3157:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1104,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1102,
																						"name": "high_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1063,
																						"src": "3170:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1103,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "3177:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3170:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3157:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1106,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3156:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3143:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1108,
																				"name": "high_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1063,
																				"src": "3199:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1109,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "3208:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3199:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1111,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3198:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3143:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3129:90:8"
														},
														{
															"assignments": [
																1115
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1115,
																	"mutability": "mutable",
																	"name": "middle_r",
																	"nameLocation": "3239:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1152,
																	"src": "3234:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1114,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3234:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3250:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3234:17:8"
														},
														{
															"body": {
																"id": 1141,
																"nodeType": "Block",
																"src": "3318:96:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1130,
																				"name": "middle_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "3337:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1131,
																						"name": "SCALE_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1047,
																						"src": "3349:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1132,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "3362:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3349:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1136,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1134,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1119,
																								"src": "3383:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1135,
																								"name": "DIFFICULTY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 853,
																								"src": "3387:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3383:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1137,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3382:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3349:49:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3337:61:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1140,
																		"nodeType": "ExpressionStatement",
																		"src": "3337:61:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1124,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "3288:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1125,
																	"name": "high_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "3292:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3288:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1142,
															"initializationExpression": {
																"assignments": [
																	1119
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1119,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3275:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1142,
																		"src": "3270:6:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1118,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3270:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1123,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1120,
																		"name": "low_d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "3277:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3285:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3277:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3270:16:8"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3300:3:8",
																	"subExpression": {
																		"id": 1127,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "3300:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1129,
																"nodeType": "ExpressionStatement",
																"src": "3300:3:8"
															},
															"nodeType": "ForStatement",
															"src": "3266:148:8"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1143,
																					"name": "low_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "3436:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1144,
																					"name": "middle_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1115,
																					"src": "3444:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3436:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1146,
																				"name": "high_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "3455:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3436:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1148,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3435:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1149,
																	"name": "SCALE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "3463:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3435:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1045,
															"id": 1151,
															"nodeType": "Return",
															"src": "3428:47:8"
														}
													]
												},
												"id": 1153,
												"nodeType": "IfStatement",
												"src": "2883:604:8",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "2912:67:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1071,
																	"name": "stake_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "2934:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1072,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1057,
																				"src": "2948:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1073,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "2956:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2948:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2947:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2934:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1045,
															"id": 1077,
															"nodeType": "Return",
															"src": "2927:40:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2603:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2624:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2619:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2619:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:19:8"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2658:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2658:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:6:8"
									},
									"scope": 1565,
									"src": "2594:900:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1587
									],
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "3560:71:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1160,
															"name": "total_staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3578:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1161,
															"name": "DIFFICULTY_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3591:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3578:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1163,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "3613:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3578:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1165,
												"nodeType": "Return",
												"src": "3571:52:8"
											}
										]
									},
									"functionSelector": "b6baffe3",
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "3511:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3524:2:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3549:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3549:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:6:8"
									},
									"scope": 1565,
									"src": "3502:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "3727:900:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3746:8:8",
															"subExpression": {
																"id": 1179,
																"name": "stopped",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3747:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a53544f5050454421",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3756:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															},
															"value": "ModuleX:STOPPED!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae6e0d54110718e95446f0f4e86565c7e5f169a2d3f15682ce13c35e6dce1a0a",
																"typeString": "literal_string \"ModuleX:STOPPED!\""
															}
														],
														"id": 1178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3738:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3738:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "3738:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1185,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "3794:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3809:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3794:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3812:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															},
															"value": "ModuleX:Stake amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3786:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3786:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3786:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "lock_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "3878:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1193,
																"name": "MATURITY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "3893:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3878:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3903:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															},
															"value": "ModuleX:Use longer lock_period!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3870:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3870:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "3870:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1201,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "3971:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3971:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3993:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1565",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1565",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3985:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1203,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3985:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3985:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1207,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "4000:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1198,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3948:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3954:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3948:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3948:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "3948:65:8"
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "4032:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "4025:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1210,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "4025:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1212,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "4043:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4043:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1214,
														"name": "lock_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "4056:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "4043:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4025:42:8"
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4083:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "4078:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1217,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4078:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"id": 1220,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "4115:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1219,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "4099:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4099:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4078:50:8"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "stake_id",
														"nameLocation": "4144:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "4139:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4139:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"id": 1225,
													"name": "stakes_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 869,
													"src": "4155:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4139:28:8"
											},
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1227,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "4178:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
															}
														},
														"id": 1229,
														"indexExpression": {
															"id": 1228,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "4185:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4178:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
															"typeString": "struct ModuleX.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1231,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4232:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4232:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1233,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "4269:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1234,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "4306:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1235,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "4348:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1230,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4197:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$844_storage_ptr_$",
																"typeString": "type(struct ModuleX.StakeDetails storage pointer)"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4225:5:8",
															"4259:8:8",
															"4292:12:8",
															"4333:13:8"
														],
														"names": [
															"owner",
															"maturity",
															"stake_amount",
															"reward_amount"
														],
														"nodeType": "FunctionCall",
														"src": "4197:176:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_memory_ptr",
															"typeString": "struct ModuleX.StakeDetails memory"
														}
													},
													"src": "4178:195:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "4178:195:8"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "4394:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1240,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "4410:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4394:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "4394:28:8"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "4434:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1244,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "4454:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4434:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "4434:33:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1248,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4490:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4490:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "4504:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1251,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "4514:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1252,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "4524:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1253,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "4538:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "4483:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint96,uint256,uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4483:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "EmitStatement",
												"src": "4478:74:8"
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4563:14:8",
													"subExpression": {
														"id": 1256,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "4563:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "4563:14:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1259,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "4595:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1260,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "4605:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1261,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4594:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1262,
												"nodeType": "Return",
												"src": "4588:31:8"
											}
										]
									},
									"functionSelector": "d93c04a0",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3648:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "3661:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3654:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1168,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3654:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3679:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3674:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3674:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3653:39:8"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3710:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3710:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3716:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3716:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:12:8"
									},
									"scope": 1565,
									"src": "3639:988:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "4718:586:8",
										"statements": [
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "4750:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1336,
														"src": "4729:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1275,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1274,
																"name": "StakeDetails",
																"nameLocations": [
																	"4729:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "4729:12:8"
															},
															"referencedDeclaration": 844,
															"src": "4729:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"baseExpression": {
														"id": 1277,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "4760:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1279,
													"indexExpression": {
														"id": 1278,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "4767:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4760:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4729:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1282,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "4795:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4803:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "4795:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1284,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4812:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4812:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4795:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4826:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															},
															"value": "ModuleX:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4787:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4787:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "4787:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1291,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "4879:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4879:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1293,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "4893:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4901:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4893:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4879:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4911:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															},
															"value": "ModuleX:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4871:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4871:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "4871:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1300,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "4976:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4984:13:8",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "4976:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5000:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4976:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5003:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															},
															"value": "ModuleX:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4968:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4968:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "4968:62:8"
											},
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "5046:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1336,
														"src": "5041:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1307,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5041:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"expression": {
														"id": 1309,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "5062:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails storage pointer"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5070:13:8",
													"memberName": "reward_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 843,
													"src": "5062:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5041:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1315,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5114:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5114:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "5128:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1312,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5094:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5101:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5094:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "5094:48:8"
											},
											{
												"expression": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1320,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "5158:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1321,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "5178:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5158:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "5158:33:8"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1324,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "5202:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5210:13:8",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5202:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5226:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5202:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "5202:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1331,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "5255:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "5244:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5244:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "EmitStatement",
												"src": "5239:25:8"
											},
											{
												"expression": {
													"id": 1334,
													"name": "reward_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1308,
													"src": "5283:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1335,
												"nodeType": "Return",
												"src": "5276:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1269,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "4689:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "validate_stake",
												"nameLocations": [
													"4674:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 924,
												"src": "4674:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4674:24:8"
										}
									],
									"name": "claim",
									"nameLocation": "4644:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "4655:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "4650:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4650:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4649:15:8"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "4707:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4707:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4706:6:8"
									},
									"scope": 1565,
									"src": "4635:669:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "5412:456:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "5432:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5441:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5432:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5444:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5423:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "5423:65:8"
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5520:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "5499:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1357,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1356,
																"name": "StakeDetails",
																"nameLocations": [
																	"5499:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "5499:12:8"
															},
															"referencedDeclaration": 844,
															"src": "5499:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"baseExpression": {
														"id": 1359,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5530:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1361,
													"indexExpression": {
														"id": 1360,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "5537:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5530:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5499:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1364,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "5565:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5565:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1366,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "5579:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5587:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "5579:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "5565:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5597:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															},
															"value": "ModuleX:Burnt tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															}
														],
														"id": 1363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5557:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "5557:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "5641:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1374,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "5651:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5659:12:8",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "5651:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5641:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5673:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5633:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5633:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "5633:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5736:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5736:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1385,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "5750:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																	"typeString": "struct ModuleX.StakeDetails storage pointer"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5758:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "5750:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1380,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "5717:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5723:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5717:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5717:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "5717:54:8"
											},
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1389,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "5782:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5790:12:8",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "5782:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1392,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "5806:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5782:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "5782:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1396,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "5843:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "5853:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1395,
														"name": "CREDIWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "5828:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5828:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "EmitStatement",
												"src": "5823:37:8"
											}
										]
									},
									"functionSelector": "ac00500f",
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1343,
												"name": "onlyOwner",
												"nameLocations": [
													"5372:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5372:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5372:9:8"
										},
										{
											"arguments": [
												{
													"id": 1346,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1339,
													"src": "5397:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1345,
												"name": "validate_stake",
												"nameLocations": [
													"5382:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 924,
												"src": "5382:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5382:24:8"
										}
									],
									"name": "withdrawCREDI",
									"nameLocation": "5321:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "5340:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "5335:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5335:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5355:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "5350:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5350:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:28:8"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5412:0:8"
									},
									"scope": 1565,
									"src": "5312:556:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "5955:633:8",
										"statements": [
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "total_amount",
														"nameLocation": "5971:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1487,
														"src": "5966:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5966:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"hexValue": "30",
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5986:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5966:21:8"
											},
											{
												"body": {
													"id": 1470,
													"nodeType": "Block",
													"src": "6050:407:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1425,
																				"name": "stake_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1404,
																				"src": "6073:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1427,
																			"indexExpression": {
																				"id": 1426,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1414,
																				"src": "6083:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6073:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1428,
																			"name": "stakes_count",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "6088:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6073:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6102:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		},
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		}
																	],
																	"id": 1424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6065:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6065:65:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "6065:65:8"
														},
														{
															"assignments": [
																1435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1435,
																	"mutability": "mutable",
																	"name": "details",
																	"nameLocation": "6166:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1470,
																	"src": "6145:28:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails"
																	},
																	"typeName": {
																		"id": 1434,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1433,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"6145:12:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 844,
																			"src": "6145:12:8"
																		},
																		"referencedDeclaration": 844,
																		"src": "6145:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1441,
															"initialValue": {
																"baseExpression": {
																	"id": 1436,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "6176:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1440,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1437,
																		"name": "stake_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "6183:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1439,
																	"indexExpression": {
																		"id": 1438,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1414,
																		"src": "6193:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6183:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6176:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6145:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1443,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "6219:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6219:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1445,
																				"name": "details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "6233:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																					"typeString": "struct ModuleX.StakeDetails storage pointer"
																				}
																			},
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6241:8:8",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 839,
																			"src": "6233:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "6219:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6251:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		},
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		}
																	],
																	"id": 1442,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6211:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1450,
															"nodeType": "ExpressionStatement",
															"src": "6211:64:8"
														},
														{
															"expression": {
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1451,
																	"name": "total_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "6290:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1452,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "6306:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6314:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6306:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6290:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1455,
															"nodeType": "ExpressionStatement",
															"src": "6290:36:8"
														},
														{
															"expression": {
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1456,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1435,
																		"src": "6341:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6349:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6341:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6364:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6341:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1461,
															"nodeType": "ExpressionStatement",
															"src": "6341:24:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1463,
																			"name": "stake_ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "6410:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1465,
																		"indexExpression": {
																			"id": 1464,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "6420:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6410:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1466,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "6424:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																				"typeString": "struct ModuleX.StakeDetails storage pointer"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6432:12:8",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "6424:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1462,
																	"name": "CREDIWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "6395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6395:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1469,
															"nodeType": "EmitStatement",
															"src": "6390:55:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1417,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "6014:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1418,
															"name": "stake_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "6018:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6028:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6018:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6014:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1471,
												"initializationExpression": {
													"assignments": [
														1414
													],
													"declarations": [
														{
															"constant": false,
															"id": 1414,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6007:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1471,
															"src": "6002:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1413,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6002:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1416,
													"initialValue": {
														"hexValue": "30",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6011:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6002:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6036:3:8",
														"subExpression": {
															"id": 1421,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "6036:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1423,
													"nodeType": "ExpressionStatement",
													"src": "6036:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5998:459:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1473,
																"name": "total_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "6475:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6490:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6475:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6493:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															},
															"value": "ModuleX:Total amount is 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															}
														],
														"id": 1472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6467:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "6467:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1482,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6553:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6553:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "total_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6567:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1479,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6534:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6540:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6534:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "6534:46:8"
											}
										]
									},
									"functionSelector": "bc854352",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1407,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1406,
												"name": "onlyOwner",
												"nameLocations": [
													"5940:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5940:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5940:9:8"
										}
									],
									"name": "batchWithdrawCREDI",
									"nameLocation": "5885:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "stake_ids",
												"nameLocation": "5920:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "5904:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1402,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5904:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1403,
													"nodeType": "ArrayTypeName",
													"src": "5904:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5903:27:8"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5955:0:8"
									},
									"scope": 1565,
									"src": "5876:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "6644:190:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1494,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "6664:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6673:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6664:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6676:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6655:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6655:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "6655:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1503,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6755:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6755:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1507,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6777:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1565",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1565",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6769:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6769:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6769:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6784:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1500,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "6731:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6738:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6731:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6731:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "6731:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "6819:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6807:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6807:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "EmitStatement",
												"src": "6802:24:8"
											}
										]
									},
									"functionSelector": "beceed39",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "6605:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6621:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "6616:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6616:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:13:8"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6644:0:8"
									},
									"scope": 1565,
									"src": "6596:238:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "6916:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1531,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6960:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleX_$1565",
																					"typeString": "contract ModuleX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleX_$1565",
																					"typeString": "contract ModuleX"
																				}
																			],
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6952:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1529,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6952:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6952:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1527,
																		"name": "xCREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "6935:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6942:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "6935:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6935:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1534,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "6970:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1535,
																	"name": "pending_payments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6979:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6970:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6935:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6997:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6927:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6927:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "6927:102:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7060:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7064:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1541,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7040:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7047:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "7040:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7040:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "7040:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1549,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "7103:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "7107:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1548,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "7087:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "EmitStatement",
												"src": "7082:32:8"
											}
										]
									},
									"functionSelector": "d6ef7af0",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1523,
												"name": "onlyOwner",
												"nameLocations": [
													"6901:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6901:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6901:9:8"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6851:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6875:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6867:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6884:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "6879:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6879:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6866:25:8"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:0:8"
									},
									"scope": 1565,
									"src": "6842:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "7170:33:8",
										"statements": [
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1559,
														"name": "stopped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "7181:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7191:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7181:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "7181:14:8"
											}
										]
									},
									"functionSelector": "07da68f5",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1556,
												"name": "onlyOwner",
												"nameLocations": [
													"7155:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7155:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7155:9:8"
										}
									],
									"name": "stop",
									"nameLocation": "7139:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7143:2:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7170:0:8"
									},
									"scope": 1565,
									"src": "7130:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "278:6930:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								879,
								885,
								897,
								903,
								907
							]
						}
					],
					"src": "33:7177:8"
				},
				"id": 8
			},
			"contracts/interface/IModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IModuleX.sol",
					"exportedSymbols": {
						"IModuleX": [
							1613
						]
					},
					"id": 1614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1613,
							"linearizedBaseContracts": [
								1613
							],
							"name": "IModuleX",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46149a2",
									"id": 1572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "97:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1613,
									"src": "88:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c2fdeb5",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "163:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "204:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:9"
									},
									"scope": 1613,
									"src": "154:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5fa91fe",
									"id": 1582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "230:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:9"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "269:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:9"
									},
									"scope": 1613,
									"src": "221:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6baffe3",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "296:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:9"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "334:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:6:9"
									},
									"scope": 1613,
									"src": "287:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "361:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "382:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "377:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:19:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "413:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:6:9"
									},
									"scope": 1613,
									"src": "352:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d93c04a0",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "436:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "449:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "442:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1595,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "467:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "462:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:33:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "497:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "492:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "512:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "507:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "507:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:35:9"
									},
									"scope": 1613,
									"src": "427:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "379607f5",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "544:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "555:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "550:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "550:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:15:9"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "587:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "582:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "582:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:20:9"
									},
									"scope": 1613,
									"src": "535:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1614,
							"src": "61:546:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:576:9"
				},
				"id": 9
			}
		}
	}
}