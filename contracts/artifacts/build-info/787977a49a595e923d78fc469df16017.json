{
	"id": "787977a49a595e923d78fc469df16017",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./interface/IModuleX.sol\";\r\n\r\ncontract ModuleX is IModuleX, Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakeDetails\r\n    {\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n    }\r\n\r\n    uint96 constant public MATURITY = 180 minutes; // 180 days;\r\n    uint constant private DIFFICULTY = 11; // Initial DIFFICULTY\r\n    uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18; // CREDI decimals = 18\r\n    IERC20 immutable public CREDI;// = IERC20(0x0A5BCe3bc08608C9B4A4d88bA216fe203DA74861);\r\n    IERC20 immutable public xCREDI;// = IERC20(0x582d54dB27e6a0D6759F3203677575D8E91d01cf);\r\n    \r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    uint public total_staked = 0;\r\n    uint public pending_payments = 0;\r\n\r\n    event RewardAdded(uint amount);\r\n    event RewardWithdrawn(address indexed to, uint amount);\r\n    event Staked(address indexed user, uint stake_id, uint96 maturity, uint stake_amount, uint rewards_amount);\r\n    event CREDIWithdrawn(uint stake_id, uint amount);\r\n    event RewardPaid(uint stake_id);\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _credi_addr, address _xcredi_addr) Ownable(_msgSender())\r\n    { \r\n        CREDI = IERC20(_credi_addr);\r\n        xCREDI = IERC20(_xcredi_addr);\r\n    }\r\n    \r\n    function getCREDIAddress() external view returns(address)\r\n    {\r\n        return address(CREDI);\r\n    }\r\n\r\n    function getxCREDIAddress() external view returns(address)\r\n    {\r\n        return address(xCREDI);\r\n    }\r\n\r\n    function getStakesCount() external view returns(uint)\r\n    {\r\n        return stakes_count - 1;\r\n    }\r\n\r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (\r\n        address owner,\r\n        uint maturity,\r\n        uint stake_amount,\r\n        uint reward_amount)\r\n    {\r\n        return (\r\n            stakes[stake_id].owner,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount);\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function calculateReward(uint stake_amount) public view returns(uint)\r\n    { \r\n        uint SCALE_FACTOR = 1e18;\r\n        uint curr_total = total_staked + stake_amount;\r\n        uint low_d = total_staked/DIFFICULTY_INTERVAL;\r\n        uint high_d = curr_total/DIFFICULTY_INTERVAL;\r\n        if(low_d == high_d)\r\n        {\r\n            return stake_amount/(low_d + DIFFICULTY);\r\n        }\r\n        else \r\n        {\r\n            uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY);\r\n            uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY);\r\n            uint middle_r = 0;\r\n            for(uint i=low_d + 1; i < high_d; i++)\r\n            {\r\n                middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY);\r\n            }\r\n            return (low_r + middle_r + high_r)/SCALE_FACTOR;\r\n        }\r\n    }\r\n\r\n    function getDifficulty() external view returns(uint)\r\n    {\r\n        return total_staked/DIFFICULTY_INTERVAL + DIFFICULTY;\r\n    }\r\n\r\n    function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)\r\n    {\r\n        require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\");\r\n        require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\");\r\n        CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint96 maturity = time_now() + lock_period;\r\n        uint reward_amount = calculateReward(stake_amount);\r\n        uint stake_id = stakes_count;\r\n        stakes[stake_id] = StakeDetails({\r\n            owner: _msgSender(),\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount\r\n        });\r\n        \r\n        total_staked += stake_amount; \r\n        pending_payments += reward_amount;\r\n        emit Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount);\r\n        stakes_count++;\r\n        return(stake_id, reward_amount);\r\n    }\r\n\r\n    function claim(uint stake_id) external validate_stake(stake_id) returns(uint)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\");\r\n        require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"ModuleX:Nothing to claim\");\r\n        uint reward_amount = details.reward_amount;\r\n        xCREDI.safeTransfer(_msgSender(), reward_amount);     \r\n        pending_payments -= reward_amount;\r\n        details.reward_amount = 0; \r\n        emit RewardPaid(stake_id); \r\n        return reward_amount;\r\n    }\r\n\r\n    function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\"); \r\n        require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\"); \r\n        CREDI.safeTransfer(_msgSender(), details.stake_amount);\r\n        details.stake_amount -= amount;\r\n        emit CREDIWithdrawn(stake_id, amount);\r\n    }\r\n\r\n    function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner\r\n    {\r\n        uint total_amount = 0;\r\n        for(uint i = 0; i < stake_ids.length; i++)\r\n        {\r\n            require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n            StakeDetails storage details = stakes[stake_ids[i]];\r\n            require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\");\r\n            total_amount += details.stake_amount;\r\n            details.stake_amount = 0;          \r\n            emit CREDIWithdrawn(stake_ids[i], details.stake_amount);\r\n        }\r\n        require(total_amount > 0, \"ModuleX:Total amount is 0!\"); \r\n        CREDI.safeTransfer(_msgSender(), total_amount);\r\n    }\r\n\r\n    function addRewards(uint amount) external \r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        xCREDI.safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(amount);\r\n    }\r\n\r\n    function withdrawRewards(address to, uint amount) external onlyOwner\r\n    {\r\n        require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\");\r\n        xCREDI.safeTransfer(to, amount);\r\n        emit RewardWithdrawn(to, amount);\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IModuleX\r\n{\r\n    function getCREDIAddress() external view returns(address);\r\n\r\n    function getxCREDIAddress() external view returns(address);\r\n\r\n    function getStakesCount() external view returns(uint);\r\n    \r\n    function calculateReward(uint stake_amount) external returns(uint);\r\n\r\n    function stake(uint96 lock_period, uint amount) external returns(uint stake_id, uint xCREDI_reward);\r\n\r\n    function claim(uint stake_id) external returns(uint xCREDI_reward);\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B EXTCALL ISZERO DUP11 RETURN 0xD7 0xC8 0xD7 0xAB 0x24 TLOAD SWAP12 SIGNEXTEND LOG1 0x28 RETURNDATASIZE 0x2B 0xA5 NOT 0xCF 0x21 0xA5 CALL EQ 0xD8 0x2C LOG2 SELFBALANCE PREVRANDAO SSTORE 0xA9 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bf8158af3d7c8d7ab245c9b0ba1283d2ba519cf21a5f114d82ca2474455a98464736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ModuleX.sol": {
				"ModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_credi_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xcredi_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CREDIWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATURITY",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "stake_ids",
									"type": "uint256[]"
								}
							],
							"name": "batchWithdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDifficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maturity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xCREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ModuleX.sol\":278:7062  contract ModuleX is IModuleX, Ownable ... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ModuleX.sol\":998:999  1 */\n  0x01\n    /* \"contracts/ModuleX.sol\":970:999  uint private stakes_count = 1 */\n  0x02\n  sstore\n    /* \"contracts/ModuleX.sol\":1033:1034  0 */\n  0x00\n    /* \"contracts/ModuleX.sol\":1006:1034  uint public total_staked = 0 */\n  0x03\n  sstore\n    /* \"contracts/ModuleX.sol\":1072:1073  0 */\n  0x00\n    /* \"contracts/ModuleX.sol\":1041:1073  uint public pending_payments = 0 */\n  0x04\n  sstore\n    /* \"contracts/ModuleX.sol\":1549:1718  constructor(address _credi_addr, address _xcredi_addr) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ModuleX.sol\":1643:1670  CREDI = IERC20(_credi_addr) */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/ModuleX.sol\":1681:1710  xCREDI = IERC20(_xcredi_addr) */\n  and\n  0xa0\n  mstore\n    /* \"contracts/ModuleX.sol\":278:7062  contract ModuleX is IModuleX, Ownable ... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_18:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_21:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  0x00\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_23:\n    /* \"#utility.yul\":375:415   */\n  tag_24\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_18\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_25\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_18\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_19:\n    /* \"contracts/ModuleX.sol\":278:7062  contract ModuleX is IModuleX, Ownable ... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n  0x00\n  assignImmutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ModuleX.sol\":278:7062  contract ModuleX is IModuleX, Ownable ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb109beec\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xce325bf8\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xce325bf8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd46149a2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd6ef7af0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd93c04a0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0xb109beec\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb5fa91fe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb6baffe3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbc854352\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8e12c0cd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8f4729b7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xac00500f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaf7568dd\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x109cf399\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6db08f25\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7c2fdeb5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ModuleX.sol\":639:697  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n    tag_3:\n      tag_27\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":639:697  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":639:697  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":4570:5239  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_4:\n      tag_27\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":727:756  IERC20 immutable public CREDI */\n    tag_5:\n      tag_36\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:637   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":587:638   */\n      dup2\n      mstore\n        /* \"#utility.yul\":575:577   */\n      0x20\n        /* \"#utility.yul\":560:578   */\n      add\n        /* \"contracts/ModuleX.sol\":727:756  IERC20 immutable public CREDI */\n      tag_29\n        /* \"#utility.yul\":427:644   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/ModuleX.sol\":1841:1946  function getxCREDIAddress() external view returns(address)... */\n    tag_7:\n        /* \"contracts/ModuleX.sol\":1931:1937  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":1841:1946  function getxCREDIAddress() external view returns(address)... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_36)\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n    tag_9:\n      tag_49\n        /* \"contracts/ModuleX.sol\":542:553  180 minutes */\n      0x2a30\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1019:1058   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1001:1059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n      tag_29\n        /* \"#utility.yul\":857:1065   */\n      jump\n        /* \"contracts/ModuleX.sol\":1041:1073  uint public pending_payments = 0 */\n    tag_10:\n      tag_27\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":5247:5803  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_11:\n      tag_40\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":1006:1034  uint public total_staked = 0 */\n    tag_12:\n      tag_27\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":819:849  IERC20 immutable public xCREDI */\n    tag_13:\n      tag_36\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      dup2\n      jump\n        /* \"contracts/ModuleX.sol\":1954:2055  function getStakesCount() external view returns(uint)... */\n    tag_14:\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3485:3614  function getDifficulty() external view returns(uint)... */\n    tag_15:\n      tag_27\n      tag_70\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5811:6523  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_16:\n      tag_40\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":6531:6769  function addRewards(uint amount) external ... */\n    tag_17:\n      tag_40\n      tag_77\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":2063:2458  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_18:\n      tag_79\n      tag_80\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2285:2317   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":2267:2318   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2349:2351   */\n      0x20\n        /* \"#utility.yul\":2334:2352   */\n      dup6\n      add\n        /* \"#utility.yul\":2327:2361   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2377:2395   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2370:2404   */\n      mstore\n        /* \"#utility.yul\":2435:2437   */\n      0x60\n        /* \"#utility.yul\":2420:2438   */\n      dup3\n      add\n        /* \"#utility.yul\":2413:2447   */\n      mstore\n        /* \"#utility.yul\":2254:2257   */\n      0x80\n        /* \"#utility.yul\":2239:2258   */\n      add\n        /* \"contracts/ModuleX.sol\":2063:2458  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      tag_29\n        /* \"#utility.yul\":2036:2453   */\n      jump\n        /* \"contracts/ModuleX.sol\":2577:3477  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_19:\n      tag_27\n      tag_85\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":1730:1833  function getCREDIAddress() external view returns(address)... */\n    tag_20:\n        /* \"contracts/ModuleX.sol\":1819:1824  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":1730:1833  function getCREDIAddress() external view returns(address)... */\n      jump(tag_36)\n        /* \"contracts/ModuleX.sol\":6777:7057  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_21:\n      tag_40\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":3622:4562  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_22:\n      tag_95\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3532:3557   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3588:3590   */\n      0x20\n        /* \"#utility.yul\":3573:3591   */\n      dup4\n      add\n        /* \"#utility.yul\":3566:3600   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3505:3523   */\n      add\n        /* \"contracts/ModuleX.sol\":3622:4562  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      tag_29\n        /* \"#utility.yul\":3358:3606   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_40\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":4570:5239  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_34:\n        /* \"contracts/ModuleX.sol\":4642:4646  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":4624:4632  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1463:1464  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1452:1460  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1452:1464  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1479:1491  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1468:1476  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1468:1491  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n    tag_106:\n        /* \"contracts/ModuleX.sol\":1444:1521  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/ModuleX.sol\":4664:4692  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":4695:4711  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4695:4701  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":4695:4711  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":4730:4743  details.owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":4730:4759  details.owner == _msgSender() */\n      eq\n        /* \"contracts/ModuleX.sol\":4722:4795  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4358:4360   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4722:4795  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4340:4361   */\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x1f\n        /* \"#utility.yul\":4377:4395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4370:4400   */\n      mstore\n        /* \"#utility.yul\":4436:4469   */\n      0x4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200\n        /* \"#utility.yul\":4416:4434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4409:4470   */\n      mstore\n        /* \"#utility.yul\":4487:4505   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4722:4795  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_108\n        /* \"#utility.yul\":4156:4511   */\n      jump\n        /* \"contracts/ModuleX.sol\":4722:4795  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n    tag_113:\n        /* \"contracts/ModuleX.sol\":4828:4844  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2545:2560  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4814:4844  time_now() >= details.maturity */\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":4806:4891  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4718:4720   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4806:4891  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4700:4721   */\n      mstore\n        /* \"#utility.yul\":4757:4759   */\n      0x2a\n        /* \"#utility.yul\":4737:4755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4730:4760   */\n      mstore\n        /* \"#utility.yul\":4796:4830   */\n      0x4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420\n        /* \"#utility.yul\":4776:4794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4769:4831   */\n      mstore\n      shl(0xb0, 0x7065726d697474656421)\n        /* \"#utility.yul\":4847:4865   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4840:4880   */\n      mstore\n        /* \"#utility.yul\":4897:4916   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":4806:4891  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_108\n        /* \"#utility.yul\":4516:4922   */\n      jump\n        /* \"contracts/ModuleX.sol\":4806:4891  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n    tag_118:\n        /* \"contracts/ModuleX.sol\":4935:4936  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":4911:4918  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4911:4932  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":4911:4936  details.reward_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":4903:4965  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5129:5131   */\n      0x20\n        /* \"contracts/ModuleX.sol\":4903:4965  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5111:5132   */\n      mstore\n        /* \"#utility.yul\":5168:5170   */\n      0x18\n        /* \"#utility.yul\":5148:5166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5141:5171   */\n      mstore\n        /* \"#utility.yul\":5207:5233   */\n      0x4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":5187:5205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5180:5234   */\n      mstore\n        /* \"#utility.yul\":5251:5269   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":4903:4965  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_108\n        /* \"#utility.yul\":4927:5275   */\n      jump\n        /* \"contracts/ModuleX.sol\":4903:4965  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n    tag_121:\n        /* \"contracts/ModuleX.sol\":4997:5018  details.reward_amount */\n      0x02\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5029:5077  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      tag_124\n        /* \"contracts/ModuleX.sol\":5029:5035  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5029:5048  xCREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":4997:5018  details.reward_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5029:5048  xCREDI.safeTransfer */\n      tag_126\n        /* \"contracts/ModuleX.sol\":5029:5077  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ModuleX.sol\":5113:5126  reward_amount */\n      dup1\n        /* \"contracts/ModuleX.sol\":5093:5109  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":5093:5126  pending_payments -= reward_amount */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5161:5162  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5137:5158  details.reward_amount */\n      0x02\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":5137:5162  details.reward_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":5179:5199  RewardPaid(stake_id) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5179:5199  RewardPaid(stake_id) */\n      0x67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":5179:5199  RewardPaid(stake_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5218:5231  reward_amount */\n      swap5\n        /* \"contracts/ModuleX.sol\":4570:5239  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":5247:5803  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/ModuleX.sol\":5332:5340  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1463:1464  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1452:1460  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1452:1464  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1479:1491  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1468:1476  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1468:1491  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n    tag_141:\n        /* \"contracts/ModuleX.sol\":1444:1521  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_142:\n        /* \"contracts/ModuleX.sol\":5376:5377  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5367:5373  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5367:5377  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":5358:5423  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_147\n      jump\t// in\n    tag_145:\n        /* \"contracts/ModuleX.sol\":5434:5462  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":5465:5481  stakes[stake_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":5465:5471  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":5465:5481  stakes[stake_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ModuleX.sol\":5514:5530  details.maturity */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2545:2560  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5500:5530  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5492:5556  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6157:6159   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5492:5556  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6139:6160   */\n      mstore\n        /* \"#utility.yul\":6196:6198   */\n      0x15\n        /* \"#utility.yul\":6176:6194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6169:6199   */\n      mstore\n      shl(0x58, 0x4d6f64756c65583a4275726e7420746f6b656e7321)\n        /* \"#utility.yul\":6215:6233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6208:6259   */\n      mstore\n        /* \"#utility.yul\":6276:6294   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5492:5556  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_108\n        /* \"#utility.yul\":5955:6300   */\n      jump\n        /* \"contracts/ModuleX.sol\":5492:5556  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_149:\n        /* \"contracts/ModuleX.sol\":5586:5593  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":5586:5606  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5576:5582  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5576:5606  amount <= details.stake_amount */\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5568:5640  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6507:6509   */\n      0x20\n        /* \"contracts/ModuleX.sol\":5568:5640  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6489:6510   */\n      mstore\n        /* \"#utility.yul\":6546:6548   */\n      0x1d\n        /* \"#utility.yul\":6526:6544   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6519:6549   */\n      mstore\n        /* \"#utility.yul\":6585:6616   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6565:6583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6558:6617   */\n      mstore\n        /* \"#utility.yul\":6634:6652   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":5568:5640  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_108\n        /* \"#utility.yul\":6305:6658   */\n      jump\n        /* \"contracts/ModuleX.sol\":5568:5640  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n    tag_152:\n        /* \"contracts/ModuleX.sol\":5652:5706  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":5685:5705  details.stake_amount */\n      0x01\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":5652:5657  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":5652:5670  CREDI.safeTransfer */\n      and\n      swap2\n        /* \"contracts/ModuleX.sol\":5652:5706  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      swap1\n        /* \"contracts/ModuleX.sol\":5652:5670  CREDI.safeTransfer */\n      tag_126\n        /* \"contracts/ModuleX.sol\":5652:5706  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ModuleX.sol\":5741:5747  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5717:5724  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":5717:5737  details.stake_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/ModuleX.sol\":5717:5747  details.stake_amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5763:5795  CREDIWithdrawn(stake_id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3532:3557   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":3588:3590   */\n      0x20\n        /* \"#utility.yul\":3573:3591   */\n      dup2\n      add\n        /* \"#utility.yul\":3566:3600   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":5763:5795  CREDIWithdrawn(stake_id, amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n      swap2\n        /* \"#utility.yul\":3505:3523   */\n      add\n        /* \"contracts/ModuleX.sol\":5763:5795  CREDIWithdrawn(stake_id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5347:5803  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/ModuleX.sol\":5247:5803  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1954:2055  function getStakesCount() external view returns(uint)... */\n    tag_67:\n        /* \"contracts/ModuleX.sol\":2002:2006  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2046:2047  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":2031:2043  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":2031:2047  stakes_count - 1 */\n      tag_160\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_160:\n        /* \"contracts/ModuleX.sol\":2024:2047  return stakes_count - 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1954:2055  function getStakesCount() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3485:3614  function getDifficulty() external view returns(uint)... */\n    tag_70:\n        /* \"contracts/ModuleX.sol\":3532:3536  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":608:610  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3561:3573  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":3561:3593  total_staked/DIFFICULTY_INTERVAL */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/ModuleX.sol\":3561:3606  total_staked/DIFFICULTY_INTERVAL + DIFFICULTY */\n      tag_160\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n        /* \"contracts/ModuleX.sol\":5811:6523  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/ModuleX.sol\":5901:5918  uint total_amount */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":5933:6392  for(uint i = 0; i < stake_ids.length; i++)... */\n    tag_169:\n        /* \"contracts/ModuleX.sol\":5949:5969  i < stake_ids.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/ModuleX.sol\":5933:6392  for(uint i = 0; i < stake_ids.length; i++)... */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/ModuleX.sol\":6023:6035  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":6008:6017  stake_ids */\n      dup5\n      dup5\n        /* \"contracts/ModuleX.sol\":6018:6019  i */\n      dup4\n        /* \"contracts/ModuleX.sol\":6008:6020  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6008:6035  stake_ids[i] < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":6000:6065  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_175:\n        /* \"contracts/ModuleX.sol\":6080:6108  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":6111:6117  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":6111:6131  stakes[stake_ids[i]] */\n      0x00\n        /* \"contracts/ModuleX.sol\":6118:6127  stake_ids */\n      dup7\n      dup7\n        /* \"contracts/ModuleX.sol\":6128:6129  i */\n      dup6\n        /* \"contracts/ModuleX.sol\":6118:6130  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_174\n      jump\t// in\n    tag_178:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6111:6131  stakes[stake_ids[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":6168:6184  details.maturity */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":6111:6131  stakes[stake_ids[i]] */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":6168:6184  details.maturity */\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"contracts/ModuleX.sol\":2545:2560  block.timestamp */\n      timestamp\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6154:6184  time_now() <= details.maturity */\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":6146:6210  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6157:6159   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6146:6210  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6139:6160   */\n      mstore\n        /* \"#utility.yul\":6196:6198   */\n      0x15\n        /* \"#utility.yul\":6176:6194   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6169:6199   */\n      mstore\n      shl(0x58, 0x4d6f64756c65583a4275726e7420746f6b656e7321)\n        /* \"#utility.yul\":6215:6233   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6208:6259   */\n      mstore\n        /* \"#utility.yul\":6276:6294   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6146:6210  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_108\n        /* \"#utility.yul\":5955:6300   */\n      jump\n        /* \"contracts/ModuleX.sol\":6146:6210  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n    tag_180:\n        /* \"contracts/ModuleX.sol\":6241:6261  details.stake_amount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6225:6261  total_amount += details.stake_amount */\n      tag_182\n      swap1\n      dup5\n      tag_165\n      jump\t// in\n    tag_182:\n        /* \"contracts/ModuleX.sol\":6299:6300  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6276:6296  details.stake_amount */\n      0x01\n      dup4\n      add\n        /* \"contracts/ModuleX.sol\":6276:6300  details.stake_amount = 0 */\n      sstore\n        /* \"contracts/ModuleX.sol\":6225:6261  total_amount += details.stake_amount */\n      swap3\n      pop\n        /* \"contracts/ModuleX.sol\":6330:6380  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX.sol\":6345:6354  stake_ids */\n      dup6\n      dup6\n        /* \"contracts/ModuleX.sol\":6355:6356  i */\n      dup5\n        /* \"contracts/ModuleX.sol\":6345:6357  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_184\n      tag_174\n      jump\t// in\n    tag_184:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6359:6366  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":6359:6379  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6330:6380  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      mload(0x40)\n      tag_185\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":3532:3557   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":3588:3590   */\n      0x20\n        /* \"#utility.yul\":3573:3591   */\n      dup3\n      add\n        /* \"#utility.yul\":3566:3600   */\n      mstore\n        /* \"#utility.yul\":3520:3522   */\n      0x40\n        /* \"#utility.yul\":3505:3523   */\n      add\n      swap1\n        /* \"#utility.yul\":3358:3606   */\n      jump\n        /* \"contracts/ModuleX.sol\":6330:6380  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"contracts/ModuleX.sol\":5971:5974  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":5933:6392  for(uint i = 0; i < stake_ids.length; i++)... */\n      jump(tag_169)\n    tag_170:\n      pop\n        /* \"contracts/ModuleX.sol\":6425:6426  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6410:6422  total_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6410:6426  total_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6402:6457  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7349:7351   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6402:6457  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7331:7352   */\n      mstore\n        /* \"#utility.yul\":7388:7390   */\n      0x1a\n        /* \"#utility.yul\":7368:7386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7361:7391   */\n      mstore\n        /* \"#utility.yul\":7427:7455   */\n      0x4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000\n        /* \"#utility.yul\":7407:7425   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7400:7456   */\n      mstore\n        /* \"#utility.yul\":7473:7491   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6402:6457  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_108\n        /* \"#utility.yul\":7147:7497   */\n      jump\n        /* \"contracts/ModuleX.sol\":6402:6457  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n    tag_186:\n        /* \"contracts/ModuleX.sol\":6469:6515  CREDI.safeTransfer(_msgSender(), total_amount) */\n      tag_189\n        /* \"contracts/ModuleX.sol\":6469:6474  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6469:6487  CREDI.safeTransfer */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6502:6514  total_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":6469:6487  CREDI.safeTransfer */\n      tag_126\n        /* \"contracts/ModuleX.sol\":6469:6515  CREDI.safeTransfer(_msgSender(), total_amount) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/ModuleX.sol\":5890:6523  {... */\n      pop\n        /* \"contracts/ModuleX.sol\":5811:6523  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6531:6769  function addRewards(uint amount) external ... */\n    tag_78:\n        /* \"contracts/ModuleX.sol\":6608:6609  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6599:6605  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6599:6609  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6590:6655  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_147\n      jump\t// in\n    tag_192:\n        /* \"contracts/ModuleX.sol\":6666:6726  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_194\n        /* \"contracts/ModuleX.sol\":6666:6672  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6666:6689  xCREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":6712:6716  this */\n      address\n        /* \"contracts/ModuleX.sol\":6719:6725  amount */\n      dup5\n        /* \"contracts/ModuleX.sol\":6666:6689  xCREDI.safeTransferFrom */\n      tag_196\n        /* \"contracts/ModuleX.sol\":6666:6726  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/ModuleX.sol\":6742:6761  RewardAdded(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6742:6761  RewardAdded(amount) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/ModuleX.sol\":6742:6761  RewardAdded(amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":6531:6769  function addRewards(uint amount) external ... */\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2063:2458  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_81:\n        /* \"contracts/ModuleX.sol\":2164:2177  address owner */\n      0x00\n        /* \"contracts/ModuleX.sol\":2188:2201  uint maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":2212:2229  uint stake_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2240:2258  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2120:2128  stake_id */\n      dup5\n        /* \"contracts/ModuleX.sol\":1463:1464  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1452:1460  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1452:1464  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1479:1491  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1468:1476  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1468:1491  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1452:1491  stake_id > 0 && stake_id < stakes_count */\n    tag_199:\n        /* \"contracts/ModuleX.sol\":1444:1521  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_200:\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2298:2314  stakes[stake_id] */\n      0x00\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2298:2304  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2298:2314  stakes[stake_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/ModuleX.sol\":2298:2320  stakes[stake_id].owner */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":2375:2404  stakes[stake_id].stake_amount */\n      swap2\n      dup2\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":2419:2449  stakes[stake_id].reward_amount */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":2298:2320  stakes[stake_id].owner */\n      dup4\n      and\n      swap4\n      shl(0xa0, 0x01)\n        /* \"contracts/ModuleX.sol\":2335:2360  stakes[stake_id].maturity */\n      swap1\n      swap4\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n        /* \"contracts/ModuleX.sol\":2063:2458  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2577:3477  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_86:\n        /* \"contracts/ModuleX.sol\":2641:2645  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2664:2681  uint SCALE_FACTOR */\n      0x00\n        /* \"contracts/ModuleX.sol\":2684:2688  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ModuleX.sol\":2664:2688  uint SCALE_FACTOR = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2699:2714  uint curr_total */\n      0x00\n        /* \"contracts/ModuleX.sol\":2732:2744  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":2717:2729  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2717:2744  total_staked + stake_amount */\n      tag_204\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_204:\n        /* \"contracts/ModuleX.sol\":2699:2744  uint curr_total = total_staked + stake_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2755:2765  uint low_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":2768:2780  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2768:2800  total_staked/DIFFICULTY_INTERVAL */\n      tag_205\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_205:\n        /* \"contracts/ModuleX.sol\":2755:2800  uint low_d = total_staked/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2811:2822  uint high_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":2825:2855  curr_total/DIFFICULTY_INTERVAL */\n      tag_206\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":2825:2835  curr_total */\n      dup5\n        /* \"contracts/ModuleX.sol\":2825:2855  curr_total/DIFFICULTY_INTERVAL */\n      tag_163\n      jump\t// in\n    tag_206:\n        /* \"contracts/ModuleX.sol\":2811:2855  uint high_d = curr_total/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2878:2884  high_d */\n      dup1\n        /* \"contracts/ModuleX.sol\":2869:2874  low_d */\n      dup3\n        /* \"contracts/ModuleX.sol\":2869:2884  low_d == high_d */\n      sub\n        /* \"contracts/ModuleX.sol\":2866:3470  if(low_d == high_d)... */\n      tag_207\n      jumpi\n        /* \"contracts/ModuleX.sol\":2931:2949  low_d + DIFFICULTY */\n      tag_208\n        /* \"contracts/ModuleX.sol\":608:610  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":2931:2936  low_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":2931:2949  low_d + DIFFICULTY */\n      tag_165\n      jump\t// in\n    tag_208:\n        /* \"contracts/ModuleX.sol\":2917:2950  stake_amount/(low_d + DIFFICULTY) */\n      tag_209\n      swap1\n        /* \"contracts/ModuleX.sol\":2917:2929  stake_amount */\n      dup8\n        /* \"contracts/ModuleX.sol\":2917:2950  stake_amount/(low_d + DIFFICULTY) */\n      tag_163\n      jump\t// in\n    tag_209:\n        /* \"contracts/ModuleX.sol\":2910:2950  return stake_amount/(low_d + DIFFICULTY) */\n      swap7\n        /* \"contracts/ModuleX.sol\":2577:3477  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2866:3470  if(low_d == high_d)... */\n    tag_207:\n        /* \"contracts/ModuleX.sol\":3002:3012  uint low_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3078:3096  low_d + DIFFICULTY */\n      tag_211\n        /* \"contracts/ModuleX.sol\":608:610  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3078:3083  low_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3078:3096  low_d + DIFFICULTY */\n      tag_165\n      jump\t// in\n    tag_211:\n        /* \"contracts/ModuleX.sol\":3063:3075  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3030:3039  low_d + 1 */\n      tag_212\n        /* \"contracts/ModuleX.sol\":3030:3035  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3038:3039  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3030:3039  low_d + 1 */\n      tag_165\n      jump\t// in\n    tag_212:\n        /* \"contracts/ModuleX.sol\":3029:3060  (low_d + 1)*DIFFICULTY_INTERVAL */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"contracts/ModuleX.sol\":3029:3075  (low_d + 1)*DIFFICULTY_INTERVAL - total_staked */\n      tag_215\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_215:\n        /* \"contracts/ModuleX.sol\":3015:3076  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_216\n      swap1\n        /* \"contracts/ModuleX.sol\":3015:3027  SCALE_FACTOR */\n      dup8\n        /* \"contracts/ModuleX.sol\":3015:3076  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_214\n      jump\t// in\n    tag_216:\n        /* \"contracts/ModuleX.sol\":3015:3097  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      tag_217\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_217:\n        /* \"contracts/ModuleX.sol\":3002:3097  uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3112:3123  uint high_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3182:3201  high_d + DIFFICULTY */\n      tag_218\n        /* \"contracts/ModuleX.sol\":608:610  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3182:3188  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3182:3201  high_d + DIFFICULTY */\n      tag_165\n      jump\t// in\n    tag_218:\n        /* \"contracts/ModuleX.sol\":3153:3179  high_d*DIFFICULTY_INTERVAL */\n      tag_219\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3153:3159  high_d */\n      dup6\n        /* \"contracts/ModuleX.sol\":3153:3179  high_d*DIFFICULTY_INTERVAL */\n      tag_214\n      jump\t// in\n    tag_219:\n        /* \"contracts/ModuleX.sol\":3140:3179  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_220\n      swap1\n        /* \"contracts/ModuleX.sol\":3140:3150  curr_total */\n      dup8\n        /* \"contracts/ModuleX.sol\":3140:3179  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_128\n      jump\t// in\n    tag_220:\n        /* \"contracts/ModuleX.sol\":3126:3180  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_221\n      swap1\n        /* \"contracts/ModuleX.sol\":3126:3138  SCALE_FACTOR */\n      dup9\n        /* \"contracts/ModuleX.sol\":3126:3180  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_214\n      jump\t// in\n    tag_221:\n        /* \"contracts/ModuleX.sol\":3126:3202  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      tag_222\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_222:\n        /* \"contracts/ModuleX.sol\":3112:3202  uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3217:3230  uint middle_r */\n      0x00\n      dup1\n        /* \"contracts/ModuleX.sol\":3260:3269  low_d + 1 */\n      tag_226\n        /* \"contracts/ModuleX.sol\":3260:3265  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3268:3269  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3260:3269  low_d + 1 */\n      tag_165\n      jump\t// in\n    tag_226:\n        /* \"contracts/ModuleX.sol\":3253:3269  uint i=low_d + 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3249:3397  for(uint i=low_d + 1; i < high_d; i++)... */\n    tag_223:\n        /* \"contracts/ModuleX.sol\":3275:3281  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3271:3272  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":3271:3281  i < high_d */\n      lt\n        /* \"contracts/ModuleX.sol\":3249:3397  for(uint i=low_d + 1; i < high_d; i++)... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/ModuleX.sol\":3366:3380  i + DIFFICULTY */\n      tag_227\n        /* \"contracts/ModuleX.sol\":608:610  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3366:3367  i */\n      dup3\n        /* \"contracts/ModuleX.sol\":3366:3380  i + DIFFICULTY */\n      tag_165\n      jump\t// in\n    tag_227:\n        /* \"contracts/ModuleX.sol\":3332:3364  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_228\n        /* \"contracts/ModuleX.sol\":682:697  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3332:3344  SCALE_FACTOR */\n      dup11\n        /* \"contracts/ModuleX.sol\":3332:3364  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_214\n      jump\t// in\n    tag_228:\n        /* \"contracts/ModuleX.sol\":3332:3381  SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_229\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_229:\n        /* \"contracts/ModuleX.sol\":3320:3381  middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_230\n      swap1\n      dup4\n      tag_165\n      jump\t// in\n    tag_230:\n      swap2\n      pop\n        /* \"contracts/ModuleX.sol\":3283:3286  i++ */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":3249:3397  for(uint i=low_d + 1; i < high_d; i++)... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"contracts/ModuleX.sol\":3446:3458  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX.sol\":3438:3444  high_r */\n      dup3\n        /* \"contracts/ModuleX.sol\":3419:3435  low_r + middle_r */\n      tag_231\n        /* \"contracts/ModuleX.sol\":3427:3435  middle_r */\n      dup4\n        /* \"contracts/ModuleX.sol\":3419:3424  low_r */\n      dup7\n        /* \"contracts/ModuleX.sol\":3419:3435  low_r + middle_r */\n      tag_165\n      jump\t// in\n    tag_231:\n        /* \"contracts/ModuleX.sol\":3419:3444  low_r + middle_r + high_r */\n      tag_232\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_232:\n        /* \"contracts/ModuleX.sol\":3418:3458  (low_r + middle_r + high_r)/SCALE_FACTOR */\n      tag_233\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_233:\n        /* \"contracts/ModuleX.sol\":3411:3458  return (low_r + middle_r + high_r)/SCALE_FACTOR */\n      swap10\n        /* \"contracts/ModuleX.sol\":2577:3477  function calculateReward(uint stake_amount) public view returns(uint)... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6777:7057  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/ModuleX.sol\":6914:6930  pending_payments */\n      sload(0x04)\n        /* \"contracts/ModuleX.sol\":6905:6930  amount + pending_payments */\n      tag_238\n      swap1\n        /* \"contracts/ModuleX.sol\":6905:6911  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6905:6930  amount + pending_payments */\n      tag_165\n      jump\t// in\n    tag_238:\n        /* \"contracts/ModuleX.sol\":6870:6901  xCREDI.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":6895:6899  this */\n      address\n        /* \"contracts/ModuleX.sol\":6870:6901  xCREDI.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:638   */\n      mstore\n        /* \"contracts/ModuleX.sol\":6870:6876  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6870:6886  xCREDI.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"contracts/ModuleX.sol\":6870:6901  xCREDI.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/ModuleX.sol\":6870:6930  xCREDI.balanceOf(address(this)) >= amount + pending_payments */\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":6862:6964  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6507:6509   */\n      0x20\n        /* \"contracts/ModuleX.sol\":6862:6964  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6489:6510   */\n      mstore\n        /* \"#utility.yul\":6546:6548   */\n      0x1d\n        /* \"#utility.yul\":6526:6544   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6519:6549   */\n      mstore\n        /* \"#utility.yul\":6585:6616   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":6565:6583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6558:6617   */\n      mstore\n        /* \"#utility.yul\":6634:6652   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":6862:6964  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_108\n        /* \"#utility.yul\":6305:6658   */\n      jump\n        /* \"contracts/ModuleX.sol\":6862:6964  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n    tag_244:\n        /* \"contracts/ModuleX.sol\":6975:7006  xCREDI.safeTransfer(to, amount) */\n      tag_246\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":6975:6981  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":6975:6994  xCREDI.safeTransfer */\n      and\n        /* \"contracts/ModuleX.sol\":6995:6997  to */\n      dup4\n        /* \"contracts/ModuleX.sol\":6999:7005  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":6975:6994  xCREDI.safeTransfer */\n      tag_126\n        /* \"contracts/ModuleX.sol\":6975:7006  xCREDI.safeTransfer(to, amount) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/ModuleX.sol\":7038:7040  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":7022:7049  RewardWithdrawn(to, amount) */\n      and\n      0x1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337\n        /* \"contracts/ModuleX.sol\":7042:7048  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":7022:7049  RewardWithdrawn(to, amount) */\n      mload(0x40)\n      tag_247\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/ModuleX.sol\":7022:7049  RewardWithdrawn(to, amount) */\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":6777:7057  function withdrawRewards(address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3622:4562  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_98:\n        /* \"contracts/ModuleX.sol\":3693:3697  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3699:3703  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3744:3745  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":3729:3741  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":3729:3745  stake_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":3721:3794  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8066:8068   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3721:3794  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8048:8069   */\n      mstore\n        /* \"#utility.yul\":8105:8107   */\n      0x2c\n        /* \"#utility.yul\":8085:8103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8078:8108   */\n      mstore\n        /* \"#utility.yul\":8144:8178   */\n      0x4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":8124:8142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8117:8179   */\n      mstore\n      shl(0xa0, 0x61746572207468616e203021)\n        /* \"#utility.yul\":8195:8213   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8188:8230   */\n      mstore\n        /* \"#utility.yul\":8247:8266   */\n      0x84\n      add\n        /* \"contracts/ModuleX.sol\":3721:3794  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_108\n        /* \"#utility.yul\":7864:8272   */\n      jump\n        /* \"contracts/ModuleX.sol\":3721:3794  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n    tag_249:\n        /* \"contracts/ModuleX.sol\":542:553  180 minutes */\n      0x2a30\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3813:3836  lock_period >= MATURITY */\n      dup6\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":3805:3872  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8479:8481   */\n      0x20\n        /* \"contracts/ModuleX.sol\":3805:3872  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8461:8482   */\n      mstore\n        /* \"#utility.yul\":8518:8520   */\n      0x1f\n        /* \"#utility.yul\":8498:8516   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8491:8521   */\n      mstore\n        /* \"#utility.yul\":8557:8590   */\n      0x4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100\n        /* \"#utility.yul\":8537:8555   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8530:8591   */\n      mstore\n        /* \"#utility.yul\":8608:8626   */\n      0x64\n      add\n        /* \"contracts/ModuleX.sol\":3805:3872  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_108\n        /* \"#utility.yul\":8277:8632   */\n      jump\n        /* \"contracts/ModuleX.sol\":3805:3872  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n    tag_252:\n        /* \"contracts/ModuleX.sol\":3883:3948  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_255\n        /* \"contracts/ModuleX.sol\":3883:3888  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":3883:3905  CREDI.safeTransferFrom */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/ModuleX.sol\":3928:3932  this */\n      address\n        /* \"contracts/ModuleX.sol\":3935:3947  stake_amount */\n      dup7\n        /* \"contracts/ModuleX.sol\":3883:3905  CREDI.safeTransferFrom */\n      tag_196\n        /* \"contracts/ModuleX.sol\":3883:3948  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/ModuleX.sol\":3960:3975  uint96 maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":3978:4002  time_now() + lock_period */\n      tag_258\n        /* \"contracts/ModuleX.sol\":3991:4002  lock_period */\n      dup6\n        /* \"contracts/ModuleX.sol\":2545:2560  block.timestamp */\n      timestamp\n        /* \"contracts/ModuleX.sol\":3978:4002  time_now() + lock_period */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/ModuleX.sol\":3960:4002  uint96 maturity = time_now() + lock_period */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4013:4031  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":4034:4063  calculateReward(stake_amount) */\n      tag_260\n        /* \"contracts/ModuleX.sol\":4050:4062  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":4034:4049  calculateReward */\n      tag_86\n        /* \"contracts/ModuleX.sol\":4034:4063  calculateReward(stake_amount) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/ModuleX.sol\":4013:4063  uint reward_amount = calculateReward(stake_amount) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4074:4087  uint stake_id */\n      0x00\n        /* \"contracts/ModuleX.sol\":4090:4102  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":4074:4102  uint stake_id = stakes_count */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4132:4308  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ModuleX.sol\":4167:4179  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/ModuleX.sol\":4167:4179  _msgSender() */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ModuleX.sol\":4132:4308  StakeDetails({... */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0x60\n      swap5\n      dup6\n      add\n      dup9\n      swap1\n      mstore\n      0x00\n        /* \"contracts/ModuleX.sol\":4113:4129  stakes[stake_id] */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ModuleX.sol\":4113:4119  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":4113:4129  stakes[stake_id] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/ModuleX.sol\":4113:4308  stakes[stake_id] = StakeDetails({... */\n      dup9\n      mload\n      swap5\n      dup10\n      add\n      mload\n      swap5\n      swap1\n      swap7\n      and\n      shl(0xa0, 0x01)\n      swap5\n      swap1\n      swap6\n      and\n      swap4\n      swap1\n      swap4\n      mul\n      swap4\n      swap1\n      swap4\n      or\n      dup5\n      sstore\n      dup6\n      add\n      mload\n      swap1\n      dup4\n      add\n      sstore\n      swap3\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/ModuleX.sol\":4329:4341  total_staked */\n      0x03\n        /* \"contracts/ModuleX.sol\":4329:4357  total_staked += stake_amount */\n      dup1\n      sload\n        /* \"contracts/ModuleX.sol\":4132:4308  StakeDetails({... */\n      dup9\n      swap3\n      swap1\n        /* \"contracts/ModuleX.sol\":4329:4357  total_staked += stake_amount */\n      tag_262\n      swap1\n        /* \"contracts/ModuleX.sol\":4132:4308  StakeDetails({... */\n      dup5\n      swap1\n        /* \"contracts/ModuleX.sol\":4329:4357  total_staked += stake_amount */\n      tag_165\n      jump\t// in\n    tag_262:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4389:4402  reward_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":4369:4385  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":4369:4402  pending_payments += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_263\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_263:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":4418:4487  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9086:9111   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":9147:9186   */\n      dup6\n      and\n        /* \"#utility.yul\":9142:9144   */\n      0x20\n        /* \"#utility.yul\":9127:9145   */\n      dup3\n      add\n        /* \"#utility.yul\":9120:9187   */\n      mstore\n        /* \"#utility.yul\":9203:9221   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9196:9230   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":9261:9263   */\n      0x60\n        /* \"#utility.yul\":9246:9264   */\n      dup2\n      add\n        /* \"#utility.yul\":9239:9273   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/ModuleX.sol\":4418:4487  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap2\n        /* \"contracts/ModuleX.sol\":4418:4487  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0x24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9073:9076   */\n      0x80\n        /* \"contracts/ModuleX.sol\":4418:4487  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      add\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":4498:4510  stakes_count */\n      0x02\n        /* \"contracts/ModuleX.sol\":4498:4512  stakes_count++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/ModuleX.sol\":4498:4510  stakes_count */\n      0x00\n        /* \"contracts/ModuleX.sol\":4498:4512  stakes_count++ */\n      tag_267\n      dup4\n      tag_268\n      jump\t// in\n    tag_267:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4530:4538  stake_id */\n      swap1\n      swap8\n        /* \"contracts/ModuleX.sol\":4540:4553  reward_amount */\n      swap2\n      swap7\n      pop\n        /* \"contracts/ModuleX.sol\":3622:4562  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      swap1\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:638   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_108\n        /* \"#utility.yul\":427:644   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9616:9648   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9598:9649   */\n      mstore\n        /* \"#utility.yul\":9665:9683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9658:9692   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_189\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9571:9589   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:638   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_108\n        /* \"#utility.yul\":427:644   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9923:9955   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9905:9956   */\n      mstore\n        /* \"#utility.yul\":9992:10024   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":9972:9990   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":9965:10025   */\n      mstore\n        /* \"#utility.yul\":10041:10059   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10034:10068   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_290\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9878:9896   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_279\n        /* \"#utility.yul\":9703:10074   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_294:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_296)\n    tag_295:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":605:637   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":587:638   */\n      mstore\n        /* \"#utility.yul\":560:578   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_108\n        /* \"#utility.yul\":427:644   */\n      jump\n        /* \"#utility.yul\":196:422   */\n    tag_33:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":369:392   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:422   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1416   */\n    tag_58:\n        /* \"#utility.yul\":1138:1144   */\n      0x00\n        /* \"#utility.yul\":1146:1152   */\n      0x00\n        /* \"#utility.yul\":1199:1201   */\n      0x40\n        /* \"#utility.yul\":1187:1196   */\n      dup4\n        /* \"#utility.yul\":1178:1185   */\n      dup6\n        /* \"#utility.yul\":1174:1197   */\n      sub\n        /* \"#utility.yul\":1170:1202   */\n      slt\n        /* \"#utility.yul\":1167:1219   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1212:1213   */\n      0x00\n        /* \"#utility.yul\":1205:1217   */\n      revert\n        /* \"#utility.yul\":1167:1219   */\n    tag_309:\n      pop\n      pop\n        /* \"#utility.yul\":1260:1283   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1380:1382   */\n      0x20\n        /* \"#utility.yul\":1365:1383   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1352:1384   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1070:1416   */\n      jump\t// out\n        /* \"#utility.yul\":1421:2031   */\n    tag_74:\n        /* \"#utility.yul\":1507:1513   */\n      0x00\n        /* \"#utility.yul\":1515:1521   */\n      0x00\n        /* \"#utility.yul\":1568:1570   */\n      0x20\n        /* \"#utility.yul\":1556:1565   */\n      dup4\n        /* \"#utility.yul\":1547:1554   */\n      dup6\n        /* \"#utility.yul\":1543:1566   */\n      sub\n        /* \"#utility.yul\":1539:1571   */\n      slt\n        /* \"#utility.yul\":1536:1588   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1584:1585   */\n      0x00\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1574:1586   */\n      revert\n        /* \"#utility.yul\":1536:1588   */\n    tag_311:\n        /* \"#utility.yul\":1624:1633   */\n      dup3\n        /* \"#utility.yul\":1611:1634   */\n      calldataload\n        /* \"#utility.yul\":1657:1675   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1649:1655   */\n      dup2\n        /* \"#utility.yul\":1646:1676   */\n      gt\n        /* \"#utility.yul\":1643:1693   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1643:1693   */\n    tag_312:\n        /* \"#utility.yul\":1712:1734   */\n      dup4\n      add\n        /* \"#utility.yul\":1765:1769   */\n      0x1f\n        /* \"#utility.yul\":1757:1770   */\n      dup2\n      add\n        /* \"#utility.yul\":1753:1780   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1743:1798   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":1794:1795   */\n      0x00\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1784:1796   */\n      revert\n        /* \"#utility.yul\":1743:1798   */\n    tag_313:\n        /* \"#utility.yul\":1834:1836   */\n      dup1\n        /* \"#utility.yul\":1821:1837   */\n      calldataload\n        /* \"#utility.yul\":1860:1878   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1852:1858   */\n      dup2\n        /* \"#utility.yul\":1849:1879   */\n      gt\n        /* \"#utility.yul\":1846:1896   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":1892:1893   */\n      0x00\n        /* \"#utility.yul\":1889:1890   */\n      0x00\n        /* \"#utility.yul\":1882:1894   */\n      revert\n        /* \"#utility.yul\":1846:1896   */\n    tag_314:\n        /* \"#utility.yul\":1945:1952   */\n      dup6\n        /* \"#utility.yul\":1940:1942   */\n      0x20\n        /* \"#utility.yul\":1930:1936   */\n      dup3\n        /* \"#utility.yul\":1927:1928   */\n      0x05\n        /* \"#utility.yul\":1923:1937   */\n      shl\n        /* \"#utility.yul\":1919:1921   */\n      dup5\n        /* \"#utility.yul\":1915:1938   */\n      add\n        /* \"#utility.yul\":1911:1943   */\n      add\n        /* \"#utility.yul\":1908:1953   */\n      gt\n        /* \"#utility.yul\":1905:1970   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1956:1968   */\n      revert\n        /* \"#utility.yul\":1905:1970   */\n    tag_315:\n        /* \"#utility.yul\":1997:1999   */\n      0x20\n        /* \"#utility.yul\":1989:2000   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2019:2025   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1421:2031   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2458:2631   */\n    tag_299:\n        /* \"#utility.yul\":2526:2546   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2575:2606   */\n      dup2\n      and\n        /* \"#utility.yul\":2565:2607   */\n      dup2\n      eq\n        /* \"#utility.yul\":2555:2625   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      0x00\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2555:2625   */\n    tag_318:\n        /* \"#utility.yul\":2458:2631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2636:2936   */\n    tag_93:\n        /* \"#utility.yul\":2704:2710   */\n      0x00\n        /* \"#utility.yul\":2712:2718   */\n      0x00\n        /* \"#utility.yul\":2765:2767   */\n      0x40\n        /* \"#utility.yul\":2753:2762   */\n      dup4\n        /* \"#utility.yul\":2744:2751   */\n      dup6\n        /* \"#utility.yul\":2740:2763   */\n      sub\n        /* \"#utility.yul\":2736:2768   */\n      slt\n        /* \"#utility.yul\":2733:2785   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2781:2782   */\n      0x00\n        /* \"#utility.yul\":2778:2779   */\n      0x00\n        /* \"#utility.yul\":2771:2783   */\n      revert\n        /* \"#utility.yul\":2733:2785   */\n    tag_320:\n        /* \"#utility.yul\":2804:2833   */\n      tag_321\n        /* \"#utility.yul\":2823:2832   */\n      dup4\n        /* \"#utility.yul\":2804:2833   */\n      tag_299\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2794:2833   */\n      swap5\n        /* \"#utility.yul\":2902:2904   */\n      0x20\n        /* \"#utility.yul\":2887:2905   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2874:2906   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2636:2936   */\n      jump\t// out\n        /* \"#utility.yul\":2941:3353   */\n    tag_97:\n        /* \"#utility.yul\":3008:3014   */\n      0x00\n        /* \"#utility.yul\":3016:3022   */\n      0x00\n        /* \"#utility.yul\":3069:3071   */\n      0x40\n        /* \"#utility.yul\":3057:3066   */\n      dup4\n        /* \"#utility.yul\":3048:3055   */\n      dup6\n        /* \"#utility.yul\":3044:3067   */\n      sub\n        /* \"#utility.yul\":3040:3072   */\n      slt\n        /* \"#utility.yul\":3037:3089   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":3085:3086   */\n      0x00\n        /* \"#utility.yul\":3082:3083   */\n      0x00\n        /* \"#utility.yul\":3075:3087   */\n      revert\n        /* \"#utility.yul\":3037:3089   */\n    tag_323:\n        /* \"#utility.yul\":3124:3133   */\n      dup3\n        /* \"#utility.yul\":3111:3134   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":3167:3172   */\n      dup2\n        /* \"#utility.yul\":3163:3201   */\n      and\n        /* \"#utility.yul\":3156:3161   */\n      dup2\n        /* \"#utility.yul\":3153:3202   */\n      eq\n        /* \"#utility.yul\":3143:3220   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":3216:3217   */\n      0x00\n        /* \"#utility.yul\":3213:3214   */\n      0x00\n        /* \"#utility.yul\":3206:3218   */\n      revert\n        /* \"#utility.yul\":3611:3797   */\n    tag_103:\n        /* \"#utility.yul\":3670:3676   */\n      0x00\n        /* \"#utility.yul\":3723:3725   */\n      0x20\n        /* \"#utility.yul\":3711:3720   */\n      dup3\n        /* \"#utility.yul\":3702:3709   */\n      dup5\n        /* \"#utility.yul\":3698:3721   */\n      sub\n        /* \"#utility.yul\":3694:3726   */\n      slt\n        /* \"#utility.yul\":3691:3743   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3739:3740   */\n      0x00\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3729:3741   */\n      revert\n        /* \"#utility.yul\":3691:3743   */\n    tag_327:\n        /* \"#utility.yul\":3762:3791   */\n      tag_328\n        /* \"#utility.yul\":3781:3790   */\n      dup3\n        /* \"#utility.yul\":3762:3791   */\n      tag_299\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3752:3791   */\n      swap4\n        /* \"#utility.yul\":3611:3797   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4151   */\n    tag_109:\n        /* \"#utility.yul\":4004:4006   */\n      0x20\n        /* \"#utility.yul\":3986:4007   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4043:4045   */\n      0x19\n        /* \"#utility.yul\":4023:4041   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4016:4046   */\n      mstore\n        /* \"#utility.yul\":4082:4109   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":4077:4079   */\n      0x40\n        /* \"#utility.yul\":4062:4080   */\n      dup3\n      add\n        /* \"#utility.yul\":4055:4110   */\n      mstore\n        /* \"#utility.yul\":4142:4144   */\n      0x60\n        /* \"#utility.yul\":4127:4145   */\n      add\n      swap1\n        /* \"#utility.yul\":3802:4151   */\n      jump\t// out\n        /* \"#utility.yul\":5280:5407   */\n    tag_300:\n        /* \"#utility.yul\":5341:5351   */\n      0x4e487b71\n        /* \"#utility.yul\":5336:5339   */\n      0xe0\n        /* \"#utility.yul\":5332:5352   */\n      shl\n        /* \"#utility.yul\":5329:5330   */\n      0x00\n        /* \"#utility.yul\":5322:5353   */\n      mstore\n        /* \"#utility.yul\":5372:5376   */\n      0x11\n        /* \"#utility.yul\":5369:5370   */\n      0x04\n        /* \"#utility.yul\":5362:5377   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x24\n        /* \"#utility.yul\":5393:5394   */\n      0x00\n        /* \"#utility.yul\":5386:5401   */\n      revert\n        /* \"#utility.yul\":5412:5540   */\n    tag_128:\n        /* \"#utility.yul\":5479:5488   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5500:5511   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5497:5534   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":5514:5532   */\n      tag_336\n      tag_300\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5412:5540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5545:5950   */\n    tag_147:\n        /* \"#utility.yul\":5747:5749   */\n      0x20\n        /* \"#utility.yul\":5729:5750   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5786:5788   */\n      0x29\n        /* \"#utility.yul\":5766:5784   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5759:5789   */\n      mstore\n        /* \"#utility.yul\":5825:5859   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":5820:5822   */\n      0x40\n        /* \"#utility.yul\":5805:5823   */\n      dup3\n      add\n        /* \"#utility.yul\":5798:5860   */\n      mstore\n      shl(0xb8, 0x68616e207a65726f21)\n        /* \"#utility.yul\":5891:5893   */\n      0x60\n        /* \"#utility.yul\":5876:5894   */\n      dup3\n      add\n        /* \"#utility.yul\":5869:5908   */\n      mstore\n        /* \"#utility.yul\":5940:5943   */\n      0x80\n        /* \"#utility.yul\":5925:5944   */\n      add\n      swap1\n        /* \"#utility.yul\":5545:5950   */\n      jump\t// out\n        /* \"#utility.yul\":6663:6880   */\n    tag_163:\n        /* \"#utility.yul\":6703:6704   */\n      0x00\n        /* \"#utility.yul\":6729:6730   */\n      dup3\n        /* \"#utility.yul\":6719:6851   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6773:6783   */\n      0x4e487b71\n        /* \"#utility.yul\":6768:6771   */\n      0xe0\n        /* \"#utility.yul\":6764:6784   */\n      shl\n        /* \"#utility.yul\":6761:6762   */\n      0x00\n        /* \"#utility.yul\":6754:6785   */\n      mstore\n        /* \"#utility.yul\":6808:6812   */\n      0x12\n        /* \"#utility.yul\":6805:6806   */\n      0x04\n        /* \"#utility.yul\":6798:6813   */\n      mstore\n        /* \"#utility.yul\":6836:6840   */\n      0x24\n        /* \"#utility.yul\":6833:6834   */\n      0x00\n        /* \"#utility.yul\":6826:6841   */\n      revert\n        /* \"#utility.yul\":6719:6851   */\n    tag_341:\n      pop\n        /* \"#utility.yul\":6865:6874   */\n      div\n      swap1\n        /* \"#utility.yul\":6663:6880   */\n      jump\t// out\n        /* \"#utility.yul\":6885:7010   */\n    tag_165:\n        /* \"#utility.yul\":6950:6959   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6971:6981   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6968:7004   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":6984:7002   */\n      tag_336\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":7015:7142   */\n    tag_174:\n        /* \"#utility.yul\":7076:7086   */\n      0x4e487b71\n        /* \"#utility.yul\":7071:7074   */\n      0xe0\n        /* \"#utility.yul\":7067:7087   */\n      shl\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7057:7088   */\n      mstore\n        /* \"#utility.yul\":7107:7111   */\n      0x32\n        /* \"#utility.yul\":7104:7105   */\n      0x04\n        /* \"#utility.yul\":7097:7112   */\n      mstore\n        /* \"#utility.yul\":7131:7135   */\n      0x24\n        /* \"#utility.yul\":7128:7129   */\n      0x00\n        /* \"#utility.yul\":7121:7136   */\n      revert\n        /* \"#utility.yul\":7502:7670   */\n    tag_214:\n        /* \"#utility.yul\":7575:7584   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7606:7615   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7623:7638   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7617:7639   */\n      dup5\n      eq\n        /* \"#utility.yul\":7603:7640   */\n      or\n        /* \"#utility.yul\":7593:7664   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":7644:7662   */\n      tag_336\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":7675:7859   */\n    tag_243:\n        /* \"#utility.yul\":7745:7751   */\n      0x00\n        /* \"#utility.yul\":7798:7800   */\n      0x20\n        /* \"#utility.yul\":7786:7795   */\n      dup3\n        /* \"#utility.yul\":7777:7784   */\n      dup5\n        /* \"#utility.yul\":7773:7796   */\n      sub\n        /* \"#utility.yul\":7769:7801   */\n      slt\n        /* \"#utility.yul\":7766:7818   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":7814:7815   */\n      0x00\n        /* \"#utility.yul\":7811:7812   */\n      0x00\n        /* \"#utility.yul\":7804:7816   */\n      revert\n        /* \"#utility.yul\":7766:7818   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":7837:7853   */\n      mload\n      swap2\n        /* \"#utility.yul\":7675:7859   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8637:8852   */\n    tag_259:\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8705:8739   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":8741:8775   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":8701:8776   */\n      add\n      swap1\n        /* \"#utility.yul\":8788:8823   */\n      dup2\n      gt\n        /* \"#utility.yul\":8785:8846   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8826:8844   */\n      tag_336\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":9284:9419   */\n    tag_268:\n        /* \"#utility.yul\":9323:9326   */\n      0x00\n        /* \"#utility.yul\":9344:9361   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9341:9384   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":9364:9382   */\n      tag_360\n      tag_300\n      jump\t// in\n    tag_360:\n      pop\n        /* \"#utility.yul\":9411:9412   */\n      0x01\n        /* \"#utility.yul\":9400:9413   */\n      add\n      swap1\n        /* \"#utility.yul\":9284:9419   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc6a0dbfd54a91a954691f255e21f1aa800468410fd1d8c1399ba6716541bfbc64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 129,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:10",
										"nodeType": "YulBlock",
										"src": "0:699:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "294:195:10",
													"nodeType": "YulBlock",
													"src": "294:195:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:10",
																"nodeType": "YulBlock",
																"src": "340:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:10",
																					"nodeType": "YulLiteral",
																					"src": "349:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:10",
																					"nodeType": "YulLiteral",
																					"src": "352:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:10"
																			},
																			"nativeSrc": "342:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:10"
																		},
																		"nativeSrc": "342:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:10"
																		},
																		"nativeSrc": "311:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:10",
																		"nodeType": "YulLiteral",
																		"src": "336:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:10"
																},
																"nativeSrc": "307:32:10",
																"nodeType": "YulFunctionCall",
																"src": "307:32:10"
															},
															"nativeSrc": "304:52:10",
															"nodeType": "YulIf",
															"src": "304:52:10"
														},
														{
															"nativeSrc": "365:50:10",
															"nodeType": "YulAssignment",
															"src": "365:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:10"
																},
																"nativeSrc": "375:40:10",
																"nodeType": "YulFunctionCall",
																"src": "375:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:10"
																}
															]
														},
														{
															"nativeSrc": "424:59:10",
															"nodeType": "YulAssignment",
															"src": "424:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:10",
																				"nodeType": "YulLiteral",
																				"src": "479:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:10"
																		},
																		"nativeSrc": "464:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:10"
																},
																"nativeSrc": "434:49:10",
																"nodeType": "YulFunctionCall",
																"src": "434:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:10",
														"nodeType": "YulTypedName",
														"src": "252:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:10",
														"nodeType": "YulTypedName",
														"src": "263:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:10",
														"nodeType": "YulTypedName",
														"src": "275:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:10",
														"nodeType": "YulTypedName",
														"src": "283:6:10",
														"type": ""
													}
												],
												"src": "196:293:10"
											},
											{
												"body": {
													"nativeSrc": "595:102:10",
													"nodeType": "YulBlock",
													"src": "595:102:10",
													"statements": [
														{
															"nativeSrc": "605:26:10",
															"nodeType": "YulAssignment",
															"src": "605:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "628:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:10"
																},
																"nativeSrc": "613:18:10",
																"nodeType": "YulFunctionCall",
																"src": "613:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:10",
																								"nodeType": "YulLiteral",
																								"src": "678:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:10",
																								"nodeType": "YulLiteral",
																								"src": "683:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:10"
																						},
																						"nativeSrc": "674:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:10",
																						"nodeType": "YulLiteral",
																						"src": "687:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:10"
																				},
																				"nativeSrc": "670:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:10"
																		},
																		"nativeSrc": "658:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:10"
																},
																"nativeSrc": "640:51:10",
																"nodeType": "YulFunctionCall",
																"src": "640:51:10"
															},
															"nativeSrc": "640:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:10",
														"nodeType": "YulTypedName",
														"src": "564:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:10",
														"nodeType": "YulTypedName",
														"src": "586:4:10",
														"type": ""
													}
												],
												"src": "494:203:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405260016002555f6003555f60045534801561001c575f5ffd5b5060405161154538038061154583398101604081905261003b916100eb565b338061006057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006981610081565b506001600160a01b039182166080521660a05261011c565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e6575f5ffd5b919050565b5f5f604083850312156100fc575f5ffd5b610105836100d0565b9150610113602084016100d0565b90509250929050565b60805160a0516113c961017c5f395f81816101b801528181610237015281816104ca0152818161094f01528181610bd80152610ca401525f8181610172015281816102e10152818161068d015281816108f70152610dd801526113c95ff3fe608060405234801561000f575f5ffd5b5060043610610132575f3560e01c8063b109beec116100b4578063ce325bf811610079578063ce325bf81461028f578063d2d7231f146102cc578063d46149a2146102df578063d6ef7af014610305578063d93c04a014610318578063f2fde38b14610340575f5ffd5b8063b109beec14610232578063b5fa91fe14610259578063b6baffe314610261578063bc85435214610269578063beceed391461027c575f5ffd5b80638da5cb5b116100fa5780638da5cb5b146101dc5780638e12c0cd146101ec5780638f4729b71461020d578063ac00500f14610216578063af7568dd14610229575f5ffd5b8063109cf39914610136578063379607f51461015a5780636db08f251461016d578063715018a6146101ac5780637c2fdeb5146101b6575b5f5ffd5b6101476969e10de76676d080000081565b6040519081526020015b60405180910390f35b610147610168366004611109565b610353565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610151565b6101b4610550565b005b7f0000000000000000000000000000000000000000000000000000000000000000610194565b5f546001600160a01b0316610194565b6101f5612a3081565b6040516001600160601b039091168152602001610151565b61014760045481565b6101b4610224366004611120565b610563565b61014760035481565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b61014761070b565b610147610720565b6101b4610277366004611140565b610745565b6101b461028a366004611109565b61092b565b6102a261029d366004611109565b6109b5565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610151565b6101476102da366004611109565b610a26565b7f0000000000000000000000000000000000000000000000000000000000000000610194565b6101b46103133660046111cc565b610bae565b61032b6103263660046111f4565b610d12565b60408051928352602083019190915201610151565b6101b461034e36600461121b565b610f47565b5f815f81118015610365575060025481105b61038a5760405162461bcd60e51b81526004016103819061123b565b60405180910390fd5b5f83815260016020526040902080546001600160a01b031633146103f05760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572006044820152606401610381565b8054600160a01b90046001600160601b0316426001600160601b0316101561046d5760405162461bcd60e51b815260206004820152602a60248201527f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74206044820152697065726d69747465642160b01b6064820152608401610381565b5f8160020154116104c05760405162461bcd60e51b815260206004820152601860248201527f4d6f64756c65583a4e6f7468696e6720746f20636c61696d00000000000000006044820152606401610381565b60028101546104f97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163383610f84565b8060045f82825461050a9190611286565b90915550505f60028301556040518581527f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc199060200160405180910390a1949350505050565b610558610fe3565b6105615f61100f565b565b61056b610fe3565b815f8111801561057c575060025481105b6105985760405162461bcd60e51b81526004016103819061123b565b5f82116105b75760405162461bcd60e51b81526004016103819061129f565b5f8381526001602052604090208054600160a01b90046001600160601b0316426001600160601b031611156106265760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610381565b806001015483111561067a5760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610381565b6106b43360018301546001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190610f84565b82816001015f8282546106c79190611286565b909155505060408051858152602081018590527f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c910160405180910390a150505050565b5f600160025461071b9190611286565b905090565b5f600b6969e10de76676d080000060035461073b91906112e8565b61071b9190611307565b61074d610fe3565b5f805b828110156108a25760025484848381811061076d5761076d61131a565b90506020020135106107915760405162461bcd60e51b81526004016103819061123b565b5f60015f8686858181106107a7576107a761131a565b602090810292909201358352508101919091526040015f208054909150600160a01b90046001600160601b0316426001600160601b031611156108245760405162461bcd60e51b81526020600482015260156024820152744d6f64756c65583a4275726e7420746f6b656e732160581b6044820152606401610381565b60018101546108339084611307565b5f600183015592507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c85858481811061086e5761086e61131a565b905060200201358260010154604051610891929190918252602082015260400190565b60405180910390a150600101610750565b505f81116108f25760405162461bcd60e51b815260206004820152601a60248201527f4d6f64756c65583a546f74616c20616d6f756e742069732030210000000000006044820152606401610381565b6109267f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163383610f84565b505050565b5f811161094a5760405162461bcd60e51b81526004016103819061129f565b61097f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308461105e565b6040518181527fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9060200160405180910390a150565b5f5f5f5f845f811180156109ca575060025481105b6109e65760405162461bcd60e51b81526004016103819061123b565b5050505f92835250506001602081905260409091208054918101546002909101546001600160a01b03831693600160a01b9093046001600160601b031692565b5f5f670de0b6b3a764000090505f83600354610a429190611307565b90505f6969e10de76676d0800000600354610a5d91906112e8565b90505f610a746969e10de76676d0800000846112e8565b9050808203610a9c57610a88600b83611307565b610a9290876112e8565b9695505050505050565b5f610aa8600b84611307565b6003546969e10de76676d0800000610ac1866001611307565b610acb919061132e565b610ad59190611286565b610adf908761132e565b610ae991906112e8565b90505f610af7600b84611307565b610b0b6969e10de76676d08000008561132e565b610b159087611286565b610b1f908861132e565b610b2991906112e8565b90505f80610b38866001611307565b90505b84811015610b8057610b4e600b82611307565b610b626969e10de76676d08000008a61132e565b610b6c91906112e8565b610b769083611307565b9150600101610b3b565b508682610b8d8386611307565b610b979190611307565b610ba191906112e8565b9998505050505050505050565b610bb6610fe3565b600454610bc39082611307565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c25573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c499190611345565b1015610c975760405162461bcd60e51b815260206004820152601d60248201527f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000006044820152606401610381565b610ccb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610f84565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133782604051610d0691815260200190565b60405180910390a25050565b5f5f5f8311610d785760405162461bcd60e51b815260206004820152602c60248201527f4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726560448201526b61746572207468616e20302160a01b6064820152608401610381565b612a306001600160601b0385161015610dd35760405162461bcd60e51b815260206004820152601f60248201527f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421006044820152606401610381565b610e087f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308661105e565b5f610e13854261135c565b90505f610e1f85610a26565b90505f60025490506040518060800160405280610e393390565b6001600160a01b0390811682526001600160601b0386811660208085019190915260408085018c905260609485018890525f878152600180845282822088519489015194909616600160a01b949095169390930293909317845585015190830155929091015160029091015560038054889290610eb7908490611307565b925050819055508160045f828254610ecf9190611307565b9091555050604080518281526001600160601b038516602082015280820188905260608101849052905133917f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146919081900360800190a260028054905f610f358361137b565b90915550909791965090945050505050565b610f4f610fe3565b6001600160a01b038116610f7857604051631e4fbdf760e01b81525f6004820152602401610381565b610f818161100f565b50565b6040516001600160a01b0383811660248301526044820183905261092691859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061109d565b5f546001600160a01b031633146105615760405163118cdaa760e01b8152336004820152602401610381565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526110979186918216906323b872dd90608401610fb1565b50505050565b5f5f60205f8451602086015f885af1806110bc576040513d5f823e3d81fd5b50505f513d915081156110d35780600114156110e0565b6001600160a01b0384163b155b1561109757604051635274afe760e01b81526001600160a01b0385166004820152602401610381565b5f60208284031215611119575f5ffd5b5035919050565b5f5f60408385031215611131575f5ffd5b50508035926020909101359150565b5f5f60208385031215611151575f5ffd5b823567ffffffffffffffff811115611167575f5ffd5b8301601f81018513611177575f5ffd5b803567ffffffffffffffff81111561118d575f5ffd5b8560208260051b84010111156111a1575f5ffd5b6020919091019590945092505050565b80356001600160a01b03811681146111c7575f5ffd5b919050565b5f5f604083850312156111dd575f5ffd5b6111e6836111b1565b946020939093013593505050565b5f5f60408385031215611205575f5ffd5b82356001600160601b03811681146111e6575f5ffd5b5f6020828403121561122b575f5ffd5b611234826111b1565b9392505050565b60208082526019908201527f4d6f64756c65583a496e76616c6964205374616b652049442100000000000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561129957611299611272565b92915050565b60208082526029908201527f4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207460408201526868616e207a65726f2160b81b606082015260800190565b5f8261130257634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561129957611299611272565b634e487b7160e01b5f52603260045260245ffd5b808202811582820484141761129957611299611272565b5f60208284031215611355575f5ffd5b5051919050565b6001600160601b03818116838216019081111561129957611299611272565b5f6001820161138c5761138c611272565b506001019056fea2646970667358221220bc6a0dbfd54a91a954691f255e21f1aa800468410fd1d8c1399ba6716541bfbc64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1545 CODESIZE SUB DUP1 PUSH2 0x1545 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3B SWAP2 PUSH2 0xEB JUMP JUMPDEST CALLER DUP1 PUSH2 0x60 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69 DUP2 PUSH2 0x81 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0x11C JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x105 DUP4 PUSH2 0xD0 JUMP JUMPDEST SWAP2 POP PUSH2 0x113 PUSH1 0x20 DUP5 ADD PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x13C9 PUSH2 0x17C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1B8 ADD MSTORE DUP2 DUP2 PUSH2 0x237 ADD MSTORE DUP2 DUP2 PUSH2 0x4CA ADD MSTORE DUP2 DUP2 PUSH2 0x94F ADD MSTORE DUP2 DUP2 PUSH2 0xBD8 ADD MSTORE PUSH2 0xCA4 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x172 ADD MSTORE DUP2 DUP2 PUSH2 0x2E1 ADD MSTORE DUP2 DUP2 PUSH2 0x68D ADD MSTORE DUP2 DUP2 PUSH2 0x8F7 ADD MSTORE PUSH2 0xDD8 ADD MSTORE PUSH2 0x13C9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB109BEEC GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x109CF399 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH2 0x194 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x147 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x32B PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x121B JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x365 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7065726D697474656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x4F9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0x100F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56B PUSH2 0xFE3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x57C JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x6B4 CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x74D PUSH2 0xFE3 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0x131A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x833 SWAP1 DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x86E JUMPI PUSH2 0x86E PUSH2 0x131A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x891 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x750 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x926 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x97F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x9CA JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA74 PUSH10 0x69E10DE76676D0800000 DUP5 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xA9C JUMPI PUSH2 0xA88 PUSH1 0xB DUP4 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xA92 SWAP1 DUP8 PUSH2 0x12E8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA8 PUSH1 0xB DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xAC1 DUP7 PUSH1 0x1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xADF SWAP1 DUP8 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAF7 PUSH1 0xB DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB0B PUSH10 0x69E10DE76676D0800000 DUP6 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB15 SWAP1 DUP8 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xB1F SWAP1 DUP9 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xB38 DUP7 PUSH1 0x1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB4E PUSH1 0xB DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB62 PUSH10 0x69E10DE76676D0800000 DUP11 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0xB76 SWAP1 DUP4 PUSH2 0x1307 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xB3B JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xB8D DUP4 DUP7 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBC3 SWAP1 DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST LT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xCCB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD06 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x61746572207468616E203021 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x2A30 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xE08 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x105E JUMP JUMPDEST PUSH0 PUSH2 0xE13 DUP6 TIMESTAMP PUSH2 0x135C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE1F DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xE39 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xEB7 SWAP1 DUP5 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xF35 DUP4 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0x100F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x926 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x109D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1097 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xFB1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x10D3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1131 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1167 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1177 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x11A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E6 DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1234 DUP3 PUSH2 0x11B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1302 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x1272 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH11 0xDBFD54A91A954691F255E 0x21 CALL 0xAA DUP1 DIV PUSH9 0x410FD1D8C1399BA671 PUSH6 0x41BFBC64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "278:6784:8:-:0;;;998:1;970:29;;1033:1;1006:28;;1072:1;1041:32;;1549:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:10;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1643:27:8;;::::1;;::::0;1681:29:::1;;::::0;278:6784;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:10:-;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;278:6784:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_INTERVAL_857": {
									"entryPoint": null,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MATURITY_847": {
									"entryPoint": null,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 4253,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4067,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4111,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1501": {
									"entryPoint": 2347,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchWithdrawCREDI_1472": {
									"entryPoint": 1861,
									"id": 1472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1145": {
									"entryPoint": 2598,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1321": {
									"entryPoint": 851,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCREDIAddress_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDifficulty_1157": {
									"entryPoint": 1824,
									"id": 1157,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1017": {
									"entryPoint": 2485,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getStakesCount_982": {
									"entryPoint": 1803,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getxCREDIAddress_972": {
									"entryPoint": null,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_877": {
									"entryPoint": null,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1360,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 4190,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 3972,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1248": {
									"entryPoint": 3346,
									"id": 1248,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@time_now_1029": {
									"entryPoint": null,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@total_staked_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3911,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCREDI_1385": {
									"entryPoint": 1379,
									"id": 1385,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_1538": {
									"entryPoint": 2990,
									"id": 1538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xCREDI_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10076:10",
										"nodeType": "YulBlock",
										"src": "0:10076:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:10",
													"nodeType": "YulBlock",
													"src": "115:76:10",
													"statements": [
														{
															"nativeSrc": "125:26:10",
															"nodeType": "YulAssignment",
															"src": "125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:10",
																		"nodeType": "YulLiteral",
																		"src": "148:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:10"
																},
																"nativeSrc": "133:18:10",
																"nodeType": "YulFunctionCall",
																"src": "133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nativeSrc": "160:25:10",
																"nodeType": "YulFunctionCall",
																"src": "160:25:10"
															},
															"nativeSrc": "160:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:10",
														"nodeType": "YulTypedName",
														"src": "84:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:10",
														"nodeType": "YulTypedName",
														"src": "95:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:10",
														"nodeType": "YulTypedName",
														"src": "106:4:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "266:156:10",
													"nodeType": "YulBlock",
													"src": "266:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "312:16:10",
																"nodeType": "YulBlock",
																"src": "312:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "321:1:10",
																					"nodeType": "YulLiteral",
																					"src": "321:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:10",
																					"nodeType": "YulLiteral",
																					"src": "324:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "314:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:10"
																			},
																			"nativeSrc": "314:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:10"
																		},
																		"nativeSrc": "314:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "287:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "296:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "283:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:10"
																		},
																		"nativeSrc": "283:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "308:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "279:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:10"
																},
																"nativeSrc": "279:32:10",
																"nodeType": "YulFunctionCall",
																"src": "279:32:10"
															},
															"nativeSrc": "276:52:10",
															"nodeType": "YulIf",
															"src": "276:52:10"
														},
														{
															"nativeSrc": "337:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "337:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "350:1:10",
																"nodeType": "YulLiteral",
																"src": "350:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "341:5:10",
																	"nodeType": "YulTypedName",
																	"src": "341:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "360:32:10",
															"nodeType": "YulAssignment",
															"src": "360:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "382:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "369:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:10"
																},
																"nativeSrc": "369:23:10",
																"nodeType": "YulFunctionCall",
																"src": "369:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																}
															]
														},
														{
															"nativeSrc": "401:15:10",
															"nodeType": "YulAssignment",
															"src": "401:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "411:5:10",
																"nodeType": "YulIdentifier",
																"src": "411:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "196:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "232:9:10",
														"nodeType": "YulTypedName",
														"src": "232:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "243:7:10",
														"nodeType": "YulTypedName",
														"src": "243:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "255:6:10",
														"nodeType": "YulTypedName",
														"src": "255:6:10",
														"type": ""
													}
												],
												"src": "196:226:10"
											},
											{
												"body": {
													"nativeSrc": "542:102:10",
													"nodeType": "YulBlock",
													"src": "542:102:10",
													"statements": [
														{
															"nativeSrc": "552:26:10",
															"nodeType": "YulAssignment",
															"src": "552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:10"
																},
																"nativeSrc": "560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "594:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "594:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "609:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "609:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "625:3:10",
																								"nodeType": "YulLiteral",
																								"src": "625:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "630:1:10",
																								"nodeType": "YulLiteral",
																								"src": "630:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "621:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "621:3:10"
																						},
																						"nativeSrc": "621:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "621:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "634:1:10",
																						"nodeType": "YulLiteral",
																						"src": "634:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "617:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "617:3:10"
																				},
																				"nativeSrc": "617:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "617:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "605:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:10"
																		},
																		"nativeSrc": "605:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "605:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nativeSrc": "587:51:10",
																"nodeType": "YulFunctionCall",
																"src": "587:51:10"
															},
															"nativeSrc": "587:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "587:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "427:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "511:9:10",
														"nodeType": "YulTypedName",
														"src": "511:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "522:6:10",
														"nodeType": "YulTypedName",
														"src": "522:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "533:4:10",
														"nodeType": "YulTypedName",
														"src": "533:4:10",
														"type": ""
													}
												],
												"src": "427:217:10"
											},
											{
												"body": {
													"nativeSrc": "750:102:10",
													"nodeType": "YulBlock",
													"src": "750:102:10",
													"statements": [
														{
															"nativeSrc": "760:26:10",
															"nodeType": "YulAssignment",
															"src": "760:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "772:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "772:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:2:10",
																		"nodeType": "YulLiteral",
																		"src": "783:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "768:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "768:3:10"
																},
																"nativeSrc": "768:18:10",
																"nodeType": "YulFunctionCall",
																"src": "768:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "760:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "760:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "817:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "833:3:10",
																								"nodeType": "YulLiteral",
																								"src": "833:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "838:1:10",
																								"nodeType": "YulLiteral",
																								"src": "838:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "829:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "829:3:10"
																						},
																						"nativeSrc": "829:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "829:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "842:1:10",
																						"nodeType": "YulLiteral",
																						"src": "842:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "825:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "825:3:10"
																				},
																				"nativeSrc": "825:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "825:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:10"
																		},
																		"nativeSrc": "813:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "813:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "795:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "795:6:10"
																},
																"nativeSrc": "795:51:10",
																"nodeType": "YulFunctionCall",
																"src": "795:51:10"
															},
															"nativeSrc": "795:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "795:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "649:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "719:9:10",
														"nodeType": "YulTypedName",
														"src": "719:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "730:6:10",
														"nodeType": "YulTypedName",
														"src": "730:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "741:4:10",
														"nodeType": "YulTypedName",
														"src": "741:4:10",
														"type": ""
													}
												],
												"src": "649:203:10"
											},
											{
												"body": {
													"nativeSrc": "956:109:10",
													"nodeType": "YulBlock",
													"src": "956:109:10",
													"statements": [
														{
															"nativeSrc": "966:26:10",
															"nodeType": "YulAssignment",
															"src": "966:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "978:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "978:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "989:2:10",
																		"nodeType": "YulLiteral",
																		"src": "989:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:10"
																},
																"nativeSrc": "974:18:10",
																"nodeType": "YulFunctionCall",
																"src": "974:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "966:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "966:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1008:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1023:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1031:26:10",
																				"nodeType": "YulLiteral",
																				"src": "1031:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1019:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:10"
																		},
																		"nativeSrc": "1019:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1001:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:10"
																},
																"nativeSrc": "1001:58:10",
																"nodeType": "YulFunctionCall",
																"src": "1001:58:10"
															},
															"nativeSrc": "1001:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "1001:58:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "857:208:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "925:9:10",
														"nodeType": "YulTypedName",
														"src": "925:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "936:6:10",
														"nodeType": "YulTypedName",
														"src": "936:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "947:4:10",
														"nodeType": "YulTypedName",
														"src": "947:4:10",
														"type": ""
													}
												],
												"src": "857:208:10"
											},
											{
												"body": {
													"nativeSrc": "1157:259:10",
													"nodeType": "YulBlock",
													"src": "1157:259:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1203:16:10",
																"nodeType": "YulBlock",
																"src": "1203:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1215:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1215:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1205:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:6:10"
																			},
																			"nativeSrc": "1205:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1205:12:10"
																		},
																		"nativeSrc": "1205:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1205:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1178:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1178:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1187:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1187:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:10"
																		},
																		"nativeSrc": "1174:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1199:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1199:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1170:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:3:10"
																},
																"nativeSrc": "1170:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1170:32:10"
															},
															"nativeSrc": "1167:52:10",
															"nodeType": "YulIf",
															"src": "1167:52:10"
														},
														{
															"nativeSrc": "1228:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1228:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1241:1:10",
																"nodeType": "YulLiteral",
																"src": "1241:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1232:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1232:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1251:32:10",
															"nodeType": "YulAssignment",
															"src": "1251:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1273:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1273:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1260:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1260:12:10"
																},
																"nativeSrc": "1260:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1260:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1251:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:5:10"
																}
															]
														},
														{
															"nativeSrc": "1292:15:10",
															"nodeType": "YulAssignment",
															"src": "1292:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1302:5:10",
																"nodeType": "YulIdentifier",
																"src": "1302:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														},
														{
															"nativeSrc": "1316:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1316:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "1331:1:10",
																"nodeType": "YulLiteral",
																"src": "1331:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1320:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1320:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1341:43:10",
															"nodeType": "YulAssignment",
															"src": "1341:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1369:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1369:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1380:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1380:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1365:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:10"
																		},
																		"nativeSrc": "1365:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1365:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1352:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1352:12:10"
																},
																"nativeSrc": "1352:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1352:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1341:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1341:7:10"
																}
															]
														},
														{
															"nativeSrc": "1393:17:10",
															"nodeType": "YulAssignment",
															"src": "1393:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1403:7:10",
																"nodeType": "YulIdentifier",
																"src": "1403:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1393:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1070:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1115:9:10",
														"nodeType": "YulTypedName",
														"src": "1115:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1126:7:10",
														"nodeType": "YulTypedName",
														"src": "1126:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1138:6:10",
														"nodeType": "YulTypedName",
														"src": "1138:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1146:6:10",
														"nodeType": "YulTypedName",
														"src": "1146:6:10",
														"type": ""
													}
												],
												"src": "1070:346:10"
											},
											{
												"body": {
													"nativeSrc": "1526:505:10",
													"nodeType": "YulBlock",
													"src": "1526:505:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1572:16:10",
																"nodeType": "YulBlock",
																"src": "1572:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1581:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1584:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1584:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1574:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1574:6:10"
																			},
																			"nativeSrc": "1574:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1574:12:10"
																		},
																		"nativeSrc": "1574:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1574:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1547:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1547:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1556:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1556:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nativeSrc": "1543:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1568:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:10"
																},
																"nativeSrc": "1539:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1539:32:10"
															},
															"nativeSrc": "1536:52:10",
															"nodeType": "YulIf",
															"src": "1536:52:10"
														},
														{
															"nativeSrc": "1597:37:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1597:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1624:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1624:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1611:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1611:12:10"
																},
																"nativeSrc": "1611:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1611:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1601:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1601:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:10",
																"nodeType": "YulBlock",
																"src": "1677:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:10"
																			},
																			"nativeSrc": "1679:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:10"
																		},
																		"nativeSrc": "1679:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1649:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1649:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1657:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1646:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1646:2:10"
																},
																"nativeSrc": "1646:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1646:30:10"
															},
															"nativeSrc": "1643:50:10",
															"nodeType": "YulIf",
															"src": "1643:50:10"
														},
														{
															"nativeSrc": "1702:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1702:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1716:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1716:9:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1727:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1727:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1712:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1712:3:10"
																},
																"nativeSrc": "1712:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1712:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1706:2:10",
																	"nodeType": "YulTypedName",
																	"src": "1706:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1782:16:10",
																"nodeType": "YulBlock",
																"src": "1782:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1791:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1791:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1794:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1794:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1784:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1784:6:10"
																			},
																			"nativeSrc": "1784:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1784:12:10"
																		},
																		"nativeSrc": "1784:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1784:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1761:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1761:2:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1765:4:10",
																						"nodeType": "YulLiteral",
																						"src": "1765:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1757:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1757:3:10"
																				},
																				"nativeSrc": "1757:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1757:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1772:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1772:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1753:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:10"
																		},
																		"nativeSrc": "1753:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1753:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1746:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:10"
																},
																"nativeSrc": "1746:35:10",
																"nodeType": "YulFunctionCall",
																"src": "1746:35:10"
															},
															"nativeSrc": "1743:55:10",
															"nodeType": "YulIf",
															"src": "1743:55:10"
														},
														{
															"nativeSrc": "1807:30:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1807:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1834:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "1834:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1821:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1821:12:10"
																},
																"nativeSrc": "1821:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1821:16:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1811:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1811:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1880:16:10",
																"nodeType": "YulBlock",
																"src": "1880:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1889:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1889:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1882:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1882:6:10"
																			},
																			"nativeSrc": "1882:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1882:12:10"
																		},
																		"nativeSrc": "1882:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1882:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1852:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1852:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1860:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1849:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1849:2:10"
																},
																"nativeSrc": "1849:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1849:30:10"
															},
															"nativeSrc": "1846:50:10",
															"nodeType": "YulIf",
															"src": "1846:50:10"
														},
														{
															"body": {
																"nativeSrc": "1954:16:10",
																"nodeType": "YulBlock",
																"src": "1954:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1963:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1966:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1956:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1956:6:10"
																			},
																			"nativeSrc": "1956:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1956:12:10"
																		},
																		"nativeSrc": "1956:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1956:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1919:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "1919:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1927:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1927:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1930:6:10",
																								"nodeType": "YulIdentifier",
																								"src": "1930:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1923:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:10"
																						},
																						"nativeSrc": "1923:14:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1923:14:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1915:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1915:3:10"
																				},
																				"nativeSrc": "1915:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1915:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1940:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1940:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1911:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:10"
																		},
																		"nativeSrc": "1911:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1911:32:10"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1945:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1945:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1908:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1908:2:10"
																},
																"nativeSrc": "1908:45:10",
																"nodeType": "YulFunctionCall",
																"src": "1908:45:10"
															},
															"nativeSrc": "1905:65:10",
															"nodeType": "YulIf",
															"src": "1905:65:10"
														},
														{
															"nativeSrc": "1979:21:10",
															"nodeType": "YulAssignment",
															"src": "1979:21:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1993:2:10",
																		"nodeType": "YulIdentifier",
																		"src": "1993:2:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1997:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1989:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1989:3:10"
																},
																"nativeSrc": "1989:11:10",
																"nodeType": "YulFunctionCall",
																"src": "1989:11:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:10"
																}
															]
														},
														{
															"nativeSrc": "2009:16:10",
															"nodeType": "YulAssignment",
															"src": "2009:16:10",
															"value": {
																"name": "length",
																"nativeSrc": "2019:6:10",
																"nodeType": "YulIdentifier",
																"src": "2019:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2009:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "1421:610:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1484:9:10",
														"nodeType": "YulTypedName",
														"src": "1484:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1495:7:10",
														"nodeType": "YulTypedName",
														"src": "1495:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1507:6:10",
														"nodeType": "YulTypedName",
														"src": "1507:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1515:6:10",
														"nodeType": "YulTypedName",
														"src": "1515:6:10",
														"type": ""
													}
												],
												"src": "1421:610:10"
											},
											{
												"body": {
													"nativeSrc": "2221:232:10",
													"nodeType": "YulBlock",
													"src": "2221:232:10",
													"statements": [
														{
															"nativeSrc": "2231:27:10",
															"nodeType": "YulAssignment",
															"src": "2231:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2243:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2243:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2254:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2254:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:10"
																},
																"nativeSrc": "2239:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2239:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2231:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2231:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2274:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2274:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2289:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2289:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2305:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2305:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2310:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2310:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2301:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2301:3:10"
																						},
																						"nativeSrc": "2301:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2301:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2314:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2314:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2297:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2297:3:10"
																				},
																				"nativeSrc": "2297:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2297:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2285:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2285:3:10"
																		},
																		"nativeSrc": "2285:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2285:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2267:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2267:6:10"
																},
																"nativeSrc": "2267:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2267:51:10"
															},
															"nativeSrc": "2267:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2267:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2338:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2349:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2349:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2334:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:10"
																		},
																		"nativeSrc": "2334:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2334:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2354:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2354:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:10"
																},
																"nativeSrc": "2327:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2327:34:10"
															},
															"nativeSrc": "2327:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2327:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2381:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2392:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2392:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2377:3:10"
																		},
																		"nativeSrc": "2377:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2377:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2397:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2397:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:10"
																},
																"nativeSrc": "2370:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2370:34:10"
															},
															"nativeSrc": "2370:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2370:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2424:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2424:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2435:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2420:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2420:3:10"
																		},
																		"nativeSrc": "2420:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2420:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2440:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2413:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:10"
																},
																"nativeSrc": "2413:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2413:34:10"
															},
															"nativeSrc": "2413:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2413:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2036:417:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2166:9:10",
														"nodeType": "YulTypedName",
														"src": "2166:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2177:6:10",
														"nodeType": "YulTypedName",
														"src": "2177:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2185:6:10",
														"nodeType": "YulTypedName",
														"src": "2185:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2193:6:10",
														"nodeType": "YulTypedName",
														"src": "2193:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2201:6:10",
														"nodeType": "YulTypedName",
														"src": "2201:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2212:4:10",
														"nodeType": "YulTypedName",
														"src": "2212:4:10",
														"type": ""
													}
												],
												"src": "2036:417:10"
											},
											{
												"body": {
													"nativeSrc": "2507:124:10",
													"nodeType": "YulBlock",
													"src": "2507:124:10",
													"statements": [
														{
															"nativeSrc": "2517:29:10",
															"nodeType": "YulAssignment",
															"src": "2517:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2539:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2539:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2526:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2526:12:10"
																},
																"nativeSrc": "2526:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2526:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2517:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2517:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2609:16:10",
																"nodeType": "YulBlock",
																"src": "2609:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2618:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2621:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2611:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:10"
																			},
																			"nativeSrc": "2611:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:10"
																		},
																		"nativeSrc": "2611:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2568:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2568:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2579:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2579:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2594:3:10",
																										"nodeType": "YulLiteral",
																										"src": "2594:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2599:1:10",
																										"nodeType": "YulLiteral",
																										"src": "2599:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2590:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "2590:3:10"
																								},
																								"nativeSrc": "2590:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "2590:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2603:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2603:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2586:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2586:3:10"
																						},
																						"nativeSrc": "2586:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2586:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2575:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2575:3:10"
																				},
																				"nativeSrc": "2575:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2575:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2565:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2565:2:10"
																		},
																		"nativeSrc": "2565:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2565:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2558:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:10"
																},
																"nativeSrc": "2558:50:10",
																"nodeType": "YulFunctionCall",
																"src": "2558:50:10"
															},
															"nativeSrc": "2555:70:10",
															"nodeType": "YulIf",
															"src": "2555:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "2458:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2486:6:10",
														"nodeType": "YulTypedName",
														"src": "2486:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2497:5:10",
														"nodeType": "YulTypedName",
														"src": "2497:5:10",
														"type": ""
													}
												],
												"src": "2458:173:10"
											},
											{
												"body": {
													"nativeSrc": "2723:213:10",
													"nodeType": "YulBlock",
													"src": "2723:213:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2769:16:10",
																"nodeType": "YulBlock",
																"src": "2769:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2778:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2781:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2781:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2771:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:10"
																			},
																			"nativeSrc": "2771:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2771:12:10"
																		},
																		"nativeSrc": "2771:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2771:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2744:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2744:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2740:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:10"
																		},
																		"nativeSrc": "2740:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2740:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2765:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2765:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:10"
																},
																"nativeSrc": "2736:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2736:32:10"
															},
															"nativeSrc": "2733:52:10",
															"nodeType": "YulIf",
															"src": "2733:52:10"
														},
														{
															"nativeSrc": "2794:39:10",
															"nodeType": "YulAssignment",
															"src": "2794:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2823:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2823:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2804:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2804:18:10"
																},
																"nativeSrc": "2804:29:10",
																"nodeType": "YulFunctionCall",
																"src": "2804:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2794:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:10"
																}
															]
														},
														{
															"nativeSrc": "2842:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2842:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2855:1:10",
																"nodeType": "YulLiteral",
																"src": "2855:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2846:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2846:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2865:41:10",
															"nodeType": "YulAssignment",
															"src": "2865:41:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2891:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2902:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2902:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:10"
																		},
																		"nativeSrc": "2887:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2874:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2874:12:10"
																},
																"nativeSrc": "2874:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2874:32:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2865:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2865:5:10"
																}
															]
														},
														{
															"nativeSrc": "2915:15:10",
															"nodeType": "YulAssignment",
															"src": "2915:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2925:5:10",
																"nodeType": "YulIdentifier",
																"src": "2925:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2636:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2681:9:10",
														"nodeType": "YulTypedName",
														"src": "2681:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2692:7:10",
														"nodeType": "YulTypedName",
														"src": "2692:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2704:6:10",
														"nodeType": "YulTypedName",
														"src": "2704:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2712:6:10",
														"nodeType": "YulTypedName",
														"src": "2712:6:10",
														"type": ""
													}
												],
												"src": "2636:300:10"
											},
											{
												"body": {
													"nativeSrc": "3027:326:10",
													"nodeType": "YulBlock",
													"src": "3027:326:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3073:16:10",
																"nodeType": "YulBlock",
																"src": "3073:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3082:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3075:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:10"
																			},
																			"nativeSrc": "3075:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3075:12:10"
																		},
																		"nativeSrc": "3075:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3048:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3048:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3057:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:10"
																		},
																		"nativeSrc": "3044:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3069:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3040:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:10"
																},
																"nativeSrc": "3040:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3040:32:10"
															},
															"nativeSrc": "3037:52:10",
															"nodeType": "YulIf",
															"src": "3037:52:10"
														},
														{
															"nativeSrc": "3098:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3098:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3124:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3111:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3111:12:10"
																},
																"nativeSrc": "3111:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3111:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3102:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3102:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3204:16:10",
																"nodeType": "YulBlock",
																"src": "3204:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3213:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3213:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3216:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3206:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3206:6:10"
																			},
																			"nativeSrc": "3206:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3206:12:10"
																		},
																		"nativeSrc": "3206:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3206:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3156:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3156:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3167:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3167:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:26:10",
																						"nodeType": "YulLiteral",
																						"src": "3174:26:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3163:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3163:3:10"
																				},
																				"nativeSrc": "3163:38:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3163:38:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3153:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3153:2:10"
																		},
																		"nativeSrc": "3153:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:49:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3146:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:10"
																},
																"nativeSrc": "3146:57:10",
																"nodeType": "YulFunctionCall",
																"src": "3146:57:10"
															},
															"nativeSrc": "3143:77:10",
															"nodeType": "YulIf",
															"src": "3143:77:10"
														},
														{
															"nativeSrc": "3229:15:10",
															"nodeType": "YulAssignment",
															"src": "3229:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3239:5:10",
																"nodeType": "YulIdentifier",
																"src": "3239:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3229:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3229:6:10"
																}
															]
														},
														{
															"nativeSrc": "3253:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3253:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3268:1:10",
																"nodeType": "YulLiteral",
																"src": "3268:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3257:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3257:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3278:43:10",
															"nodeType": "YulAssignment",
															"src": "3278:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3306:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3306:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3317:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3317:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3302:3:10"
																		},
																		"nativeSrc": "3302:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3302:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3289:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3289:12:10"
																},
																"nativeSrc": "3289:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3289:32:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3278:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3278:7:10"
																}
															]
														},
														{
															"nativeSrc": "3330:17:10",
															"nodeType": "YulAssignment",
															"src": "3330:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3340:7:10",
																"nodeType": "YulIdentifier",
																"src": "3340:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nativeSrc": "2941:412:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2985:9:10",
														"nodeType": "YulTypedName",
														"src": "2985:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2996:7:10",
														"nodeType": "YulTypedName",
														"src": "2996:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3008:6:10",
														"nodeType": "YulTypedName",
														"src": "3008:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3016:6:10",
														"nodeType": "YulTypedName",
														"src": "3016:6:10",
														"type": ""
													}
												],
												"src": "2941:412:10"
											},
											{
												"body": {
													"nativeSrc": "3487:119:10",
													"nodeType": "YulBlock",
													"src": "3487:119:10",
													"statements": [
														{
															"nativeSrc": "3497:26:10",
															"nodeType": "YulAssignment",
															"src": "3497:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3509:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3509:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:10"
																},
																"nativeSrc": "3505:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3505:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3497:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3539:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3539:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3550:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3532:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:10"
																},
																"nativeSrc": "3532:25:10",
																"nodeType": "YulFunctionCall",
																"src": "3532:25:10"
															},
															"nativeSrc": "3532:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "3532:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3577:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3577:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3588:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3588:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3573:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3573:3:10"
																		},
																		"nativeSrc": "3573:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3593:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3566:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:10"
																},
																"nativeSrc": "3566:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3566:34:10"
															},
															"nativeSrc": "3566:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3566:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3358:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3448:9:10",
														"nodeType": "YulTypedName",
														"src": "3448:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3459:6:10",
														"nodeType": "YulTypedName",
														"src": "3459:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3467:6:10",
														"nodeType": "YulTypedName",
														"src": "3467:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3478:4:10",
														"nodeType": "YulTypedName",
														"src": "3478:4:10",
														"type": ""
													}
												],
												"src": "3358:248:10"
											},
											{
												"body": {
													"nativeSrc": "3681:116:10",
													"nodeType": "YulBlock",
													"src": "3681:116:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3727:16:10",
																"nodeType": "YulBlock",
																"src": "3727:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3736:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3736:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3739:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3729:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3729:6:10"
																			},
																			"nativeSrc": "3729:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3729:12:10"
																		},
																		"nativeSrc": "3729:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3729:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3702:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3702:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3711:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3711:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3698:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:10"
																		},
																		"nativeSrc": "3698:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3694:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:10"
																},
																"nativeSrc": "3694:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3694:32:10"
															},
															"nativeSrc": "3691:52:10",
															"nodeType": "YulIf",
															"src": "3691:52:10"
														},
														{
															"nativeSrc": "3752:39:10",
															"nodeType": "YulAssignment",
															"src": "3752:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3781:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3781:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3762:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3762:18:10"
																},
																"nativeSrc": "3762:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3762:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3752:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3752:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3611:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3647:9:10",
														"nodeType": "YulTypedName",
														"src": "3647:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3658:7:10",
														"nodeType": "YulTypedName",
														"src": "3658:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3670:6:10",
														"nodeType": "YulTypedName",
														"src": "3670:6:10",
														"type": ""
													}
												],
												"src": "3611:186:10"
											},
											{
												"body": {
													"nativeSrc": "3976:175:10",
													"nodeType": "YulBlock",
													"src": "3976:175:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3993:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3993:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4004:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4004:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3986:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:10"
																},
																"nativeSrc": "3986:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3986:21:10"
															},
															"nativeSrc": "3986:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3986:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4027:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4038:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4038:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4023:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:10"
																		},
																		"nativeSrc": "4023:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4023:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4043:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4043:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4016:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:10"
																},
																"nativeSrc": "4016:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4016:30:10"
															},
															"nativeSrc": "4016:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4016:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4066:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4077:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4077:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4062:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:10"
																		},
																		"nativeSrc": "4062:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4062:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "4082:27:10",
																		"nodeType": "YulLiteral",
																		"src": "4082:27:10",
																		"type": "",
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4055:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:10"
																},
																"nativeSrc": "4055:55:10",
																"nodeType": "YulFunctionCall",
																"src": "4055:55:10"
															},
															"nativeSrc": "4055:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "4055:55:10"
														},
														{
															"nativeSrc": "4119:26:10",
															"nodeType": "YulAssignment",
															"src": "4119:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4131:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4131:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4142:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4142:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:10"
																},
																"nativeSrc": "4127:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4127:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4119:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4119:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3802:349:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3953:9:10",
														"nodeType": "YulTypedName",
														"src": "3953:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3967:4:10",
														"nodeType": "YulTypedName",
														"src": "3967:4:10",
														"type": ""
													}
												],
												"src": "3802:349:10"
											},
											{
												"body": {
													"nativeSrc": "4330:181:10",
													"nodeType": "YulBlock",
													"src": "4330:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4347:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4347:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4340:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:10"
																},
																"nativeSrc": "4340:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4340:21:10"
															},
															"nativeSrc": "4340:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4340:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4392:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:10"
																		},
																		"nativeSrc": "4377:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4370:6:10"
																},
																"nativeSrc": "4370:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4370:30:10"
															},
															"nativeSrc": "4370:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4370:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4420:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4431:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4416:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:10"
																		},
																		"nativeSrc": "4416:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4436:33:10",
																		"nodeType": "YulLiteral",
																		"src": "4436:33:10",
																		"type": "",
																		"value": "ModuleX:Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4409:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4409:6:10"
																},
																"nativeSrc": "4409:61:10",
																"nodeType": "YulFunctionCall",
																"src": "4409:61:10"
															},
															"nativeSrc": "4409:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "4409:61:10"
														},
														{
															"nativeSrc": "4479:26:10",
															"nodeType": "YulAssignment",
															"src": "4479:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4491:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4491:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4502:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4502:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4487:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:10"
																},
																"nativeSrc": "4487:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4487:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4479:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4156:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4307:9:10",
														"nodeType": "YulTypedName",
														"src": "4307:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4321:4:10",
														"nodeType": "YulTypedName",
														"src": "4321:4:10",
														"type": ""
													}
												],
												"src": "4156:355:10"
											},
											{
												"body": {
													"nativeSrc": "4690:232:10",
													"nodeType": "YulBlock",
													"src": "4690:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4707:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4707:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4718:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4700:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4700:6:10"
																},
																"nativeSrc": "4700:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4700:21:10"
															},
															"nativeSrc": "4700:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4700:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4741:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4752:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4752:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4737:3:10"
																		},
																		"nativeSrc": "4737:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4737:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4730:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:10"
																},
																"nativeSrc": "4730:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4730:30:10"
															},
															"nativeSrc": "4730:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4730:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4780:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4780:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4791:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4791:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:10"
																		},
																		"nativeSrc": "4776:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4776:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "4796:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4796:34:10",
																		"type": "",
																		"value": "ModuleX:Early Withdrawal is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4769:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:10"
																},
																"nativeSrc": "4769:62:10",
																"nodeType": "YulFunctionCall",
																"src": "4769:62:10"
															},
															"nativeSrc": "4769:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "4769:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4851:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4862:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4862:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4847:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:10"
																		},
																		"nativeSrc": "4847:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:18:10"
																	},
																	{
																		"hexValue": "7065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "4867:12:10",
																		"nodeType": "YulLiteral",
																		"src": "4867:12:10",
																		"type": "",
																		"value": "permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4840:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:10"
																},
																"nativeSrc": "4840:40:10",
																"nodeType": "YulFunctionCall",
																"src": "4840:40:10"
															},
															"nativeSrc": "4840:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "4840:40:10"
														},
														{
															"nativeSrc": "4889:27:10",
															"nodeType": "YulAssignment",
															"src": "4889:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4901:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:3:10",
																		"nodeType": "YulLiteral",
																		"src": "4912:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4897:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:10"
																},
																"nativeSrc": "4897:19:10",
																"nodeType": "YulFunctionCall",
																"src": "4897:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4889:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4889:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4516:406:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4667:9:10",
														"nodeType": "YulTypedName",
														"src": "4667:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4681:4:10",
														"nodeType": "YulTypedName",
														"src": "4681:4:10",
														"type": ""
													}
												],
												"src": "4516:406:10"
											},
											{
												"body": {
													"nativeSrc": "5101:174:10",
													"nodeType": "YulBlock",
													"src": "5101:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5129:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5111:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5111:6:10"
																},
																"nativeSrc": "5111:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5111:21:10"
															},
															"nativeSrc": "5111:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5111:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5152:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5152:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5163:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5163:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5148:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:10"
																		},
																		"nativeSrc": "5148:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5168:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5168:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5141:6:10"
																},
																"nativeSrc": "5141:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5141:30:10"
															},
															"nativeSrc": "5141:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5141:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5191:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5191:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5202:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5202:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5187:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5187:3:10"
																		},
																		"nativeSrc": "5187:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "5207:26:10",
																		"nodeType": "YulLiteral",
																		"src": "5207:26:10",
																		"type": "",
																		"value": "ModuleX:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5180:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:10"
																},
																"nativeSrc": "5180:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5180:54:10"
															},
															"nativeSrc": "5180:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "5180:54:10"
														},
														{
															"nativeSrc": "5243:26:10",
															"nodeType": "YulAssignment",
															"src": "5243:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5255:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5255:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5266:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5251:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5251:3:10"
																},
																"nativeSrc": "5251:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5251:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5243:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5243:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4927:348:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5078:9:10",
														"nodeType": "YulTypedName",
														"src": "5078:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5092:4:10",
														"nodeType": "YulTypedName",
														"src": "5092:4:10",
														"type": ""
													}
												],
												"src": "4927:348:10"
											},
											{
												"body": {
													"nativeSrc": "5312:95:10",
													"nodeType": "YulBlock",
													"src": "5312:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5329:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5329:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5336:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5336:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5341:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5341:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:10"
																		},
																		"nativeSrc": "5332:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:10"
																},
																"nativeSrc": "5322:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5322:31:10"
															},
															"nativeSrc": "5322:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5322:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5369:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5369:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5372:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5372:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5362:6:10"
																},
																"nativeSrc": "5362:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5362:15:10"
															},
															"nativeSrc": "5362:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5362:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5393:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5393:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5396:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5386:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:10"
																},
																"nativeSrc": "5386:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5386:15:10"
															},
															"nativeSrc": "5386:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5386:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5280:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5280:127:10"
											},
											{
												"body": {
													"nativeSrc": "5461:79:10",
													"nodeType": "YulBlock",
													"src": "5461:79:10",
													"statements": [
														{
															"nativeSrc": "5471:17:10",
															"nodeType": "YulAssignment",
															"src": "5471:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5483:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5483:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5486:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5486:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5479:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:10"
																},
																"nativeSrc": "5479:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5479:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5471:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5471:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5512:22:10",
																"nodeType": "YulBlock",
																"src": "5512:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5514:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5514:16:10"
																			},
																			"nativeSrc": "5514:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5514:18:10"
																		},
																		"nativeSrc": "5514:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5514:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5503:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5503:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5509:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5509:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5500:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5500:2:10"
																},
																"nativeSrc": "5500:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5500:11:10"
															},
															"nativeSrc": "5497:37:10",
															"nodeType": "YulIf",
															"src": "5497:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5412:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5443:1:10",
														"nodeType": "YulTypedName",
														"src": "5443:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5446:1:10",
														"nodeType": "YulTypedName",
														"src": "5446:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5452:4:10",
														"nodeType": "YulTypedName",
														"src": "5452:4:10",
														"type": ""
													}
												],
												"src": "5412:128:10"
											},
											{
												"body": {
													"nativeSrc": "5719:231:10",
													"nodeType": "YulBlock",
													"src": "5719:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5736:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5736:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5747:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5747:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5729:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:10"
																},
																"nativeSrc": "5729:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5729:21:10"
															},
															"nativeSrc": "5729:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5729:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5770:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5770:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5781:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5781:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5766:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5766:3:10"
																		},
																		"nativeSrc": "5766:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5766:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5786:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5759:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5759:6:10"
																},
																"nativeSrc": "5759:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5759:30:10"
															},
															"nativeSrc": "5759:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5759:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5809:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5809:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5820:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5820:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5805:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5805:3:10"
																		},
																		"nativeSrc": "5805:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5805:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "5825:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5825:34:10",
																		"type": "",
																		"value": "ModuleX:amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5798:6:10"
																},
																"nativeSrc": "5798:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5798:62:10"
															},
															"nativeSrc": "5798:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5798:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5880:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5891:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5891:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5876:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:10"
																		},
																		"nativeSrc": "5876:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5876:18:10"
																	},
																	{
																		"hexValue": "68616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "5896:11:10",
																		"nodeType": "YulLiteral",
																		"src": "5896:11:10",
																		"type": "",
																		"value": "han zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:10"
																},
																"nativeSrc": "5869:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5869:39:10"
															},
															"nativeSrc": "5869:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "5869:39:10"
														},
														{
															"nativeSrc": "5917:27:10",
															"nodeType": "YulAssignment",
															"src": "5917:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5929:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5929:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5940:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5925:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:10"
																},
																"nativeSrc": "5925:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5925:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5917:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5917:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5545:405:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5696:9:10",
														"nodeType": "YulTypedName",
														"src": "5696:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5710:4:10",
														"nodeType": "YulTypedName",
														"src": "5710:4:10",
														"type": ""
													}
												],
												"src": "5545:405:10"
											},
											{
												"body": {
													"nativeSrc": "6129:171:10",
													"nodeType": "YulBlock",
													"src": "6129:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6146:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6146:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6157:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6139:6:10"
																},
																"nativeSrc": "6139:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6139:21:10"
															},
															"nativeSrc": "6139:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6139:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6180:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6180:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6191:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6191:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6176:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6176:3:10"
																		},
																		"nativeSrc": "6176:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6176:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6169:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6169:6:10"
																},
																"nativeSrc": "6169:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6169:30:10"
															},
															"nativeSrc": "6169:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6169:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6230:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6230:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6215:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:10"
																		},
																		"nativeSrc": "6215:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6215:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "6235:23:10",
																		"nodeType": "YulLiteral",
																		"src": "6235:23:10",
																		"type": "",
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:10"
																},
																"nativeSrc": "6208:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6208:51:10"
															},
															"nativeSrc": "6208:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6208:51:10"
														},
														{
															"nativeSrc": "6268:26:10",
															"nodeType": "YulAssignment",
															"src": "6268:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6280:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6280:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6291:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6276:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6276:3:10"
																},
																"nativeSrc": "6276:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6276:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6268:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5955:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6106:9:10",
														"nodeType": "YulTypedName",
														"src": "6106:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6120:4:10",
														"nodeType": "YulTypedName",
														"src": "6120:4:10",
														"type": ""
													}
												],
												"src": "5955:345:10"
											},
											{
												"body": {
													"nativeSrc": "6479:179:10",
													"nodeType": "YulBlock",
													"src": "6479:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6496:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6496:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6507:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6507:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6489:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:10"
																},
																"nativeSrc": "6489:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6489:21:10"
															},
															"nativeSrc": "6489:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6489:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6530:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6541:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6541:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6526:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:10"
																		},
																		"nativeSrc": "6526:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6526:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6546:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6546:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6519:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:10"
																},
																"nativeSrc": "6519:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6519:30:10"
															},
															"nativeSrc": "6519:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6519:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6569:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6580:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6580:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6565:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:10"
																		},
																		"nativeSrc": "6565:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "6585:31:10",
																		"nodeType": "YulLiteral",
																		"src": "6585:31:10",
																		"type": "",
																		"value": "ModuleX:Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6558:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6558:6:10"
																},
																"nativeSrc": "6558:59:10",
																"nodeType": "YulFunctionCall",
																"src": "6558:59:10"
															},
															"nativeSrc": "6558:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "6558:59:10"
														},
														{
															"nativeSrc": "6626:26:10",
															"nodeType": "YulAssignment",
															"src": "6626:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6638:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6638:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6649:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6634:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:10"
																},
																"nativeSrc": "6634:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6634:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6626:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6626:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6305:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6456:9:10",
														"nodeType": "YulTypedName",
														"src": "6456:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6470:4:10",
														"nodeType": "YulTypedName",
														"src": "6470:4:10",
														"type": ""
													}
												],
												"src": "6305:353:10"
											},
											{
												"body": {
													"nativeSrc": "6709:171:10",
													"nodeType": "YulBlock",
													"src": "6709:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6740:111:10",
																"nodeType": "YulBlock",
																"src": "6740:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6761:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6761:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6768:3:10",
																							"nodeType": "YulLiteral",
																							"src": "6768:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6773:10:10",
																							"nodeType": "YulLiteral",
																							"src": "6773:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6764:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6764:3:10"
																					},
																					"nativeSrc": "6764:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6764:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6754:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6754:6:10"
																			},
																			"nativeSrc": "6754:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6754:31:10"
																		},
																		"nativeSrc": "6754:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6754:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6805:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6805:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6808:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6808:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6798:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6798:6:10"
																			},
																			"nativeSrc": "6798:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6798:15:10"
																		},
																		"nativeSrc": "6798:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6798:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6833:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6833:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6836:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6836:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6826:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6826:6:10"
																			},
																			"nativeSrc": "6826:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6826:15:10"
																		},
																		"nativeSrc": "6826:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6826:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6729:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6729:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6722:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:10"
																},
																"nativeSrc": "6722:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6722:9:10"
															},
															"nativeSrc": "6719:132:10",
															"nodeType": "YulIf",
															"src": "6719:132:10"
														},
														{
															"nativeSrc": "6860:14:10",
															"nodeType": "YulAssignment",
															"src": "6860:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6869:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6869:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6872:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6865:3:10"
																},
																"nativeSrc": "6865:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6865:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6860:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6860:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6663:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6694:1:10",
														"nodeType": "YulTypedName",
														"src": "6694:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6697:1:10",
														"nodeType": "YulTypedName",
														"src": "6697:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6703:1:10",
														"nodeType": "YulTypedName",
														"src": "6703:1:10",
														"type": ""
													}
												],
												"src": "6663:217:10"
											},
											{
												"body": {
													"nativeSrc": "6933:77:10",
													"nodeType": "YulBlock",
													"src": "6933:77:10",
													"statements": [
														{
															"nativeSrc": "6943:16:10",
															"nodeType": "YulAssignment",
															"src": "6943:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6954:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6954:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6957:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6957:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6950:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:10"
																},
																"nativeSrc": "6950:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6950:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6943:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6943:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6982:22:10",
																"nodeType": "YulBlock",
																"src": "6982:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6984:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6984:16:10"
																			},
																			"nativeSrc": "6984:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6984:18:10"
																		},
																		"nativeSrc": "6984:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6984:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6974:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6974:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6977:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6971:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6971:2:10"
																},
																"nativeSrc": "6971:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6971:10:10"
															},
															"nativeSrc": "6968:36:10",
															"nodeType": "YulIf",
															"src": "6968:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6885:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6916:1:10",
														"nodeType": "YulTypedName",
														"src": "6916:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6919:1:10",
														"nodeType": "YulTypedName",
														"src": "6919:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6925:3:10",
														"nodeType": "YulTypedName",
														"src": "6925:3:10",
														"type": ""
													}
												],
												"src": "6885:125:10"
											},
											{
												"body": {
													"nativeSrc": "7047:95:10",
													"nodeType": "YulBlock",
													"src": "7047:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7064:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7064:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7071:3:10",
																				"nodeType": "YulLiteral",
																				"src": "7071:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7076:10:10",
																				"nodeType": "YulLiteral",
																				"src": "7076:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7067:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7067:3:10"
																		},
																		"nativeSrc": "7067:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7067:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7057:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7057:6:10"
																},
																"nativeSrc": "7057:31:10",
																"nodeType": "YulFunctionCall",
																"src": "7057:31:10"
															},
															"nativeSrc": "7057:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "7057:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7104:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7107:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7107:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7097:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:10"
																},
																"nativeSrc": "7097:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7097:15:10"
															},
															"nativeSrc": "7097:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7097:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7128:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7128:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7131:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7131:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7121:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7121:6:10"
																},
																"nativeSrc": "7121:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7121:15:10"
															},
															"nativeSrc": "7121:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7121:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7015:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7015:127:10"
											},
											{
												"body": {
													"nativeSrc": "7321:176:10",
													"nodeType": "YulBlock",
													"src": "7321:176:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7338:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7338:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7349:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7349:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7331:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:10"
																},
																"nativeSrc": "7331:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7331:21:10"
															},
															"nativeSrc": "7331:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7331:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7372:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7372:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7383:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7383:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7368:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7368:3:10"
																		},
																		"nativeSrc": "7368:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7368:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7388:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7388:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7361:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7361:6:10"
																},
																"nativeSrc": "7361:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7361:30:10"
															},
															"nativeSrc": "7361:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7361:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7422:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:10"
																		},
																		"nativeSrc": "7407:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
																		"kind": "string",
																		"nativeSrc": "7427:28:10",
																		"nodeType": "YulLiteral",
																		"src": "7427:28:10",
																		"type": "",
																		"value": "ModuleX:Total amount is 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:10"
																},
																"nativeSrc": "7400:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7400:56:10"
															},
															"nativeSrc": "7400:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "7400:56:10"
														},
														{
															"nativeSrc": "7465:26:10",
															"nodeType": "YulAssignment",
															"src": "7465:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7477:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7477:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7488:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7488:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7473:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7473:3:10"
																},
																"nativeSrc": "7473:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7473:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7465:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7465:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7147:350:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7298:9:10",
														"nodeType": "YulTypedName",
														"src": "7298:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7312:4:10",
														"nodeType": "YulTypedName",
														"src": "7312:4:10",
														"type": ""
													}
												],
												"src": "7147:350:10"
											},
											{
												"body": {
													"nativeSrc": "7554:116:10",
													"nodeType": "YulBlock",
													"src": "7554:116:10",
													"statements": [
														{
															"nativeSrc": "7564:20:10",
															"nodeType": "YulAssignment",
															"src": "7564:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7579:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7579:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7582:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7582:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7575:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7575:3:10"
																},
																"nativeSrc": "7575:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7575:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7564:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7564:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7642:22:10",
																"nodeType": "YulBlock",
																"src": "7642:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7644:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7644:16:10"
																			},
																			"nativeSrc": "7644:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7644:18:10"
																		},
																		"nativeSrc": "7644:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7644:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7613:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7613:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7606:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7606:6:10"
																				},
																				"nativeSrc": "7606:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7606:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7620:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "7620:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7627:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "7627:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7636:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "7636:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7623:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7623:3:10"
																						},
																						"nativeSrc": "7623:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7623:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7617:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "7617:2:10"
																				},
																				"nativeSrc": "7617:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7617:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7603:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7603:2:10"
																		},
																		"nativeSrc": "7603:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7603:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7596:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7596:6:10"
																},
																"nativeSrc": "7596:45:10",
																"nodeType": "YulFunctionCall",
																"src": "7596:45:10"
															},
															"nativeSrc": "7593:71:10",
															"nodeType": "YulIf",
															"src": "7593:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7502:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7533:1:10",
														"nodeType": "YulTypedName",
														"src": "7533:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7536:1:10",
														"nodeType": "YulTypedName",
														"src": "7536:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7542:7:10",
														"nodeType": "YulTypedName",
														"src": "7542:7:10",
														"type": ""
													}
												],
												"src": "7502:168:10"
											},
											{
												"body": {
													"nativeSrc": "7756:103:10",
													"nodeType": "YulBlock",
													"src": "7756:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7802:16:10",
																"nodeType": "YulBlock",
																"src": "7802:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7811:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7811:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7814:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7814:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7804:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7804:6:10"
																			},
																			"nativeSrc": "7804:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7804:12:10"
																		},
																		"nativeSrc": "7804:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7804:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7773:3:10"
																		},
																		"nativeSrc": "7773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:10"
																},
																"nativeSrc": "7769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7769:32:10"
															},
															"nativeSrc": "7766:52:10",
															"nodeType": "YulIf",
															"src": "7766:52:10"
														},
														{
															"nativeSrc": "7827:26:10",
															"nodeType": "YulAssignment",
															"src": "7827:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7843:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7843:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7837:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7837:5:10"
																},
																"nativeSrc": "7837:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7837:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7675:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7722:9:10",
														"nodeType": "YulTypedName",
														"src": "7722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7733:7:10",
														"nodeType": "YulTypedName",
														"src": "7733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7745:6:10",
														"nodeType": "YulTypedName",
														"src": "7745:6:10",
														"type": ""
													}
												],
												"src": "7675:184:10"
											},
											{
												"body": {
													"nativeSrc": "8038:234:10",
													"nodeType": "YulBlock",
													"src": "8038:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8066:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8048:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8048:6:10"
																},
																"nativeSrc": "8048:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8048:21:10"
															},
															"nativeSrc": "8048:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8048:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8089:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8089:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8100:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8100:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8085:3:10"
																		},
																		"nativeSrc": "8085:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8085:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8105:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8105:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8078:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8078:6:10"
																},
																"nativeSrc": "8078:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8078:30:10"
															},
															"nativeSrc": "8078:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8078:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8128:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8139:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8139:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8124:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8124:3:10"
																		},
																		"nativeSrc": "8124:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "8144:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8144:34:10",
																		"type": "",
																		"value": "ModuleX:Stake amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8117:6:10"
																},
																"nativeSrc": "8117:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8117:62:10"
															},
															"nativeSrc": "8117:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8117:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8199:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8199:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8210:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8210:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8195:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8195:3:10"
																		},
																		"nativeSrc": "8195:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8195:18:10"
																	},
																	{
																		"hexValue": "61746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "8215:14:10",
																		"nodeType": "YulLiteral",
																		"src": "8215:14:10",
																		"type": "",
																		"value": "ater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8188:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8188:6:10"
																},
																"nativeSrc": "8188:42:10",
																"nodeType": "YulFunctionCall",
																"src": "8188:42:10"
															},
															"nativeSrc": "8188:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "8188:42:10"
														},
														{
															"nativeSrc": "8239:27:10",
															"nodeType": "YulAssignment",
															"src": "8239:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8251:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8251:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8262:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8247:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:10"
																},
																"nativeSrc": "8247:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8247:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8239:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7864:408:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8015:9:10",
														"nodeType": "YulTypedName",
														"src": "8015:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8029:4:10",
														"nodeType": "YulTypedName",
														"src": "8029:4:10",
														"type": ""
													}
												],
												"src": "7864:408:10"
											},
											{
												"body": {
													"nativeSrc": "8451:181:10",
													"nodeType": "YulBlock",
													"src": "8451:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8468:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8468:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8479:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8479:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8461:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8461:6:10"
																},
																"nativeSrc": "8461:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8461:21:10"
															},
															"nativeSrc": "8461:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8461:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8502:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8502:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8513:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8513:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8498:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8498:3:10"
																		},
																		"nativeSrc": "8498:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8498:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8518:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8518:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8491:6:10"
																},
																"nativeSrc": "8491:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8491:30:10"
															},
															"nativeSrc": "8491:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8491:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8541:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8541:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8552:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8552:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8537:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8537:3:10"
																		},
																		"nativeSrc": "8537:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8537:18:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
																		"kind": "string",
																		"nativeSrc": "8557:33:10",
																		"nodeType": "YulLiteral",
																		"src": "8557:33:10",
																		"type": "",
																		"value": "ModuleX:Use longer lock_period!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8530:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:10"
																},
																"nativeSrc": "8530:61:10",
																"nodeType": "YulFunctionCall",
																"src": "8530:61:10"
															},
															"nativeSrc": "8530:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "8530:61:10"
														},
														{
															"nativeSrc": "8600:26:10",
															"nodeType": "YulAssignment",
															"src": "8600:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8612:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8612:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8623:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8623:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8608:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:10"
																},
																"nativeSrc": "8608:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8608:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8600:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8600:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8277:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8428:9:10",
														"nodeType": "YulTypedName",
														"src": "8428:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8442:4:10",
														"nodeType": "YulTypedName",
														"src": "8442:4:10",
														"type": ""
													}
												],
												"src": "8277:355:10"
											},
											{
												"body": {
													"nativeSrc": "8684:168:10",
													"nodeType": "YulBlock",
													"src": "8684:168:10",
													"statements": [
														{
															"nativeSrc": "8694:82:10",
															"nodeType": "YulAssignment",
															"src": "8694:82:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8709:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8709:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8712:26:10",
																				"nodeType": "YulLiteral",
																				"src": "8712:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8705:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:10"
																		},
																		"nativeSrc": "8705:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8705:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "8745:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "8745:1:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8748:26:10",
																				"nodeType": "YulLiteral",
																				"src": "8748:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8741:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8741:3:10"
																		},
																		"nativeSrc": "8741:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8741:34:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8701:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8701:3:10"
																},
																"nativeSrc": "8701:75:10",
																"nodeType": "YulFunctionCall",
																"src": "8701:75:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8694:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8694:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8824:22:10",
																"nodeType": "YulBlock",
																"src": "8824:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8826:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8826:16:10"
																			},
																			"nativeSrc": "8826:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8826:18:10"
																		},
																		"nativeSrc": "8826:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8826:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "8791:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8791:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8796:26:10",
																		"nodeType": "YulLiteral",
																		"src": "8796:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8788:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8788:2:10"
																},
																"nativeSrc": "8788:35:10",
																"nodeType": "YulFunctionCall",
																"src": "8788:35:10"
															},
															"nativeSrc": "8785:61:10",
															"nodeType": "YulIf",
															"src": "8785:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "8637:215:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8667:1:10",
														"nodeType": "YulTypedName",
														"src": "8667:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8670:1:10",
														"nodeType": "YulTypedName",
														"src": "8670:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8676:3:10",
														"nodeType": "YulTypedName",
														"src": "8676:3:10",
														"type": ""
													}
												],
												"src": "8637:215:10"
											},
											{
												"body": {
													"nativeSrc": "9040:239:10",
													"nodeType": "YulBlock",
													"src": "9040:239:10",
													"statements": [
														{
															"nativeSrc": "9050:27:10",
															"nodeType": "YulAssignment",
															"src": "9050:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9062:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9062:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9073:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9073:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9058:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9058:3:10"
																},
																"nativeSrc": "9058:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9058:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9050:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9050:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9093:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9104:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9104:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9086:6:10"
																},
																"nativeSrc": "9086:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9086:25:10"
															},
															"nativeSrc": "9086:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "9086:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9131:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9131:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9142:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9142:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9127:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9127:3:10"
																		},
																		"nativeSrc": "9127:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9151:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9151:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9159:26:10",
																				"nodeType": "YulLiteral",
																				"src": "9159:26:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9147:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9147:3:10"
																		},
																		"nativeSrc": "9147:39:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9147:39:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9120:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:10"
																},
																"nativeSrc": "9120:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9120:67:10"
															},
															"nativeSrc": "9120:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "9120:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9207:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9207:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9218:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9218:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9203:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9203:3:10"
																		},
																		"nativeSrc": "9203:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9203:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9223:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9223:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9196:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9196:6:10"
																},
																"nativeSrc": "9196:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9196:34:10"
															},
															"nativeSrc": "9196:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9196:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9250:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9250:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9261:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9261:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9246:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9246:3:10"
																		},
																		"nativeSrc": "9246:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9246:18:10"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9266:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:10"
																},
																"nativeSrc": "9239:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9239:34:10"
															},
															"nativeSrc": "9239:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9239:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8857:422:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8985:9:10",
														"nodeType": "YulTypedName",
														"src": "8985:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8996:6:10",
														"nodeType": "YulTypedName",
														"src": "8996:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9004:6:10",
														"nodeType": "YulTypedName",
														"src": "9004:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9012:6:10",
														"nodeType": "YulTypedName",
														"src": "9012:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9020:6:10",
														"nodeType": "YulTypedName",
														"src": "9020:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9031:4:10",
														"nodeType": "YulTypedName",
														"src": "9031:4:10",
														"type": ""
													}
												],
												"src": "8857:422:10"
											},
											{
												"body": {
													"nativeSrc": "9331:88:10",
													"nodeType": "YulBlock",
													"src": "9331:88:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9362:22:10",
																"nodeType": "YulBlock",
																"src": "9362:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9364:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9364:16:10"
																			},
																			"nativeSrc": "9364:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9364:18:10"
																		},
																		"nativeSrc": "9364:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9364:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9347:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9347:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9358:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9358:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9354:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:10"
																		},
																		"nativeSrc": "9354:6:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9354:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9344:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9344:2:10"
																},
																"nativeSrc": "9344:17:10",
																"nodeType": "YulFunctionCall",
																"src": "9344:17:10"
															},
															"nativeSrc": "9341:43:10",
															"nodeType": "YulIf",
															"src": "9341:43:10"
														},
														{
															"nativeSrc": "9393:20:10",
															"nodeType": "YulAssignment",
															"src": "9393:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9411:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9411:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:10"
																},
																"nativeSrc": "9400:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9400:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9393:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9393:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9284:135:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9313:5:10",
														"nodeType": "YulTypedName",
														"src": "9313:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9323:3:10",
														"nodeType": "YulTypedName",
														"src": "9323:3:10",
														"type": ""
													}
												],
												"src": "9284:135:10"
											},
											{
												"body": {
													"nativeSrc": "9553:145:10",
													"nodeType": "YulBlock",
													"src": "9553:145:10",
													"statements": [
														{
															"nativeSrc": "9563:26:10",
															"nodeType": "YulAssignment",
															"src": "9563:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9575:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9575:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9586:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9586:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9571:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9571:3:10"
																},
																"nativeSrc": "9571:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9571:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9563:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9563:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9605:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9605:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9620:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9620:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9636:3:10",
																								"nodeType": "YulLiteral",
																								"src": "9636:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9641:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9641:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9632:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9632:3:10"
																						},
																						"nativeSrc": "9632:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9632:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9645:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9645:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9628:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:10"
																				},
																				"nativeSrc": "9628:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9616:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9616:3:10"
																		},
																		"nativeSrc": "9616:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:10"
																},
																"nativeSrc": "9598:51:10",
																"nodeType": "YulFunctionCall",
																"src": "9598:51:10"
															},
															"nativeSrc": "9598:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "9598:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9669:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9669:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9680:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9680:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9665:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9665:3:10"
																		},
																		"nativeSrc": "9665:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9665:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9685:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9685:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9658:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9658:6:10"
																},
																"nativeSrc": "9658:34:10",
																"nodeType": "YulFunctionCall",
																"src": "9658:34:10"
															},
															"nativeSrc": "9658:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "9658:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9424:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9514:9:10",
														"nodeType": "YulTypedName",
														"src": "9514:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9525:6:10",
														"nodeType": "YulTypedName",
														"src": "9525:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9533:6:10",
														"nodeType": "YulTypedName",
														"src": "9533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9544:4:10",
														"nodeType": "YulTypedName",
														"src": "9544:4:10",
														"type": ""
													}
												],
												"src": "9424:274:10"
											},
											{
												"body": {
													"nativeSrc": "9860:214:10",
													"nodeType": "YulBlock",
													"src": "9860:214:10",
													"statements": [
														{
															"nativeSrc": "9870:26:10",
															"nodeType": "YulAssignment",
															"src": "9870:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9882:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9882:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9893:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9878:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9878:3:10"
																},
																"nativeSrc": "9878:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9878:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9870:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9870:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9912:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9912:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9927:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9927:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9943:3:10",
																								"nodeType": "YulLiteral",
																								"src": "9943:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9948:1:10",
																								"nodeType": "YulLiteral",
																								"src": "9948:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9939:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9939:3:10"
																						},
																						"nativeSrc": "9939:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9939:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9952:1:10",
																						"nodeType": "YulLiteral",
																						"src": "9952:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9935:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9935:3:10"
																				},
																				"nativeSrc": "9935:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9935:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9923:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:10"
																		},
																		"nativeSrc": "9923:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9923:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9905:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9905:6:10"
																},
																"nativeSrc": "9905:51:10",
																"nodeType": "YulFunctionCall",
																"src": "9905:51:10"
															},
															"nativeSrc": "9905:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "9905:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9976:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9976:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9987:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9987:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9972:3:10"
																		},
																		"nativeSrc": "9972:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9972:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9996:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9996:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10012:3:10",
																								"nodeType": "YulLiteral",
																								"src": "10012:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10017:1:10",
																								"nodeType": "YulLiteral",
																								"src": "10017:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10008:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10008:3:10"
																						},
																						"nativeSrc": "10008:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10008:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10021:1:10",
																						"nodeType": "YulLiteral",
																						"src": "10021:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10004:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10004:3:10"
																				},
																				"nativeSrc": "10004:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10004:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9992:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9992:3:10"
																		},
																		"nativeSrc": "9992:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9992:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9965:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9965:6:10"
																},
																"nativeSrc": "9965:60:10",
																"nodeType": "YulFunctionCall",
																"src": "9965:60:10"
															},
															"nativeSrc": "9965:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "9965:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10045:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10045:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10056:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10056:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10041:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10041:3:10"
																		},
																		"nativeSrc": "10041:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10041:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10061:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10061:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10034:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10034:6:10"
																},
																"nativeSrc": "10034:34:10",
																"nodeType": "YulFunctionCall",
																"src": "10034:34:10"
															},
															"nativeSrc": "10034:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "10034:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9703:371:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9813:9:10",
														"nodeType": "YulTypedName",
														"src": "9813:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9824:6:10",
														"nodeType": "YulTypedName",
														"src": "9824:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9832:6:10",
														"nodeType": "YulTypedName",
														"src": "9832:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9840:6:10",
														"nodeType": "YulTypedName",
														"src": "9840:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9851:4:10",
														"nodeType": "YulTypedName",
														"src": "9851:4:10",
														"type": ""
													}
												],
												"src": "9703:371:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ModuleX:Invalid Stake ID!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ModuleX:Early Withdrawal is not \")\n        mstore(add(headStart, 96), \"permitted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ModuleX:Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ModuleX:amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ModuleX:Burnt tokens!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ModuleX:Insufficient balance!\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ModuleX:Total amount is 0!\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ModuleX:Stake amount must be gre\")\n        mstore(add(headStart, 96), \"ater than 0!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ModuleX:Use longer lock_period!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint96(x, y) -> sum\n    {\n        sum := add(and(x, 0xffffffffffffffffffffffff), and(y, 0xffffffffffffffffffffffff))\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"860": [
									{
										"length": 32,
										"start": 370
									},
									{
										"length": 32,
										"start": 737
									},
									{
										"length": 32,
										"start": 1677
									},
									{
										"length": 32,
										"start": 2295
									},
									{
										"length": 32,
										"start": 3544
									}
								],
								"863": [
									{
										"length": 32,
										"start": 440
									},
									{
										"length": 32,
										"start": 567
									},
									{
										"length": 32,
										"start": 1226
									},
									{
										"length": 32,
										"start": 2383
									},
									{
										"length": 32,
										"start": 3032
									},
									{
										"length": 32,
										"start": 3236
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB109BEEC GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xB6BAFFE3 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x229 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x109CF399 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 PUSH2 0x194 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x147 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x147 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x32B PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x121B JUMP JUMPDEST PUSH2 0xF47 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x365 JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND LT ISZERO PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x7065726D697474656421 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0x4F9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xFE3 JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0x100F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x56B PUSH2 0xFE3 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x57C JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x6B4 CALLER PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x74D PUSH2 0xFE3 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x76D JUMPI PUSH2 0x76D PUSH2 0x131A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7A7 JUMPI PUSH2 0x7A7 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4D6F64756C65583A4275726E7420746F6B656E7321 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x833 SWAP1 DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP4 ADD SSTORE SWAP3 POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x86E JUMPI PUSH2 0x86E PUSH2 0x131A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x891 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 ADD PUSH2 0x750 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x926 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xF84 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x129F JUMP JUMPDEST PUSH2 0x97F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP5 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x9CA JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x123B JUMP JUMPDEST POP POP POP PUSH0 SWAP3 DUP4 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xA42 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA74 PUSH10 0x69E10DE76676D0800000 DUP5 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xA9C JUMPI PUSH2 0xA88 PUSH1 0xB DUP4 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xA92 SWAP1 DUP8 PUSH2 0x12E8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA8 PUSH1 0xB DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH2 0xAC1 DUP7 PUSH1 0x1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xADF SWAP1 DUP8 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xAF7 PUSH1 0xB DUP5 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB0B PUSH10 0x69E10DE76676D0800000 DUP6 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB15 SWAP1 DUP8 PUSH2 0x1286 JUMP JUMPDEST PUSH2 0xB1F SWAP1 DUP9 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH2 0xB38 DUP7 PUSH1 0x1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB4E PUSH1 0xB DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB62 PUSH10 0x69E10DE76676D0800000 DUP11 PUSH2 0x132E JUMP JUMPDEST PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0xB76 SWAP1 DUP4 PUSH2 0x1307 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0xB3B JUMP JUMPDEST POP DUP7 DUP3 PUSH2 0xB8D DUP4 DUP7 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBC3 SWAP1 DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC25 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1345 JUMP JUMPDEST LT ISZERO PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xCCB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0xF84 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD06 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x61746572207468616E203021 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x2A30 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND LT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xE08 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x105E JUMP JUMPDEST PUSH0 PUSH2 0xE13 DUP6 TIMESTAMP PUSH2 0x135C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE1F DUP6 PUSH2 0xA26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xE39 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0x60 SWAP5 DUP6 ADD DUP9 SWAP1 MSTORE PUSH0 DUP8 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP9 MLOAD SWAP5 DUP10 ADD MLOAD SWAP5 SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR DUP5 SSTORE DUP6 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH1 0x3 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xEB7 SWAP1 DUP5 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0xF35 DUP4 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 SWAP8 SWAP2 SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF4F PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF78 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0xF81 DUP2 PUSH2 0x100F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x926 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x109D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1097 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD PUSH2 0xFB1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x10D3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x381 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1131 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1151 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1167 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1177 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x11A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E6 DUP4 PUSH2 0x11B1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1234 DUP3 PUSH2 0x11B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x68616E207A65726F21 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1302 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1355 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1299 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x1272 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH11 0xDBFD54A91A954691F255E 0x21 CALL 0xAA DUP1 DIV PUSH9 0x410FD1D8C1399BA671 PUSH6 0x41BFBC64736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "278:6784:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:58;;682:15;639:58;;;;;160:25:10;;;148:2;133:18;639:58:8;;;;;;;;4570:669;;;;;;:::i;:::-;;:::i;727:29::-;;;;;;;;-1:-1:-1;;;;;605:32:10;;;587:51;;575:2;560:18;727:29:8;427:217:10;2293:101:0;;;:::i;:::-;;1841:105:8;1931:6;1841:105;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;508:45:8;;542:11;508:45;;;;;-1:-1:-1;;;;;1019:39:10;;;1001:58;;989:2;974:18;508:45:8;857:208:10;1041:32:8;;;;;;5247:556;;;;;;:::i;:::-;;:::i;1006:28::-;;;;;;819:30;;;;;1954:101;;;:::i;3485:129::-;;;:::i;5811:712::-;;;;;;:::i;:::-;;:::i;6531:238::-;;;;;;:::i;:::-;;:::i;2063:395::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2285:32:10;;;2267:51;;2349:2;2334:18;;2327:34;;;;2377:18;;;2370:34;2435:2;2420:18;;2413:34;2254:3;2239:19;2063:395:8;2036:417:10;2577:900:8;;;;;;:::i;:::-;;:::i;1730:103::-;1819:5;1730:103;;6777:280;;;;;;:::i;:::-;;:::i;3622:940::-;;;;;;:::i;:::-;;:::i;:::-;;;;3532:25:10;;;3588:2;3573:18;;3566:34;;;;3505:18;3622:940:8;3358:248:10;2543:215:0;;;;;;:::i;:::-;;:::i;4570:669:8:-;4642:4;4624:8;1463:1;1452:8;:12;:39;;;;;1479:12;;1468:8;:23;1452:39;1444:77;;;;-1:-1:-1;;;1444:77:8;;;;;;;:::i;:::-;;;;;;;;;4664:28:::1;4695:16:::0;;;:6:::1;:16;::::0;;;;4730:13;;-1:-1:-1;;;;;4730:13:8::1;735:10:6::0;4730:29:8::1;4722:73;;;::::0;-1:-1:-1;;;4722:73:8;;4358:2:10;4722:73:8::1;::::0;::::1;4340:21:10::0;4397:2;4377:18;;;4370:30;4436:33;4416:18;;;4409:61;4487:18;;4722:73:8::1;4156:355:10::0;4722:73:8::1;4828:16:::0;;-1:-1:-1;;;4828:16:8;::::1;-1:-1:-1::0;;;;;4828:16:8::1;2545:15:::0;-1:-1:-1;;;;;4814:30:8::1;;;4806:85;;;::::0;-1:-1:-1;;;4806:85:8;;4718:2:10;4806:85:8::1;::::0;::::1;4700:21:10::0;4757:2;4737:18;;;4730:30;4796:34;4776:18;;;4769:62;-1:-1:-1;;;4847:18:10;;;4840:40;4897:19;;4806:85:8::1;4516:406:10::0;4806:85:8::1;4935:1;4911:7;:21;;;:25;4903:62;;;::::0;-1:-1:-1;;;4903:62:8;;5129:2:10;4903:62:8::1;::::0;::::1;5111:21:10::0;5168:2;5148:18;;;5141:30;5207:26;5187:18;;;5180:54;5251:18;;4903:62:8::1;4927:348:10::0;4903:62:8::1;4997:21;::::0;::::1;::::0;5029:48:::1;:6;-1:-1:-1::0;;;;;5029:19:8::1;735:10:6::0;4997:21:8;5029:19:::1;:48::i;:::-;5113:13;5093:16;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5161:1:8::1;5137:21;::::0;::::1;:25:::0;5179:20:::1;::::0;160:25:10;;;5179:20:8::1;::::0;148:2:10;133:18;5179:20:8::1;;;;;;;5218:13:::0;4570:669;-1:-1:-1;;;;4570:669:8:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5247:556:8:-;1531:13:0;:11;:13::i;:::-;5332:8:8::1;1463:1;1452:8;:12;:39;;;;;1479:12;;1468:8;:23;1452:39;1444:77;;;;-1:-1:-1::0;;;1444:77:8::1;;;;;;;:::i;:::-;5376:1:::2;5367:6;:10;5358:65;;;;-1:-1:-1::0;;;5358:65:8::2;;;;;;;:::i;:::-;5434:28;5465:16:::0;;;:6:::2;:16;::::0;;;;5514;;-1:-1:-1;;;5514:16:8;::::2;-1:-1:-1::0;;;;;5514:16:8::2;2545:15:::0;-1:-1:-1;;;;;5500:30:8::2;;;5492:64;;;::::0;-1:-1:-1;;;5492:64:8;;6157:2:10;5492:64:8::2;::::0;::::2;6139:21:10::0;6196:2;6176:18;;;6169:30;-1:-1:-1;;;6215:18:10;;;6208:51;6276:18;;5492:64:8::2;5955:345:10::0;5492:64:8::2;5586:7;:20;;;5576:6;:30;;5568:72;;;::::0;-1:-1:-1;;;5568:72:8;;6507:2:10;5568:72:8::2;::::0;::::2;6489:21:10::0;6546:2;6526:18;;;6519:30;6585:31;6565:18;;;6558:59;6634:18;;5568:72:8::2;6305:353:10::0;5568:72:8::2;5652:54;735:10:6::0;5685:20:8::2;::::0;::::2;::::0;-1:-1:-1;;;;;5652:5:8::2;:18;::::0;:54;:18:::2;:54::i;:::-;5741:6;5717:7;:20;;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5763:32:8::2;::::0;;3532:25:10;;;3588:2;3573:18;;3566:34;;;5763:32:8::2;::::0;3505:18:10;5763:32:8::2;;;;;;;5347:456;1554:1:0::1;5247:556:8::0;;:::o;1954:101::-;2002:4;2046:1;2031:12;;:16;;;;:::i;:::-;2024:23;;1954:101;:::o;3485:129::-;3532:4;608:2;682:15;3561:12;;:32;;;;:::i;:::-;:45;;;;:::i;5811:712::-;1531:13:0;:11;:13::i;:::-;5901:17:8::1;::::0;5933:459:::1;5949:20:::0;;::::1;5933:459;;;6023:12;;6008:9;;6018:1;6008:12;;;;;;;:::i;:::-;;;;;;;:27;6000:65;;;;-1:-1:-1::0;;;6000:65:8::1;;;;;;;:::i;:::-;6080:28;6111:6;:20;6118:9;;6128:1;6118:12;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;6111:20:::0;;-1:-1:-1;6111:20:8;::::1;::::0;;;;;;-1:-1:-1;6111:20:8;6168:16;;6111:20;;-1:-1:-1;;;;6168:16:8;::::1;-1:-1:-1::0;;;;;6168:16:8::1;2545:15:::0;-1:-1:-1;;;;;6154:30:8::1;;;6146:64;;;::::0;-1:-1:-1;;;6146:64:8;;6157:2:10;6146:64:8::1;::::0;::::1;6139:21:10::0;6196:2;6176:18;;;6169:30;-1:-1:-1;;;6215:18:10;;;6208:51;6276:18;;6146:64:8::1;5955:345:10::0;6146:64:8::1;6241:20;::::0;::::1;::::0;6225:36:::1;::::0;;::::1;:::i;:::-;6299:1;6276:20;::::0;::::1;:24:::0;6225:36;-1:-1:-1;6330:50:8::1;6345:9:::0;;6355:1;6345:12;;::::1;;;;;:::i;:::-;;;;;;;6359:7;:20;;;6330:50;;;;;;3532:25:10::0;;;3588:2;3573:18;;3566:34;3520:2;3505:18;;3358:248;6330:50:8::1;;;;;;;;-1:-1:-1::0;5971:3:8::1;;5933:459;;;;6425:1;6410:12;:16;6402:55;;;::::0;-1:-1:-1;;;6402:55:8;;7349:2:10;6402:55:8::1;::::0;::::1;7331:21:10::0;7388:2;7368:18;;;7361:30;7427:28;7407:18;;;7400:56;7473:18;;6402:55:8::1;7147:350:10::0;6402:55:8::1;6469:46;:5;-1:-1:-1::0;;;;;6469:18:8::1;735:10:6::0;6502:12:8;6469:18:::1;:46::i;:::-;5890:633;5811:712:::0;;:::o;6531:238::-;6608:1;6599:6;:10;6590:65;;;;-1:-1:-1;;;6590:65:8;;;;;;;:::i;:::-;6666:60;:6;-1:-1:-1;;;;;6666:23:8;735:10:6;6712:4:8;6719:6;6666:23;:60::i;:::-;6742:19;;160:25:10;;;6742:19:8;;148:2:10;133:18;6742:19:8;;;;;;;6531:238;:::o;2063:395::-;2164:13;2188;2212:17;2240:18;2120:8;1463:1;1452:8;:12;:39;;;;;1479:12;;1468:8;:23;1452:39;1444:77;;;;-1:-1:-1;;;1444:77:8;;;;;;;:::i;:::-;-1:-1:-1;;;2298:16:8::1;::::0;;;-1:-1:-1;;2298:6:8::1;:16;::::0;;;;;;;:22;;2375:29;;::::1;::::0;2419:30:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2298:22:8;::::1;::::0;-1:-1:-1;;;2335:25:8;;::::1;-1:-1:-1::0;;;;;2335:25:8::1;::::0;2063:395::o;2577:900::-;2641:4;2664:17;2684:4;2664:24;;2699:15;2732:12;2717;;:27;;;;:::i;:::-;2699:45;;2755:10;682:15;2768:12;;:32;;;;:::i;:::-;2755:45;-1:-1:-1;2811:11:8;2825:30;682:15;2825:10;:30;:::i;:::-;2811:44;;2878:6;2869:5;:15;2866:604;;2931:18;608:2;2931:5;:18;:::i;:::-;2917:33;;:12;:33;:::i;:::-;2910:40;2577:900;-1:-1:-1;;;;;;2577:900:8:o;2866:604::-;3002:10;3078:18;608:2;3078:5;:18;:::i;:::-;3063:12;;682:15;3030:9;:5;3038:1;3030:9;:::i;:::-;3029:31;;;;:::i;:::-;:46;;;;:::i;:::-;3015:61;;:12;:61;:::i;:::-;:82;;;;:::i;:::-;3002:95;-1:-1:-1;3112:11:8;3182:19;608:2;3182:6;:19;:::i;:::-;3153:26;682:15;3153:6;:26;:::i;:::-;3140:39;;:10;:39;:::i;:::-;3126:54;;:12;:54;:::i;:::-;:76;;;;:::i;:::-;3112:90;-1:-1:-1;3217:13:8;;3260:9;:5;3268:1;3260:9;:::i;:::-;3253:16;;3249:148;3275:6;3271:1;:10;3249:148;;;3366:14;608:2;3366:1;:14;:::i;:::-;3332:32;682:15;3332:12;:32;:::i;:::-;:49;;;;:::i;:::-;3320:61;;;;:::i;:::-;;-1:-1:-1;3283:3:8;;3249:148;;;-1:-1:-1;3446:12:8;3438:6;3419:16;3427:8;3419:5;:16;:::i;:::-;:25;;;;:::i;:::-;3418:40;;;;:::i;:::-;3411:47;2577:900;-1:-1:-1;;;;;;;;;2577:900:8:o;6777:280::-;1531:13:0;:11;:13::i;:::-;6914:16:8::1;::::0;6905:25:::1;::::0;:6;:25:::1;:::i;:::-;6870:31;::::0;-1:-1:-1;;;6870:31:8;;6895:4:::1;6870:31;::::0;::::1;587:51:10::0;6870:6:8::1;-1:-1:-1::0;;;;;6870:16:8::1;::::0;::::1;::::0;560:18:10;;6870:31:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6862:102;;;::::0;-1:-1:-1;;;6862:102:8;;6507:2:10;6862:102:8::1;::::0;::::1;6489:21:10::0;6546:2;6526:18;;;6519:30;6585:31;6565:18;;;6558:59;6634:18;;6862:102:8::1;6305:353:10::0;6862:102:8::1;6975:31;-1:-1:-1::0;;;;;6975:6:8::1;:19;6995:2:::0;6999:6;6975:19:::1;:31::i;:::-;7038:2;-1:-1:-1::0;;;;;7022:27:8::1;;7042:6;7022:27;;;;160:25:10::0;;148:2;133:18;;14:177;7022:27:8::1;;;;;;;;6777:280:::0;;:::o;3622:940::-;3693:4;3699;3744:1;3729:12;:16;3721:73;;;;-1:-1:-1;;;3721:73:8;;8066:2:10;3721:73:8;;;8048:21:10;8105:2;8085:18;;;8078:30;8144:34;8124:18;;;8117:62;-1:-1:-1;;;8195:18:10;;;8188:42;8247:19;;3721:73:8;7864:408:10;3721:73:8;542:11;-1:-1:-1;;;;;3813:23:8;;;;3805:67;;;;-1:-1:-1;;;3805:67:8;;8479:2:10;3805:67:8;;;8461:21:10;8518:2;8498:18;;;8491:30;8557:33;8537:18;;;8530:61;8608:18;;3805:67:8;8277:355:10;3805:67:8;3883:65;:5;-1:-1:-1;;;;;3883:22:8;735:10:6;3928:4:8;3935:12;3883:22;:65::i;:::-;3960:15;3978:24;3991:11;2545:15;3978:24;:::i;:::-;3960:42;;4013:18;4034:29;4050:12;4034:15;:29::i;:::-;4013:50;;4074:13;4090:12;;4074:28;;4132:176;;;;;;;;4167:12;735:10:6;;656:96;4167:12:8;-1:-1:-1;;;;;4132:176:8;;;;;-1:-1:-1;;;;;4132:176:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4113:16:8;;;:6;:16;;;;;;:195;;;;;;;;;;-1:-1:-1;;;4113:195:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4329:12;:28;;4132:176;;-1:-1:-1;4329:28:8;;4132:176;;4329:28;:::i;:::-;;;;;;;;4389:13;4369:16;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;4418:69:8;;;9086:25:10;;;-1:-1:-1;;;;;9147:39:10;;9142:2;9127:18;;9120:67;9203:18;;;9196:34;;;9261:2;9246:18;;9239:34;;;4418:69:8;;735:10:6;;4418:69:8;;;;;;9073:3:10;4418:69:8;;;4498:12;:14;;;:12;:14;;;:::i;:::-;;;;-1:-1:-1;4530:8:8;;4540:13;;-1:-1:-1;3622:940:8;;-1:-1:-1;;;;;3622:940:8:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;587:51:10::0;560:18;;2672:31:0::1;427:217:10::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1219:160:5:-;1328:43;;-1:-1:-1;;;;;9616:32:10;;;1328:43:5;;;9598:51:10;9665:18;;;9658:34;;;1301:71:5;;1321:5;;1343:14;;;;;9571:18:10;;1328:43:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:5;;;;;;;;;;;1301:19;:71::i;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;587:51:10;560:18;;1901:40:0;427:217:10;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1618:188:5:-;1745:53;;-1:-1:-1;;;;;9923:32:10;;;1745:53:5;;;9905:51:10;9992:32;;;9972:18;;;9965:60;10041:18;;;10034:34;;;1718:81:5;;1738:5;;1760:18;;;;;9878::10;;1745:53:5;9703:371:10;1718:81:5;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:5;;-1:-1:-1;;;;;605:32:10;;9033:40:5;;;587:51:10;560:18;;9033:40:5;427:217:10;196:226;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:10;;196:226;-1:-1:-1;196:226:10:o;1070:346::-;1138:6;1146;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;-1:-1:-1;;1260:23:10;;;1380:2;1365:18;;;1352:32;;-1:-1:-1;1070:346:10:o;1421:610::-;1507:6;1515;1568:2;1556:9;1547:7;1543:23;1539:32;1536:52;;;1584:1;1581;1574:12;1536:52;1624:9;1611:23;1657:18;1649:6;1646:30;1643:50;;;1689:1;1686;1679:12;1643:50;1712:22;;1765:4;1757:13;;1753:27;-1:-1:-1;1743:55:10;;1794:1;1791;1784:12;1743:55;1834:2;1821:16;1860:18;1852:6;1849:30;1846:50;;;1892:1;1889;1882:12;1846:50;1945:7;1940:2;1930:6;1927:1;1923:14;1919:2;1915:23;1911:32;1908:45;1905:65;;;1966:1;1963;1956:12;1905:65;1997:2;1989:11;;;;;2019:6;;-1:-1:-1;1421:610:10;-1:-1:-1;;;1421:610:10:o;2458:173::-;2526:20;;-1:-1:-1;;;;;2575:31:10;;2565:42;;2555:70;;2621:1;2618;2611:12;2555:70;2458:173;;;:::o;2636:300::-;2704:6;2712;2765:2;2753:9;2744:7;2740:23;2736:32;2733:52;;;2781:1;2778;2771:12;2733:52;2804:29;2823:9;2804:29;:::i;:::-;2794:39;2902:2;2887:18;;;;2874:32;;-1:-1:-1;;;2636:300:10:o;2941:412::-;3008:6;3016;3069:2;3057:9;3048:7;3044:23;3040:32;3037:52;;;3085:1;3082;3075:12;3037:52;3124:9;3111:23;-1:-1:-1;;;;;3167:5:10;3163:38;3156:5;3153:49;3143:77;;3216:1;3213;3206:12;3611:186;3670:6;3723:2;3711:9;3702:7;3698:23;3694:32;3691:52;;;3739:1;3736;3729:12;3691:52;3762:29;3781:9;3762:29;:::i;:::-;3752:39;3611:186;-1:-1:-1;;;3611:186:10:o;3802:349::-;4004:2;3986:21;;;4043:2;4023:18;;;4016:30;4082:27;4077:2;4062:18;;4055:55;4142:2;4127:18;;3802:349::o;5280:127::-;5341:10;5336:3;5332:20;5329:1;5322:31;5372:4;5369:1;5362:15;5396:4;5393:1;5386:15;5412:128;5479:9;;;5500:11;;;5497:37;;;5514:18;;:::i;:::-;5412:128;;;;:::o;5545:405::-;5747:2;5729:21;;;5786:2;5766:18;;;5759:30;5825:34;5820:2;5805:18;;5798:62;-1:-1:-1;;;5891:2:10;5876:18;;5869:39;5940:3;5925:19;;5545:405::o;6663:217::-;6703:1;6729;6719:132;;6773:10;6768:3;6764:20;6761:1;6754:31;6808:4;6805:1;6798:15;6836:4;6833:1;6826:15;6719:132;-1:-1:-1;6865:9:10;;6663:217::o;6885:125::-;6950:9;;;6971:10;;;6968:36;;;6984:18;;:::i;7015:127::-;7076:10;7071:3;7067:20;7064:1;7057:31;7107:4;7104:1;7097:15;7131:4;7128:1;7121:15;7502:168;7575:9;;;7606;;7623:15;;;7617:22;;7603:37;7593:71;;7644:18;;:::i;7675:184::-;7745:6;7798:2;7786:9;7777:7;7773:23;7769:32;7766:52;;;7814:1;7811;7804:12;7766:52;-1:-1:-1;7837:16:10;;7675:184;-1:-1:-1;7675:184:10:o;8637:215::-;-1:-1:-1;;;;;8705:34:10;;;8741;;;8701:75;;8788:35;;8785:61;;;8826:18;;:::i;9284:135::-;9323:3;9344:17;;;9341:43;;9364:18;;:::i;:::-;-1:-1:-1;9411:1:10;9400:13;;9284:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1013000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"DIFFICULTY_INTERVAL()": "207",
								"MATURITY()": "260",
								"addRewards(uint256)": "infinite",
								"batchWithdrawCREDI(uint256[])": "infinite",
								"calculateReward(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"getCREDIAddress()": "infinite",
								"getDifficulty()": "2509",
								"getStake(uint256)": "9016",
								"getStakesCount()": "2425",
								"getxCREDIAddress()": "infinite",
								"owner()": "2352",
								"pending_payments()": "2350",
								"renounceOwnership()": "infinite",
								"stake(uint96,uint256)": "infinite",
								"total_staked()": "2394",
								"transferOwnership(address)": "28461",
								"withdrawCREDI(uint256,uint256)": "infinite",
								"withdrawRewards(address,uint256)": "infinite",
								"xCREDI()": "infinite"
							},
							"internal": {
								"time_now()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 970,
									"end": 999,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 970,
									"end": 999,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1034,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1006,
									"end": 1034,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1006,
									"end": 1034,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1073,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1073,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1041,
									"end": 1073,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1549,
									"end": 1718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1549,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1643,
									"end": 1670,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1670,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1670,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1643,
									"end": 1670,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1681,
									"end": 1710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1681,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1681,
									"end": 1710,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "863"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "860"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 7062,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc6a0dbfd54a91a954691f255e21f1aa800468410fd1d8c1399ba6716541bfbc64736f6c634300081e0033",
									".code": [
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "D46149A2"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "D93C04A0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "B5FA91FE"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "B6BAFFE3"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "BECEED39"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "AC00500F"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "109CF399"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 7062,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 639,
											"end": 697,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 639,
											"end": 697,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4570,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4570,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 727,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 727,
											"end": 756,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 727,
											"end": 756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 727,
											"end": 756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 727,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 727,
											"end": 756,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 637,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 587,
											"end": 638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 587,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 575,
											"end": 577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 727,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 427,
											"end": 644,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1841,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1841,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 1841,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1841,
											"end": 1946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1058,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1059,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 857,
											"end": 1065,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1073,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5247,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5247,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1006,
											"end": 1034,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 819,
											"end": 849,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 819,
											"end": 849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 819,
											"end": 849,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1954,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3485,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 5811,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5811,
											"end": 6523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6531,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6531,
											"end": 6769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2063,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2063,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2317,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2317,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2318,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2267,
											"end": 2318,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2351,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2404,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2437,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2420,
											"end": 2438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2239,
											"end": 2258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2036,
											"end": 2453,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2577,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2577,
											"end": 3477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1730,
											"end": 1833,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 1730,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1730,
											"end": 1833,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6777,
											"end": 7057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6777,
											"end": 7057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3622,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3622,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3358,
											"end": 3606,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4632,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1491,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1479,
											"end": 1491,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1444,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4695,
											"end": 4711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4695,
											"end": 4711,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4743,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4730,
											"end": 4743,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4730,
											"end": 4743,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4730,
											"end": 4759,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4436,
											"end": 4469,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4409,
											"end": 4470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4487,
											"end": 4505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4156,
											"end": 4511,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4722,
											"end": 4795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4844,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4814,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4844,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4806,
											"end": 4891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4718,
											"end": 4720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4806,
											"end": 4891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4830,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420"
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7065726D697474656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4847,
											"end": 4865,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4847,
											"end": 4865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4897,
											"end": 4916,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4897,
											"end": 4916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4516,
											"end": 4922,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4806,
											"end": 4891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4935,
											"end": 4936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4932,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4936,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4903,
											"end": 4965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4903,
											"end": 4965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5131,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4903,
											"end": 4965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5111,
											"end": 5132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5148,
											"end": 5166,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5148,
											"end": 5166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5207,
											"end": 5233,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4927,
											"end": 5275,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4903,
											"end": 4965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4997,
											"end": 5018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4997,
											"end": 5018,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5029,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5029,
											"end": 5048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5018,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5029,
											"end": 5077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5029,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5093,
											"end": 5109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5093,
											"end": 5126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 5093,
											"end": 5126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5126,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5161,
											"end": 5162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5137,
											"end": 5158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5162,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19"
										},
										{
											"begin": 5179,
											"end": 5199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5199,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5218,
											"end": 5231,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 5239,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 5239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5332,
											"end": 5340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1464,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1479,
											"end": 1491,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1491,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1452,
											"end": 1491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1444,
											"end": 1521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1444,
											"end": 1521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5377,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5373,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5377,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5358,
											"end": 5423,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5358,
											"end": 5423,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5465,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5530,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5514,
											"end": 5530,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5514,
											"end": 5530,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5500,
											"end": 5530,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5530,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5500,
											"end": 5530,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5556,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5556,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5556,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5492,
											"end": 5556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A4275726E7420746F6B656E7321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5955,
											"end": 6300,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5492,
											"end": 5556,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5593,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5586,
											"end": 5606,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5606,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5582,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5606,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5606,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5568,
											"end": 5640,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5568,
											"end": 5640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6305,
											"end": 6658,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5568,
											"end": 5640,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5705,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5705,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5685,
											"end": 5705,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5652,
											"end": 5657,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 5652,
											"end": 5670,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5652,
											"end": 5706,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5652,
											"end": 5706,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5652,
											"end": 5706,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5741,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5724,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5737,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5717,
											"end": 5747,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5717,
											"end": 5747,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5747,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5795,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5803,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2031,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2031,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2047,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3485,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3561,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3561,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3561,
											"end": 3606,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3606,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3561,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5901,
											"end": 5918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5949,
											"end": 5969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5949,
											"end": 5969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5949,
											"end": 5969,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6023,
											"end": 6035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6023,
											"end": 6035,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6017,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6017,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6019,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6008,
											"end": 6020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6020,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6000,
											"end": 6065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6000,
											"end": 6065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6111,
											"end": 6131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6127,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6127,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6128,
											"end": 6129,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6118,
											"end": 6130,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6130,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6184,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6184,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6168,
											"end": 6184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6184,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6168,
											"end": 6184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6184,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6184,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6146,
											"end": 6210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6169,
											"end": 6199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D6F64756C65583A4275726E7420746F6B656E7321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5955,
											"end": 6300,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6146,
											"end": 6210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6241,
											"end": 6261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6241,
											"end": 6261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6241,
											"end": 6261,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6241,
											"end": 6261,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 6225,
											"end": 6261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6261,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6261,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6225,
											"end": 6261,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6261,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 6225,
											"end": 6261,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6299,
											"end": 6300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6276,
											"end": 6296,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6276,
											"end": 6300,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6261,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 6345,
											"end": 6357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6357,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6366,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6359,
											"end": 6379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6359,
											"end": 6379,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3600,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3606,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6380,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5971,
											"end": 5974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5971,
											"end": 5974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 6392,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6410,
											"end": 6426,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6457,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6402,
											"end": 6457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7351,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6402,
											"end": 6457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7331,
											"end": 7352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7361,
											"end": 7391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7455,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7147,
											"end": 7497,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6402,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6469,
											"end": 6474,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6469,
											"end": 6487,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6469,
											"end": 6515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6469,
											"end": 6515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5890,
											"end": 6523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 6523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6609,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6590,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6666,
											"end": 6689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6716,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6725,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 6666,
											"end": 6726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 6666,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6531,
											"end": 6769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2063,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2128,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1463,
											"end": 1464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1491,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1479,
											"end": 1491,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1452,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1444,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1444,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2298,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2320,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2320,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2419,
											"end": 2449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2449,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2320,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2360,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2360,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2335,
											"end": 2360,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2688,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2664,
											"end": 2688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2729,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2717,
											"end": 2729,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2717,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2717,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2768,
											"end": 2780,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2768,
											"end": 2780,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2768,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2825,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2855,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2825,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2884,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2866,
											"end": 3470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2931,
											"end": 2936,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2931,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2931,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2929,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2917,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2917,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2950,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2866,
											"end": 3470,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 2866,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3078,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3078,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3075,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3063,
											"end": 3075,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3030,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3029,
											"end": 3060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3029,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3015,
											"end": 3076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3015,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3076,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3015,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3015,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3015,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3182,
											"end": 3188,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3182,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3201,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3182,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3153,
											"end": 3159,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3153,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3179,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3153,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3150,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3140,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3126,
											"end": 3180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3138,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3126,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3180,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3126,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3126,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3126,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3202,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3260,
											"end": 3265,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3260,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3253,
											"end": 3269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3281,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 608,
											"end": 610,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3366,
											"end": 3367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3366,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3380,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3366,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 682,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3332,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3332,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3332,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3332,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3320,
											"end": 3381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3320,
											"end": 3381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3249,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3427,
											"end": 3435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3424,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3419,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3419,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 3419,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3419,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3418,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3418,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 3477,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6914,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6914,
											"end": 6930,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6905,
											"end": 6930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 6905,
											"end": 6930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6905,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6901,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6870,
											"end": 6901,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6895,
											"end": 6899,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6870,
											"end": 6901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 587,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6876,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6870,
											"end": 6886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6870,
											"end": 6886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6870,
											"end": 6901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6870,
											"end": 6901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6930,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6870,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6862,
											"end": 6964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6862,
											"end": 6964,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6616,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6558,
											"end": 6617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6305,
											"end": 6658,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6862,
											"end": 6964,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6975,
											"end": 6981,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 6975,
											"end": 6994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6999,
											"end": 7005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6975,
											"end": 7006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6975,
											"end": 7006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7038,
											"end": 7040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337"
										},
										{
											"begin": 7042,
											"end": 7048,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7022,
											"end": 7049,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 7057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 3745,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8066,
											"end": 8068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8105,
											"end": 8107,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8078,
											"end": 8108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8178,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265"
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61746572207468616E203021"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8195,
											"end": 8213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8188,
											"end": 8230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 7864,
											"end": 8272,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3721,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3813,
											"end": 3836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3836,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3836,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3813,
											"end": 3836,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8461,
											"end": 8482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8521,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8557,
											"end": 8590,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8530,
											"end": 8591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8608,
											"end": 8626,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8608,
											"end": 8626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 8277,
											"end": 8632,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3805,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3883,
											"end": 3888,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3905,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3932,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3947,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3883,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3883,
											"end": 3948,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3883,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3975,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3991,
											"end": 4002,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3978,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 4002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 4002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4034,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4034,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4102,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4090,
											"end": 4102,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4074,
											"end": 4102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4119,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4129,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4308,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4308,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4329,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4369,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9086,
											"end": 9111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9086,
											"end": 9111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9147,
											"end": 9186,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9186,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9120,
											"end": 9187,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9196,
											"end": 9230,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9196,
											"end": 9230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9196,
											"end": 9230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9261,
											"end": 9263,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9246,
											"end": 9264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9273,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9239,
											"end": 9273,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "PUSH",
											"source": 8,
											"value": "24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146"
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9073,
											"end": 9076,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4487,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4498,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 4512,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4530,
											"end": 4538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4530,
											"end": 4538,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4540,
											"end": 4553,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 4562,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3622,
											"end": 4562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 427,
											"end": 644,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9616,
											"end": 9648,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9648,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9616,
											"end": 9648,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9598,
											"end": 9649,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9692,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9571,
											"end": 9589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 587,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 427,
											"end": 644,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9923,
											"end": 9955,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9923,
											"end": 9955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9923,
											"end": 9955,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9905,
											"end": 9956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 10024,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 10024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 10024,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9965,
											"end": 10025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9878,
											"end": 9896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 9703,
											"end": 10074,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 605,
											"end": 637,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 605,
											"end": 637,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 560,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 560,
											"end": 578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 427,
											"end": 644,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 196,
											"end": 422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 369,
											"end": 392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 392,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 196,
											"end": 422,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1416,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1070,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1185,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1197,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1202,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1219,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1167,
											"end": 1219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1167,
											"end": 1219,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 1167,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1283,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1283,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1283,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1384,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1384,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1421,
											"end": 2031,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1421,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1570,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1554,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1566,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1586,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1634,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1646,
											"end": 1676,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1693,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1643,
											"end": 1693,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1643,
											"end": 1693,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 1643,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1765,
											"end": 1769,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1757,
											"end": 1770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1780,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1743,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1743,
											"end": 1798,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1796,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1743,
											"end": 1798,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1743,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1836,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1879,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1896,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1846,
											"end": 1896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1894,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1896,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1846,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 1937,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1953,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1970,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1905,
											"end": 1970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1968,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1970,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1905,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 2000,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 2031,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 2031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2631,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2458,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2606,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2607,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2555,
											"end": 2625,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2625,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 2555,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2631,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2936,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2636,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2767,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2751,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2763,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2768,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2785,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2733,
											"end": 2785,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2783,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2785,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2733,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2823,
											"end": 2832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 2804,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2833,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 2804,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2833,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2906,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2906,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2636,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3353,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2941,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3067,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3072,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 3037,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3134,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3163,
											"end": 3201,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3153,
											"end": 3202,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3143,
											"end": 3220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3797,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3611,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3709,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3721,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3726,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3743,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3691,
											"end": 3743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3741,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3743,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3691,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3781,
											"end": 3790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3762,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3791,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3762,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3791,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3797,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3611,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 4151,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 3802,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 4077,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 4151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5407,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5280,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5336,
											"end": 5339,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5332,
											"end": 5352,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5511,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5534,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 5497,
											"end": 5534,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5514,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5950,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5545,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5749,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5788,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5825,
											"end": 5859,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 5820,
											"end": 5822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5805,
											"end": 5823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5798,
											"end": 5860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5891,
											"end": 5893,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5943,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5545,
											"end": 5950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6663,
											"end": 6880,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6663,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6783,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6764,
											"end": 6784,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6798,
											"end": 6813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6841,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 6719,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6865,
											"end": 6874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6663,
											"end": 6880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6885,
											"end": 7010,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6885,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 6981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 6981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6971,
											"end": 6981,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 7004,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6968,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6968,
											"end": 7004,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6984,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 6984,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 6984,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7142,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 7015,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7086,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7071,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7067,
											"end": 7087,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7097,
											"end": 7112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7128,
											"end": 7129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7136,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7502,
											"end": 7670,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 7502,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7575,
											"end": 7584,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7638,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7639,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7639,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7603,
											"end": 7640,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7593,
											"end": 7664,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7644,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7859,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 7675,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7773,
											"end": 7796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7766,
											"end": 7818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7812,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7816,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7818,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7766,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7837,
											"end": 7853,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7675,
											"end": 7859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8637,
											"end": 8852,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 8637,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8705,
											"end": 8739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8705,
											"end": 8739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8775,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8823,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8846,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8785,
											"end": 8846,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 8826,
											"end": 8844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9419,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9284,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9344,
											"end": 9361,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9344,
											"end": 9361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9344,
											"end": 9361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 9341,
											"end": 9384,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 9364,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9411,
											"end": 9412,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9400,
											"end": 9413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9284,
											"end": 9419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"DIFFICULTY_INTERVAL()": "109cf399",
							"MATURITY()": "8e12c0cd",
							"addRewards(uint256)": "beceed39",
							"batchWithdrawCREDI(uint256[])": "bc854352",
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getDifficulty()": "b6baffe3",
							"getStake(uint256)": "ce325bf8",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"owner()": "8da5cb5b",
							"pending_payments()": "8f4729b7",
							"renounceOwnership()": "715018a6",
							"stake(uint96,uint256)": "d93c04a0",
							"total_staked()": "af7568dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCREDI(uint256,uint256)": "ac00500f",
							"withdrawRewards(address,uint256)": "d6ef7af0",
							"xCREDI()": "b109beec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credi_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xcredi_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CREDIWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURITY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stake_ids\",\"type\":\"uint256[]\"}],\"name\":\"batchWithdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xCREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ModuleX.sol\":\"ModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ModuleX.sol\":{\"keccak256\":\"0xbcb5b37a6009605f21518e82f89786320ad0390a9c3dc16a12cdc979a93c9d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e9b3ce2fec6d0e91b992daaff44266ae5064d2eff8761bdab0670ac35418088\",\"dweb:/ipfs/QmbByoH1Sxno89wwvkKRRCRPUtLKGQJsCkzxtQnbVxQtQo\"]},\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xd1ab1c30595560209e53a1a63ceae830dfbc87c37156c2d55dfb9d7d8029a771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a529f385909f4285cd720ca7934600b38243b1c497e8641372ee9ce15d7e302\",\"dweb:/ipfs/QmQz8Nui3oG9HVFqyWyJdpkCMyHqrLK5QTquREqqycm9pK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)844_storage)"
							},
							{
								"astId": 871,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes_count",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "total_staked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "pending_payments",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)844_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ModuleX.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)844_storage"
							},
							"t_struct(StakeDetails)844_storage": {
								"encoding": "inplace",
								"label": "struct ModuleX.StakeDetails",
								"members": [
									{
										"astId": 837,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 839,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 841,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "stake_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 843,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "reward_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IModuleX.sol": {
				"IModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"stake(uint96,uint256)": "d93c04a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IModuleX.sol\":\"IModuleX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xd1ab1c30595560209e53a1a63ceae830dfbc87c37156c2d55dfb9d7d8029a771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a529f385909f4285cd720ca7934600b38243b1c497e8641372ee9ce15d7e302\",\"dweb:/ipfs/QmQz8Nui3oG9HVFqyWyJdpkCMyHqrLK5QTquREqqycm9pK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 821,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/ModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/ModuleX.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IModuleX": [
							1582
						],
						"ModuleX": [
							1539
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 316,
							"src": "115:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 780,
							"src": "173:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IModuleX.sol",
							"file": "./interface/IModuleX.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1583,
							"src": "240:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IModuleX",
										"nameLocations": [
											"298:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1582,
										"src": "298:8:8"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "298:8:8"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"308:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:8"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:8"
								}
							],
							"canonicalName": "ModuleX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1539,
							"linearizedBaseContracts": [
								1539,
								147,
								809,
								1582
							],
							"name": "ModuleX",
							"nameLocation": "287:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 835,
									"libraryName": {
										"id": 832,
										"name": "SafeERC20",
										"nameLocations": [
											"331:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "331:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "325:27:8",
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"345:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "345:6:8"
										},
										"referencedDeclaration": 315,
										"src": "345:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ModuleX.StakeDetails",
									"id": 844,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "404:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "396:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "427:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "420:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 838,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "451:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "446:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "479:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "474:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "367:12:8",
									"nodeType": "StructDefinition",
									"scope": 1539,
									"src": "360:140:8",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e12c0cd",
									"id": 847,
									"mutability": "constant",
									"name": "MATURITY",
									"nameLocation": "531:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "508:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 845,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "508:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "542:11:8",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10800_by_1",
											"typeString": "int_const 10800"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 850,
									"mutability": "constant",
									"name": "DIFFICULTY",
									"nameLocation": "595:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "573:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 848,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "573:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "608:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "109cf399",
									"id": 857,
									"mutability": "constant",
									"name": "DIFFICULTY_INTERVAL",
									"nameLocation": "660:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "639:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "639:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 856,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030",
											"id": 852,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "682:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 855,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 853,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "691:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 854,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "695:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "691:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "682:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 860,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "751:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "727:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 858,
											"name": "IERC20",
											"nameLocations": [
												"727:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "727:6:8"
										},
										"referencedDeclaration": 315,
										"src": "727:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b109beec",
									"id": 863,
									"mutability": "immutable",
									"name": "xCREDI",
									"nameLocation": "843:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "819:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 861,
											"name": "IERC20",
											"nameLocations": [
												"819:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "819:6:8"
										},
										"referencedDeclaration": 315,
										"src": "819:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "957:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "918:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
										"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
									},
									"typeName": {
										"id": 867,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 864,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "927:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "918:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
											"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 866,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 865,
												"name": "StakeDetails",
												"nameLocations": [
													"935:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "935:12:8"
											},
											"referencedDeclaration": 844,
											"src": "935:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
												"typeString": "struct ModuleX.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 871,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "983:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "970:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 869,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "970:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "998:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "af7568dd",
									"id": 874,
									"mutability": "mutable",
									"name": "total_staked",
									"nameLocation": "1018:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "1006:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 872,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1006:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1033:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f4729b7",
									"id": 877,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "1053:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "1041:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 875,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1041:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 876,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1072:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 881,
									"name": "RewardAdded",
									"nameLocation": "1088:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1105:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1100:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:13:8"
									},
									"src": "1082:31:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337",
									"id": 887,
									"name": "RewardWithdrawn",
									"nameLocation": "1125:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1157:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1141:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1166:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1161:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1161:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:33:8"
									},
									"src": "1119:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146",
									"id": 899,
									"name": "Staked",
									"nameLocation": "1186:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1209:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1193:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1220:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1215:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1215:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1237:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1230:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 892,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1230:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1252:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1247:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1271:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1266:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:94:8"
									},
									"src": "1180:107:8"
								},
								{
									"anonymous": false,
									"eventSelector": "03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c",
									"id": 905,
									"name": "CREDIWithdrawn",
									"nameLocation": "1299:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1319:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1314:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1334:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1329:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1329:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:28:8"
									},
									"src": "1293:49:8"
								},
								{
									"anonymous": false,
									"eventSelector": "67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19",
									"id": 909,
									"name": "RewardPaid",
									"nameLocation": "1354:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1370:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1365:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1365:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:15:8"
									},
									"src": "1348:32:8"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "1433:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 914,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1452:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1463:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1452:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1468:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 918,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1479:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1468:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1452:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1493:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															},
															"value": "ModuleX:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1444:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1444:77:8"
											},
											{
												"id": 924,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:8"
											}
										]
									},
									"id": 926,
									"name": "validate_stake",
									"nameLocation": "1397:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1417:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1412:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1412:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:15:8"
									},
									"src": "1388:153:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "1631:87:8",
										"statements": [
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1643:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 939,
																"name": "_credi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1658:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 938,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1651:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1651:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1643:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1643:27:8"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "xCREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1681:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 945,
																"name": "_xcredi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1697:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 944,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1690:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1690:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1681:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "1681:29:8"
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 933,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1612:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 935,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 932,
												"name": "Ownable",
												"nameLocations": [
													"1604:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1604:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1604:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_credi_addr",
												"nameLocation": "1569:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1561:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_xcredi_addr",
												"nameLocation": "1590:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1582:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:43:8"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:0:8"
									},
									"scope": 1539,
									"src": "1549:169:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1546
									],
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1793:40:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1819:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1811:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 955,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1811:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1811:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 954,
												"id": 959,
												"nodeType": "Return",
												"src": "1804:21:8"
											}
										]
									},
									"functionSelector": "d46149a2",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "1739:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1779:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:9:8"
									},
									"scope": 1539,
									"src": "1730:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1551
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1905:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "1931:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1923:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 966,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1923:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "1916:22:8"
											}
										]
									},
									"functionSelector": "7c2fdeb5",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "1850:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:2:8"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1891:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:9:8"
									},
									"scope": 1539,
									"src": "1841:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2013:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2031:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2046:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2031:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "2024:23:8"
											}
										]
									},
									"functionSelector": "b5fa91fe",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "1963:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2002:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2002:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:6:8"
									},
									"scope": 1539,
									"src": "1954:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "2265:193:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 998,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2298:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1000,
																"indexExpression": {
																	"id": 999,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2305:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2298:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2315:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2298:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1002,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2335:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1004,
																"indexExpression": {
																	"id": 1003,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2342:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2335:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2352:8:8",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "2335:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1006,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2375:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1008,
																"indexExpression": {
																	"id": 1007,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2382:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2375:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2392:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "2375:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1010,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2419:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1012,
																"indexExpression": {
																	"id": 1011,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2426:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2419:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2436:13:8",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "2419:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1014,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2283:167:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint96_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint96,uint256,uint256)"
													}
												},
												"functionReturnParameters": 997,
												"id": 1015,
												"nodeType": "Return",
												"src": "2276:174:8"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 987,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 984,
													"src": "2120:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "validate_stake",
												"nameLocations": [
													"2105:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2105:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2105:24:8"
										}
									],
									"name": "getStake",
									"nameLocation": "2072:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2086:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2081:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2081:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:15:8"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2172:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2164:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2193:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2188:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2188:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2217:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2212:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "2245:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2240:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2240:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:106:8"
									},
									"scope": 1539,
									"src": "2063:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "2520:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1024,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2545:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2551:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2545:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2538:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1022,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2538:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1027,
												"nodeType": "Return",
												"src": "2531:30:8"
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "2475:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:2:8"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2507:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1019,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2507:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:8:8"
									},
									"scope": 1539,
									"src": "2466:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1563
									],
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "2652:825:8",
										"statements": [
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "SCALE_FACTOR",
														"nameLocation": "2669:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2664:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1036,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2664:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2684:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2664:24:8"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "curr_total",
														"nameLocation": "2704:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2699:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2699:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2717:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1043,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2732:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2699:45:8"
											},
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "low_d",
														"nameLocation": "2760:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2755:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1046,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2755:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2768:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1049,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2781:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2768:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:45:8"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "high_d",
														"nameLocation": "2816:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2811:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2811:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "curr_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2825:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1055,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2836:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2811:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "low_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "2869:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1059,
														"name": "high_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2878:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2869:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "2987:483:8",
													"statements": [
														{
															"assignments": [
																1070
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1070,
																	"mutability": "mutable",
																	"name": "low_r",
																	"nameLocation": "3007:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "3002:10:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1069,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3002:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1087,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1071,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3015:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1074,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1072,
																									"name": "low_d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1047,
																									"src": "3030:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1073,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3038:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3030:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1075,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3029:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1076,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3041:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3029:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1078,
																					"name": "total_staked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 874,
																					"src": "3063:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3029:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1080,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3028:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3015:61:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1082,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "3078:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1083,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3086:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3078:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1085,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3077:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3015:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3002:95:8"
														},
														{
															"assignments": [
																1089
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1089,
																	"mutability": "mutable",
																	"name": "high_r",
																	"nameLocation": "3117:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "3112:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3112:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1103,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1090,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3126:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1091,
																					"name": "curr_total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "3140:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1092,
																						"name": "high_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "3153:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1093,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3160:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3153:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3140:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1096,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3139:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3126:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1098,
																				"name": "high_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "3182:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1099,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3191:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3182:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3181:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3126:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3112:90:8"
														},
														{
															"assignments": [
																1105
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1105,
																	"mutability": "mutable",
																	"name": "middle_r",
																	"nameLocation": "3222:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "3217:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1104,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3217:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1107,
															"initialValue": {
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3233:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3217:17:8"
														},
														{
															"body": {
																"id": 1131,
																"nodeType": "Block",
																"src": "3301:96:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1120,
																				"name": "middle_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "3320:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1121,
																						"name": "SCALE_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1037,
																						"src": "3332:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1122,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3345:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3332:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1124,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1109,
																								"src": "3366:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1125,
																								"name": "DIFFICULTY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 850,
																								"src": "3370:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3366:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1127,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3365:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3332:49:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3320:61:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1130,
																		"nodeType": "ExpressionStatement",
																		"src": "3320:61:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "3271:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1115,
																	"name": "high_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3275:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3271:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1132,
															"initializationExpression": {
																"assignments": [
																	1109
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1109,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3258:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1132,
																		"src": "3253:6:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1108,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3253:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1113,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1110,
																		"name": "low_d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "3260:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3268:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3260:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3253:16:8"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3283:3:8",
																	"subExpression": {
																		"id": 1117,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "3283:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1119,
																"nodeType": "ExpressionStatement",
																"src": "3283:3:8"
															},
															"nodeType": "ForStatement",
															"src": "3249:148:8"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1133,
																					"name": "low_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "3419:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1134,
																					"name": "middle_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "3427:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3419:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1136,
																				"name": "high_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "3438:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3419:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1138,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3418:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1139,
																	"name": "SCALE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "3446:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3418:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1035,
															"id": 1141,
															"nodeType": "Return",
															"src": "3411:47:8"
														}
													]
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "2866:604:8",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "2895:67:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "stake_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "2917:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1062,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "2931:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1063,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "2939:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2931:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1065,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2930:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2917:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1035,
															"id": 1067,
															"nodeType": "Return",
															"src": "2910:40:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2586:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2607:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2602:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2602:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:19:8"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2641:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2641:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:6:8"
									},
									"scope": 1539,
									"src": "2577:900:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "3543:71:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1150,
															"name": "total_staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "3561:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1151,
															"name": "DIFFICULTY_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3574:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3561:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1153,
														"name": "DIFFICULTY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3596:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3561:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1155,
												"nodeType": "Return",
												"src": "3554:52:8"
											}
										]
									},
									"functionSelector": "b6baffe3",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDifficulty",
									"nameLocation": "3494:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3507:2:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3532:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3532:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:6:8"
									},
									"scope": 1539,
									"src": "3485:129:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1574
									],
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "3710:852:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "3729:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3744:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3729:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3747:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															},
															"value": "ModuleX:Stake amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3721:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3721:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "3721:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1176,
																"name": "lock_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "3813:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1177,
																"name": "MATURITY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3828:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3813:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3838:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															},
															"value": "ModuleX:Use longer lock_period!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3805:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3805:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "3805:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "3906:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3906:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1189,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3928:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1539",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1539",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3920:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1187,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3920:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3920:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3935:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1182,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3883:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3889:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3883:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "3883:65:8"
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "3967:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "3960:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1194,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "3960:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1196,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3978:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3978:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1198,
														"name": "lock_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "3991:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3978:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3960:42:8"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4018:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "4013:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4013:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"arguments": [
														{
															"id": 1204,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4050:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4034:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4013:50:8"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "stake_id",
														"nameLocation": "4079:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "4074:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4074:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"id": 1209,
													"name": "stakes_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 871,
													"src": "4090:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4074:28:8"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1211,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4113:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
															}
														},
														"id": 1213,
														"indexExpression": {
															"id": 1212,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "4120:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4113:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
															"typeString": "struct ModuleX.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1215,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4167:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4167:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1217,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "4204:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1218,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "4241:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1219,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "4283:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1214,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4132:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$844_storage_ptr_$",
																"typeString": "type(struct ModuleX.StakeDetails storage pointer)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4160:5:8",
															"4194:8:8",
															"4227:12:8",
															"4268:13:8"
														],
														"names": [
															"owner",
															"maturity",
															"stake_amount",
															"reward_amount"
														],
														"nodeType": "FunctionCall",
														"src": "4132:176:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_memory_ptr",
															"typeString": "struct ModuleX.StakeDetails memory"
														}
													},
													"src": "4113:195:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "4113:195:8"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4329:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1224,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "4345:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4329:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "4329:28:8"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4369:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1228,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4389:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4369:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "4369:33:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1232,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4425:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4425:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "4439:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1235,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "4449:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1236,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4459:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1237,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "4473:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "4418:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint96,uint256,uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4418:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "4413:74:8"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4498:14:8",
													"subExpression": {
														"id": 1240,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4498:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "4498:14:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1243,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "4530:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1244,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "4540:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1245,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4529:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1246,
												"nodeType": "Return",
												"src": "4523:31:8"
											}
										]
									},
									"functionSelector": "d93c04a0",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3631:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "3644:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3637:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1158,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3637:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3662:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3657:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3657:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3636:39:8"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3693:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3693:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "3699:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:12:8"
									},
									"scope": 1539,
									"src": "3622:940:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1581
									],
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "4653:586:8",
										"statements": [
											{
												"assignments": [
													1260
												],
												"declarations": [
													{
														"constant": false,
														"id": 1260,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "4685:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "4664:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1259,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1258,
																"name": "StakeDetails",
																"nameLocations": [
																	"4664:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "4664:12:8"
															},
															"referencedDeclaration": 844,
															"src": "4664:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"baseExpression": {
														"id": 1261,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4695:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1263,
													"indexExpression": {
														"id": 1262,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "4702:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4695:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4664:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1266,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "4730:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4738:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "4730:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1268,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4747:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4747:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4730:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4761:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															},
															"value": "ModuleX:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4722:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4722:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "4722:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1275,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "4814:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4814:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1277,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "4828:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4836:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4828:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4814:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4846:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															},
															"value": "ModuleX:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4806:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4806:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "4806:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1284,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "4911:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4919:13:8",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "4911:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4935:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4911:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4938:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															},
															"value": "ModuleX:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4903:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4903:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "4903:62:8"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4981:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "4976:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4976:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"expression": {
														"id": 1293,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "4997:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails storage pointer"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5005:13:8",
													"memberName": "reward_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 843,
													"src": "4997:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4976:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1299,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5049:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5049:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "5063:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1296,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5029:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5036:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5029:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5029:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "5029:48:8"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5093:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1305,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5113:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5093:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "5093:33:8"
											},
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1308,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "5137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5145:13:8",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5137:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5161:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5137:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "5137:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1315,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5190:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5179:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5179:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "EmitStatement",
												"src": "5174:25:8"
											},
											{
												"expression": {
													"id": 1318,
													"name": "reward_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1292,
													"src": "5218:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1319,
												"nodeType": "Return",
												"src": "5211:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1253,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1250,
													"src": "4624:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1252,
												"name": "validate_stake",
												"nameLocations": [
													"4609:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "4609:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4609:24:8"
										}
									],
									"name": "claim",
									"nameLocation": "4579:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "4590:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "4585:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4585:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4584:15:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "4642:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4642:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4641:6:8"
									},
									"scope": 1539,
									"src": "4570:669:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "5347:456:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1334,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5367:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5376:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5367:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5379:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5358:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5358:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "5358:65:8"
											},
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5455:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1384,
														"src": "5434:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1341,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1340,
																"name": "StakeDetails",
																"nameLocations": [
																	"5434:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "5434:12:8"
															},
															"referencedDeclaration": 844,
															"src": "5434:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1346,
												"initialValue": {
													"baseExpression": {
														"id": 1343,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "5465:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1345,
													"indexExpression": {
														"id": 1344,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "5472:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5465:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5434:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1348,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5500:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5500:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1350,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "5514:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5522:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "5514:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "5500:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5532:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															},
															"value": "ModuleX:Burnt tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5492:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "5492:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1357,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5576:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1358,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "5586:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5594:12:8",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "5586:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5576:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5608:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5568:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5568:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "5568:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1367,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5671:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5671:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "5685:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																	"typeString": "struct ModuleX.StakeDetails storage pointer"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5693:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "5685:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1364,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5652:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5658:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5652:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5652:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "5652:54:8"
											},
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1373,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5717:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5725:12:8",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "5717:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1376,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5741:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5717:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "5717:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1380,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5778:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5788:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1379,
														"name": "CREDIWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "5763:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5763:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "EmitStatement",
												"src": "5758:37:8"
											}
										]
									},
									"functionSelector": "ac00500f",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1327,
												"name": "onlyOwner",
												"nameLocations": [
													"5307:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5307:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5307:9:8"
										},
										{
											"arguments": [
												{
													"id": 1330,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1323,
													"src": "5332:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1329,
												"name": "validate_stake",
												"nameLocations": [
													"5317:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "5317:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5317:24:8"
										}
									],
									"name": "withdrawCREDI",
									"nameLocation": "5256:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "5275:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5270:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5270:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5290:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5285:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5285:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5269:28:8"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5347:0:8"
									},
									"scope": 1539,
									"src": "5247:556:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "5890:633:8",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "total_amount",
														"nameLocation": "5906:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "5901:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5901:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"hexValue": "30",
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5921:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5901:21:8"
											},
											{
												"body": {
													"id": 1454,
													"nodeType": "Block",
													"src": "5985:407:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1409,
																				"name": "stake_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "6008:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1411,
																			"indexExpression": {
																				"id": 1410,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1398,
																				"src": "6018:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6008:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1412,
																			"name": "stakes_count",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "6023:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6008:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6037:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		},
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		}
																	],
																	"id": 1408,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6000:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6000:65:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1416,
															"nodeType": "ExpressionStatement",
															"src": "6000:65:8"
														},
														{
															"assignments": [
																1419
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1419,
																	"mutability": "mutable",
																	"name": "details",
																	"nameLocation": "6101:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1454,
																	"src": "6080:28:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails"
																	},
																	"typeName": {
																		"id": 1418,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1417,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"6080:12:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 844,
																			"src": "6080:12:8"
																		},
																		"referencedDeclaration": 844,
																		"src": "6080:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1425,
															"initialValue": {
																"baseExpression": {
																	"id": 1420,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "6111:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1424,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1421,
																		"name": "stake_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "6118:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1423,
																	"indexExpression": {
																		"id": 1422,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "6128:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6118:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6111:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6080:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1427,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "6154:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6154:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1429,
																				"name": "details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "6168:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																					"typeString": "struct ModuleX.StakeDetails storage pointer"
																				}
																			},
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6176:8:8",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 839,
																			"src": "6168:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "6154:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6186:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		},
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		}
																	],
																	"id": 1426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6146:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6146:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1434,
															"nodeType": "ExpressionStatement",
															"src": "6146:64:8"
														},
														{
															"expression": {
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1435,
																	"name": "total_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "6225:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1436,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "6241:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6249:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6241:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6225:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "6225:36:8"
														},
														{
															"expression": {
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1440,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "6276:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6284:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6276:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6299:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6276:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "6276:24:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1447,
																			"name": "stake_ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "6345:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1449,
																		"indexExpression": {
																			"id": 1448,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1398,
																			"src": "6355:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6345:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1450,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "6359:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																				"typeString": "struct ModuleX.StakeDetails storage pointer"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6367:12:8",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "6359:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1446,
																	"name": "CREDIWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "6330:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6330:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "EmitStatement",
															"src": "6325:55:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1401,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "5949:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1402,
															"name": "stake_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5953:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5963:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5953:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5949:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1455,
												"initializationExpression": {
													"assignments": [
														1398
													],
													"declarations": [
														{
															"constant": false,
															"id": 1398,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5942:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1455,
															"src": "5937:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1397,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5937:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1400,
													"initialValue": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5946:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5937:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5971:3:8",
														"subExpression": {
															"id": 1405,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "5971:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1407,
													"nodeType": "ExpressionStatement",
													"src": "5971:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5933:459:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "total_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "6410:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6425:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6410:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6428:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															},
															"value": "ModuleX:Total amount is 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6402:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6402:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "6402:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1466,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6488:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6488:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "total_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "6502:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1463,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "6469:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6475:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6469:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6469:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "6469:46:8"
											}
										]
									},
									"functionSelector": "bc854352",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyOwner",
												"nameLocations": [
													"5875:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5875:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5875:9:8"
										}
									],
									"name": "batchWithdrawCREDI",
									"nameLocation": "5820:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "stake_ids",
												"nameLocation": "5855:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5839:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1386,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5839:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1387,
													"nodeType": "ArrayTypeName",
													"src": "5839:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5838:27:8"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5890:0:8"
									},
									"scope": 1539,
									"src": "5811:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "6579:190:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "6599:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6608:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6599:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6611:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6590:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6590:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "6590:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1487,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6690:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6690:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6712:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1539",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1539",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6704:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6704:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6704:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "6719:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1484,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6666:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6673:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6666:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "6666:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "6754:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6742:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6742:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "EmitStatement",
												"src": "6737:24:8"
											}
										]
									},
									"functionSelector": "beceed39",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "6540:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6556:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "6551:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6551:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6550:13:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6579:0:8"
									},
									"scope": 1539,
									"src": "6531:238:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "6851:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1515,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6895:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleX_$1539",
																					"typeString": "contract ModuleX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleX_$1539",
																					"typeString": "contract ModuleX"
																				}
																			],
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6887:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1513,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6887:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6887:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1511,
																		"name": "xCREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "6870:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6877:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "6870:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6870:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "6905:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1519,
																	"name": "pending_payments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "6914:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6905:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6870:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6932:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6862:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6862:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "6862:102:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "6995:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "6999:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1525,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6975:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6982:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6975:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6975:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "6975:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1533,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "7038:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "7042:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1532,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "7022:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7022:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "7017:32:8"
											}
										]
									},
									"functionSelector": "d6ef7af0",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1507,
												"name": "onlyOwner",
												"nameLocations": [
													"6836:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6836:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6836:9:8"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6786:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6810:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6802:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6819:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "6814:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6814:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6801:25:8"
									},
									"returnParameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6851:0:8"
									},
									"scope": 1539,
									"src": "6777:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1540,
							"src": "278:6784:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								881,
								887,
								899,
								905,
								909
							]
						}
					],
					"src": "33:7031:8"
				},
				"id": 8
			},
			"contracts/interface/IModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IModuleX.sol",
					"exportedSymbols": {
						"IModuleX": [
							1582
						]
					},
					"id": 1583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1582,
							"linearizedBaseContracts": [
								1582
							],
							"name": "IModuleX",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46149a2",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "97:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1582,
									"src": "88:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c2fdeb5",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "163:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:9"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "204:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:9"
									},
									"scope": 1582,
									"src": "154:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5fa91fe",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "230:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "269:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:9"
									},
									"scope": 1582,
									"src": "221:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "296:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "317:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "312:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:19:9"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "348:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:6:9"
									},
									"scope": 1582,
									"src": "287:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d93c04a0",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "371:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "384:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "377:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1564,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "402:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "397:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "397:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:33:9"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "432:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "427:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "427:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "447:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "442:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:35:9"
									},
									"scope": 1582,
									"src": "362:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "379607f5",
									"id": 1581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "479:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "490:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "485:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:15:9"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "522:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "517:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "517:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:20:9"
									},
									"scope": 1582,
									"src": "470:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1583,
							"src": "61:481:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:511:9"
				},
				"id": 9
			}
		}
	}
}