{
	"id": "d1f853df8af49dd1d7cf51f4c4daca3c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"./interface/IModuleX.sol\";\r\n\r\ncontract ModuleX is IModuleX, Ownable \r\n{\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakeDetails\r\n    {\r\n        address owner;\r\n        uint96 maturity;\r\n        uint stake_amount;\r\n        uint reward_amount;\r\n    }\r\n\r\n    uint96 constant public MATURITY = 180 minutes; // 180 days;\r\n    uint constant public DIFFICULTY = 11;\r\n    uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18; // CREDI decimals = 18\r\n    IERC20 immutable public CREDI;// = IERC20(0x0A5BCe3bc08608C9B4A4d88bA216fe203DA74861);\r\n    IERC20 immutable public xCREDI;// = IERC20(0x582d54dB27e6a0D6759F3203677575D8E91d01cf);\r\n    \r\n    mapping (uint => StakeDetails) private stakes;\r\n    uint private stakes_count = 1;\r\n    uint public total_staked = 0;\r\n    uint public pending_payments = 0;\r\n\r\n    event RewardAdded(uint amount);\r\n    event RewardWithdrawn(address indexed to, uint amount);\r\n    event Staked(address indexed user, uint stake_id, uint96 maturity, uint stake_amount, uint rewards_amount);\r\n    event CREDIWithdrawn(uint stake_id, uint amount);\r\n    event RewardPaid(uint stake_id);\r\n\r\n    modifier validate_stake(uint stake_id) \r\n    {\r\n        require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n        _;\r\n    }\r\n\r\n    constructor(address _credi_addr, address _xcredi_addr) Ownable(_msgSender())\r\n    { \r\n        CREDI = IERC20(_credi_addr);\r\n        xCREDI = IERC20(_xcredi_addr);\r\n    }\r\n    \r\n    function getCREDIAddress() external view returns(address)\r\n    {\r\n        return address(CREDI);\r\n    }\r\n\r\n    function getxCREDIAddress() external view returns(address)\r\n    {\r\n        return address(xCREDI);\r\n    }\r\n\r\n    function getStakesCount() external view returns(uint)\r\n    {\r\n        return stakes_count - 1;\r\n    }\r\n\r\n    function getStake(uint stake_id) external validate_stake(stake_id) view \r\n        returns (\r\n        address owner,\r\n        uint maturity,\r\n        uint stake_amount,\r\n        uint reward_amount)\r\n    {\r\n        return (\r\n            stakes[stake_id].owner,\r\n            stakes[stake_id].maturity,\r\n            stakes[stake_id].stake_amount,\r\n            stakes[stake_id].reward_amount);\r\n    }\r\n\r\n    function time_now() private view returns(uint96)\r\n    {\r\n        return uint96(block.timestamp);\r\n    }\r\n\r\n    function calculateReward(uint stake_amount) public view returns(uint)\r\n    { \r\n        uint SCALE_FACTOR = 1e18;\r\n        uint curr_total = total_staked + stake_amount;\r\n        uint low_d = total_staked/DIFFICULTY_INTERVAL;\r\n        uint high_d = curr_total/DIFFICULTY_INTERVAL;\r\n        if(low_d == high_d)\r\n        {\r\n            return stake_amount/(low_d + DIFFICULTY);\r\n        }\r\n        else \r\n        {\r\n            uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY);\r\n            uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY);\r\n            uint middle_r = 0;\r\n            for(uint i=low_d + 1; i < high_d; i++)\r\n            {\r\n                middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY);\r\n            }\r\n            return (low_r + middle_r + high_r)/SCALE_FACTOR;\r\n        }\r\n    }\r\n\r\n    function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)\r\n    {\r\n        require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\");\r\n        require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\");\r\n        CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount); \r\n        uint96 maturity = time_now() + lock_period;\r\n        uint reward_amount = calculateReward(stake_amount);\r\n        uint stake_id = stakes_count;\r\n        stakes[stake_id] = StakeDetails({\r\n            owner: _msgSender(),\r\n            maturity: maturity,\r\n            stake_amount: stake_amount,\r\n            reward_amount: reward_amount\r\n        });\r\n        \r\n        total_staked += stake_amount; \r\n        pending_payments += reward_amount;\r\n        emit Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount);\r\n        stakes_count++;\r\n        return(stake_id, reward_amount);\r\n    }\r\n\r\n    function claim(uint stake_id) external validate_stake(stake_id) returns(uint)\r\n    {\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\");\r\n        require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\"); \r\n        require(details.reward_amount > 0, \"ModuleX:Nothing to claim\");\r\n        uint reward_amount = details.reward_amount;\r\n        xCREDI.safeTransfer(_msgSender(), reward_amount);     \r\n        pending_payments -= reward_amount;\r\n        details.reward_amount = 0; \r\n        emit RewardPaid(stake_id); \r\n        return reward_amount;\r\n    }\r\n\r\n    function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)\r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        StakeDetails storage details = stakes[stake_id];\r\n        require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\"); \r\n        require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\"); \r\n        CREDI.safeTransfer(_msgSender(), details.stake_amount);\r\n        details.stake_amount -= amount;\r\n        emit CREDIWithdrawn(stake_id, amount);\r\n    }\r\n\r\n    function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner\r\n    {\r\n        uint total_amount = 0;\r\n        for(uint i = 0; i < stake_ids.length; i++)\r\n        {\r\n            require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\");\r\n            StakeDetails storage details = stakes[stake_ids[i]];\r\n            require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\");\r\n            total_amount += details.stake_amount;\r\n            details.stake_amount = 0;          \r\n            emit CREDIWithdrawn(stake_ids[i], details.stake_amount);\r\n        }\r\n        require(total_amount > 0, \"ModuleX:Total amount is 0!\"); \r\n        CREDI.safeTransfer(_msgSender(), total_amount);\r\n    }\r\n\r\n    function addRewards(uint amount) external \r\n    {\r\n        require (amount > 0, \"ModuleX:amount must be greater than zero!\");\r\n        xCREDI.safeTransferFrom(_msgSender(), address(this), amount);\r\n        emit RewardAdded(amount);\r\n    }\r\n\r\n    function withdrawRewards(address to, uint amount) external onlyOwner\r\n    {\r\n        require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\");\r\n        xCREDI.safeTransfer(to, amount);\r\n        emit RewardWithdrawn(to, amount);\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/IModuleX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IModuleX\r\n{\r\n    function getCREDIAddress() external view returns(address);\r\n\r\n    function getxCREDIAddress() external view returns(address);\r\n\r\n    function getStakesCount() external view returns(uint);\r\n    \r\n    function calculateReward(uint stake_amount) external returns(uint);\r\n\r\n    function stake(uint96 lock_period, uint amount) external returns(uint stake_id, uint xCREDI_reward);\r\n\r\n    function claim(uint stake_id) external returns(uint xCREDI_reward);\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE PUSH28 0xC97C7759516C3FC9D1089483F251D3BB0A952AC497317A704ADD0E7D COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE PUSH28 0xC97C7759516C3FC9D1089483F251D3BB0A952AC497317A704ADD0E7D COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ModuleX.sol": {
				"ModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_credi_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xcredi_addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CREDIWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "maturity",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards_amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DIFFICULTY_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MATURITY",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "stake_ids",
									"type": "uint256[]"
								}
							],
							"name": "batchWithdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "getStake",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maturity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward_amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pending_payments",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "total_staked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCREDI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xCREDI",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ModuleX.sol\":278:6902  contract ModuleX is IModuleX, Ownable ... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/ModuleX.sol\":975:976  1 */\n  0x01\n    /* \"contracts/ModuleX.sol\":947:976  uint private stakes_count = 1 */\n  0x02\n  sstore\n    /* \"contracts/ModuleX.sol\":1010:1011  0 */\n  0x00\n    /* \"contracts/ModuleX.sol\":983:1011  uint public total_staked = 0 */\n  0x03\n  sstore\n    /* \"contracts/ModuleX.sol\":1049:1050  0 */\n  0x00\n    /* \"contracts/ModuleX.sol\":1018:1050  uint public pending_payments = 0 */\n  0x04\n  sstore\n    /* \"contracts/ModuleX.sol\":1526:1695  constructor(address _credi_addr, address _xcredi_addr) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ModuleX.sol\":1589:1601  _msgSender() */\n  tag_5\n    /* \"contracts/ModuleX.sol\":1589:1599  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/ModuleX.sol\":1589:1601  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ModuleX.sol\":1635:1646  _credi_addr */\n  dup2\n    /* \"contracts/ModuleX.sol\":1620:1647  CREDI = IERC20(_credi_addr) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ModuleX.sol\":1674:1686  _xcredi_addr */\n  dup1\n    /* \"contracts/ModuleX.sol\":1658:1687  xCREDI = IERC20(_xcredi_addr) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ModuleX.sol\":1526:1695  constructor(address _credi_addr, address _xcredi_addr) Ownable(_msgSender())... */\n  pop\n  pop\n    /* \"contracts/ModuleX.sol\":278:6902  contract ModuleX is IModuleX, Ownable ... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_40\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":949:1068   */\ntag_39:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_41\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_42\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_25:\n    /* \"#utility.yul\":1445:1469   */\n  tag_44\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_11:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_46\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ModuleX.sol\":278:6902  contract ModuleX is IModuleX, Ownable ... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n  0x00\n  assignImmutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ModuleX.sol\":278:6902  contract ModuleX is IModuleX, Ownable ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf7568dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xce325bf8\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xce325bf8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd46149a2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd6ef7af0\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd93c04a0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0xaf7568dd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb109beec\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb5fa91fe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbc854352\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbeceed39\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7c2fdeb5\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x7c2fdeb5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e12c0cd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8f4729b7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xac00500f\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x109cf399\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3fa352f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6db08f25\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ModuleX.sol\":616:674  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":4410:5079  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":573:609  uint constant public DIFFICULTY = 11 */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":704:733  IERC20 immutable public CREDI */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/ModuleX.sol\":1818:1923  function getxCREDIAddress() external view returns(address)... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":1018:1050  uint public pending_payments = 0 */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":5087:5643  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/ModuleX.sol\":983:1011  uint public total_staked = 0 */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":796:826  IERC20 immutable public xCREDI */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":1931:2032  function getStakesCount() external view returns(uint)... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":5651:6363  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/ModuleX.sol\":6371:6609  function addRewards(uint amount) external ... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/ModuleX.sol\":2040:2435  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":2554:3454  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":1707:1810  function getCREDIAddress() external view returns(address)... */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ModuleX.sol\":6617:6897  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/ModuleX.sol\":3462:4402  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_22:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"contracts/ModuleX.sol\":616:674  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n    tag_28:\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":616:674  uint constant public DIFFICULTY_INTERVAL = 500000 * 10**18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":4410:5079  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n    tag_34:\n        /* \"contracts/ModuleX.sol\":4482:4486  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":4464:4472  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1440:1441  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1429:1437  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1429:1441  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1456:1468  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1445:1453  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1445:1468  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n    tag_106:\n        /* \"contracts/ModuleX.sol\":1421:1498  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/ModuleX.sol\":4504:4532  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":4535:4541  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":4535:4551  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":4542:4550  stake_id */\n      dup6\n        /* \"contracts/ModuleX.sol\":4535:4551  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":4504:4551  StakeDetails storage details = stakes[stake_id] */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4587:4599  _msgSender() */\n      tag_111\n        /* \"contracts/ModuleX.sol\":4587:4597  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":4587:4599  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/ModuleX.sol\":4570:4599  details.owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":4570:4577  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4570:4583  details.owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":4570:4599  details.owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ModuleX.sol\":4562:4635  require(details.owner == _msgSender(), \"ModuleX:Caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/ModuleX.sol\":4668:4675  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":4668:4684  details.maturity */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":4654:4684  time_now() >= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":4654:4664  time_now() */\n      tag_116\n        /* \"contracts/ModuleX.sol\":4654:4662  time_now */\n      tag_117\n        /* \"contracts/ModuleX.sol\":4654:4664  time_now() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/ModuleX.sol\":4654:4684  time_now() >= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":4646:4731  require(time_now() >= details.maturity, \"ModuleX:Early Withdrawal is not permitted!\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/ModuleX.sol\":4775:4776  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":4751:4758  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4751:4772  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":4751:4776  details.reward_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":4743:4805  require(details.reward_amount > 0, \"ModuleX:Nothing to claim\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/ModuleX.sol\":4816:4834  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":4837:4844  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":4837:4858  details.reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":4816:4858  uint reward_amount = details.reward_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":4869:4917  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      tag_124\n        /* \"contracts/ModuleX.sol\":4889:4901  _msgSender() */\n      tag_125\n        /* \"contracts/ModuleX.sol\":4889:4899  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":4889:4901  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/ModuleX.sol\":4903:4916  reward_amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":4869:4875  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":4869:4888  xCREDI.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/ModuleX.sol\":4869:4917  xCREDI.safeTransfer(_msgSender(), reward_amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/ModuleX.sol\":4953:4966  reward_amount */\n      dup1\n        /* \"contracts/ModuleX.sol\":4933:4949  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":4933:4966  pending_payments -= reward_amount */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":5001:5002  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":4977:4984  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":4977:4998  details.reward_amount */\n      0x02\n      add\n        /* \"contracts/ModuleX.sol\":4977:5002  details.reward_amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":5019:5039  RewardPaid(stake_id) */\n      0x67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19\n        /* \"contracts/ModuleX.sol\":5030:5038  stake_id */\n      dup6\n        /* \"contracts/ModuleX.sol\":5019:5039  RewardPaid(stake_id) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5058:5071  reward_amount */\n      dup1\n        /* \"contracts/ModuleX.sol\":5051:5071  return reward_amount */\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":4410:5079  function claim(uint stake_id) external validate_stake(stake_id) returns(uint)... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":573:609  uint constant public DIFFICULTY = 11 */\n    tag_37:\n        /* \"contracts/ModuleX.sol\":607:609  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":573:609  uint constant public DIFFICULTY = 11 */\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":704:733  IERC20 immutable public CREDI */\n    tag_40:\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1818:1923  function getxCREDIAddress() external view returns(address)... */\n    tag_46:\n        /* \"contracts/ModuleX.sol\":1868:1875  address */\n      0x00\n        /* \"contracts/ModuleX.sol\":1908:1914  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":1893:1915  return address(xCREDI) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1818:1923  function getxCREDIAddress() external view returns(address)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n    tag_53:\n        /* \"contracts/ModuleX.sol\":542:553  180 minutes */\n      0x2a30\n        /* \"contracts/ModuleX.sol\":508:553  uint96 constant public MATURITY = 180 minutes */\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1018:1050  uint public pending_payments = 0 */\n    tag_57:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":5087:5643  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/ModuleX.sol\":5172:5180  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1440:1441  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1429:1437  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1429:1441  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1456:1468  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1445:1453  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1445:1468  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n    tag_141:\n        /* \"contracts/ModuleX.sol\":1421:1498  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_109\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/ModuleX.sol\":5216:5217  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5207:5213  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5207:5217  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":5198:5263  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/ModuleX.sol\":5274:5302  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":5305:5311  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":5305:5321  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":5312:5320  stake_id */\n      dup6\n        /* \"contracts/ModuleX.sol\":5305:5321  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":5274:5321  StakeDetails storage details = stakes[stake_id] */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":5354:5361  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":5354:5370  details.maturity */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":5340:5370  time_now() <= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":5340:5350  time_now() */\n      tag_148\n        /* \"contracts/ModuleX.sol\":5340:5348  time_now */\n      tag_117\n        /* \"contracts/ModuleX.sol\":5340:5350  time_now() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ModuleX.sol\":5340:5370  time_now() <= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5332:5396  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/ModuleX.sol\":5426:5433  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":5426:5446  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5416:5422  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":5416:5446  amount <= details.stake_amount */\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5408:5480  require(amount <= details.stake_amount, \"ModuleX:Insufficient balance!\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/ModuleX.sol\":5492:5546  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      tag_155\n        /* \"contracts/ModuleX.sol\":5511:5523  _msgSender() */\n      tag_156\n        /* \"contracts/ModuleX.sol\":5511:5521  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":5511:5523  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ModuleX.sol\":5525:5532  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":5525:5545  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":5492:5497  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":5492:5510  CREDI.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/ModuleX.sol\":5492:5546  CREDI.safeTransfer(_msgSender(), details.stake_amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/ModuleX.sol\":5581:5587  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":5557:5564  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":5557:5577  details.stake_amount */\n      0x01\n      add\n      0x00\n        /* \"contracts/ModuleX.sol\":5557:5587  details.stake_amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":5603:5635  CREDIWithdrawn(stake_id, amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX.sol\":5618:5626  stake_id */\n      dup5\n        /* \"contracts/ModuleX.sol\":5628:5634  amount */\n      dup5\n        /* \"contracts/ModuleX.sol\":5603:5635  CREDIWithdrawn(stake_id, amount) */\n      mload(0x40)\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5187:5643  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"contracts/ModuleX.sol\":5087:5643  function withdrawCREDI(uint stake_id, uint amount) external onlyOwner validate_stake(stake_id)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":983:1011  uint public total_staked = 0 */\n    tag_64:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":796:826  IERC20 immutable public xCREDI */\n    tag_67:\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n      dup2\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1931:2032  function getStakesCount() external view returns(uint)... */\n    tag_70:\n        /* \"contracts/ModuleX.sol\":1979:1983  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2023:2024  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":2008:2020  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":2008:2024  stakes_count - 1 */\n      tag_160\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_160:\n        /* \"contracts/ModuleX.sol\":2001:2024  return stakes_count - 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1931:2032  function getStakesCount() external view returns(uint)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":5651:6363  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/ModuleX.sol\":5741:5758  uint total_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":5761:5762  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5741:5762  uint total_amount = 0 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":5777:5783  uint i */\n      0x00\n        /* \"contracts/ModuleX.sol\":5786:5787  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":5777:5787  uint i = 0 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":5773:6232  for(uint i = 0; i < stake_ids.length; i++)... */\n    tag_164:\n        /* \"contracts/ModuleX.sol\":5793:5802  stake_ids */\n      dup4\n      dup4\n        /* \"contracts/ModuleX.sol\":5793:5809  stake_ids.length */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":5789:5790  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":5789:5809  i < stake_ids.length */\n      lt\n        /* \"contracts/ModuleX.sol\":5773:6232  for(uint i = 0; i < stake_ids.length; i++)... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/ModuleX.sol\":5863:5875  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":5848:5857  stake_ids */\n      dup5\n      dup5\n        /* \"contracts/ModuleX.sol\":5858:5859  i */\n      dup4\n        /* \"contracts/ModuleX.sol\":5848:5860  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n    tag_167:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":5848:5875  stake_ids[i] < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":5840:5905  require(stake_ids[i] < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_109\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/ModuleX.sol\":5920:5948  StakeDetails storage details */\n      0x00\n        /* \"contracts/ModuleX.sol\":5951:5957  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":5951:5971  stakes[stake_ids[i]] */\n      0x00\n        /* \"contracts/ModuleX.sol\":5958:5967  stake_ids */\n      dup7\n      dup7\n        /* \"contracts/ModuleX.sol\":5968:5969  i */\n      dup6\n        /* \"contracts/ModuleX.sol\":5958:5970  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_173\n      tag_169\n      jump\t// in\n    tag_173:\n    tag_172:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":5951:5971  stakes[stake_ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":5920:5971  StakeDetails storage details = stakes[stake_ids[i]] */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":6008:6015  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":6008:6024  details.maturity */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":5994:6024  time_now() <= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":5994:6004  time_now() */\n      tag_174\n        /* \"contracts/ModuleX.sol\":5994:6002  time_now */\n      tag_117\n        /* \"contracts/ModuleX.sol\":5994:6004  time_now() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/ModuleX.sol\":5994:6024  time_now() <= details.maturity */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/ModuleX.sol\":5986:6050  require(time_now() <= details.maturity, \"ModuleX:Burnt tokens!\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_151\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/ModuleX.sol\":6081:6088  details */\n      dup1\n        /* \"contracts/ModuleX.sol\":6081:6101  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6065:6101  total_amount += details.stake_amount */\n      dup4\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n        /* \"contracts/ModuleX.sol\":6139:6140  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6116:6123  details */\n      dup2\n        /* \"contracts/ModuleX.sol\":6116:6136  details.stake_amount */\n      0x01\n      add\n        /* \"contracts/ModuleX.sol\":6116:6140  details.stake_amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":6170:6220  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      0x03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c\n        /* \"contracts/ModuleX.sol\":6185:6194  stake_ids */\n      dup6\n      dup6\n        /* \"contracts/ModuleX.sol\":6195:6196  i */\n      dup5\n        /* \"contracts/ModuleX.sol\":6185:6197  stake_ids[i] */\n      dup2\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_180\n      tag_169\n      jump\t// in\n    tag_180:\n    tag_179:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/ModuleX.sol\":6199:6206  details */\n      dup3\n        /* \"contracts/ModuleX.sol\":6199:6219  details.stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":6170:6220  CREDIWithdrawn(stake_ids[i], details.stake_amount) */\n      mload(0x40)\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":5825:6232  {... */\n      pop\n        /* \"contracts/ModuleX.sol\":5811:5814  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":5773:6232  for(uint i = 0; i < stake_ids.length; i++)... */\n      jump(tag_164)\n    tag_165:\n      pop\n        /* \"contracts/ModuleX.sol\":6265:6266  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6250:6262  total_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6250:6266  total_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6242:6297  require(total_amount > 0, \"ModuleX:Total amount is 0!\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/ModuleX.sol\":6309:6355  CREDI.safeTransfer(_msgSender(), total_amount) */\n      tag_185\n        /* \"contracts/ModuleX.sol\":6328:6340  _msgSender() */\n      tag_186\n        /* \"contracts/ModuleX.sol\":6328:6338  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":6328:6340  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/ModuleX.sol\":6342:6354  total_amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6309:6314  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":6309:6327  CREDI.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/ModuleX.sol\":6309:6355  CREDI.safeTransfer(_msgSender(), total_amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/ModuleX.sol\":5730:6363  {... */\n      pop\n        /* \"contracts/ModuleX.sol\":5651:6363  function batchWithdrawCREDI(uint[] calldata stake_ids) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6371:6609  function addRewards(uint amount) external ... */\n    tag_78:\n        /* \"contracts/ModuleX.sol\":6448:6449  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":6439:6445  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6439:6449  amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":6430:6495  require (amount > 0, \"ModuleX:amount must be greater than zero!\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_147\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/ModuleX.sol\":6506:6566  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      tag_190\n        /* \"contracts/ModuleX.sol\":6530:6542  _msgSender() */\n      tag_191\n        /* \"contracts/ModuleX.sol\":6530:6540  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":6530:6542  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/ModuleX.sol\":6552:6556  this */\n      address\n        /* \"contracts/ModuleX.sol\":6559:6565  amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":6506:6512  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":6506:6529  xCREDI.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/ModuleX.sol\":6506:6566  xCREDI.safeTransferFrom(_msgSender(), address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/ModuleX.sol\":6582:6601  RewardAdded(amount) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"contracts/ModuleX.sol\":6594:6600  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6582:6601  RewardAdded(amount) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ModuleX.sol\":6371:6609  function addRewards(uint amount) external ... */\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2040:2435  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n    tag_81:\n        /* \"contracts/ModuleX.sol\":2141:2154  address owner */\n      0x00\n        /* \"contracts/ModuleX.sol\":2165:2178  uint maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":2189:2206  uint stake_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2217:2235  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":2097:2105  stake_id */\n      dup5\n        /* \"contracts/ModuleX.sol\":1440:1441  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":1429:1437  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1429:1441  stake_id > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"contracts/ModuleX.sol\":1456:1468  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":1445:1453  stake_id */\n      dup2\n        /* \"contracts/ModuleX.sol\":1445:1468  stake_id < stakes_count */\n      lt\n        /* \"contracts/ModuleX.sol\":1429:1468  stake_id > 0 && stake_id < stakes_count */\n    tag_195:\n        /* \"contracts/ModuleX.sol\":1421:1498  require(stake_id > 0 && stake_id < stakes_count, \"ModuleX:Invalid Stake ID!\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_109\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/ModuleX.sol\":2275:2281  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2275:2291  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":2282:2290  stake_id */\n      dup8\n        /* \"contracts/ModuleX.sol\":2275:2291  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":2275:2297  stakes[stake_id].owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":2312:2318  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2312:2328  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":2319:2327  stake_id */\n      dup9\n        /* \"contracts/ModuleX.sol\":2312:2328  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":2312:2337  stakes[stake_id].maturity */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":2352:2358  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2352:2368  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":2359:2367  stake_id */\n      dup10\n        /* \"contracts/ModuleX.sol\":2352:2368  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":2352:2381  stakes[stake_id].stake_amount */\n      0x01\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":2396:2402  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":2396:2412  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":2403:2411  stake_id */\n      dup11\n        /* \"contracts/ModuleX.sol\":2396:2412  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":2396:2426  stakes[stake_id].reward_amount */\n      0x02\n      add\n      sload\n        /* \"contracts/ModuleX.sol\":2253:2427  return (... */\n      dup3\n      0xffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/ModuleX.sol\":2040:2435  function getStake(uint stake_id) external validate_stake(stake_id) view ... */\n      pop\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2554:3454  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_86:\n        /* \"contracts/ModuleX.sol\":2618:2622  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":2641:2658  uint SCALE_FACTOR */\n      0x00\n        /* \"contracts/ModuleX.sol\":2661:2665  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ModuleX.sol\":2641:2665  uint SCALE_FACTOR = 1e18 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2676:2691  uint curr_total */\n      0x00\n        /* \"contracts/ModuleX.sol\":2709:2721  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":2694:2706  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2694:2721  total_staked + stake_amount */\n      tag_200\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_200:\n        /* \"contracts/ModuleX.sol\":2676:2721  uint curr_total = total_staked + stake_amount */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2732:2742  uint low_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":2745:2757  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":2745:2777  total_staked/DIFFICULTY_INTERVAL */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/ModuleX.sol\":2732:2777  uint low_d = total_staked/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2788:2799  uint high_d */\n      0x00\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":2802:2812  curr_total */\n      dup4\n        /* \"contracts/ModuleX.sol\":2802:2832  curr_total/DIFFICULTY_INTERVAL */\n      tag_203\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_203:\n        /* \"contracts/ModuleX.sol\":2788:2832  uint high_d = curr_total/DIFFICULTY_INTERVAL */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2855:2861  high_d */\n      dup1\n        /* \"contracts/ModuleX.sol\":2846:2851  low_d */\n      dup3\n        /* \"contracts/ModuleX.sol\":2846:2861  low_d == high_d */\n      sub\n        /* \"contracts/ModuleX.sol\":2843:3447  if(low_d == high_d)... */\n      tag_204\n      jumpi\n        /* \"contracts/ModuleX.sol\":607:609  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":2908:2913  low_d */\n      dup3\n        /* \"contracts/ModuleX.sol\":2908:2926  low_d + DIFFICULTY */\n      tag_205\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_205:\n        /* \"contracts/ModuleX.sol\":2894:2906  stake_amount */\n      dup7\n        /* \"contracts/ModuleX.sol\":2894:2927  stake_amount/(low_d + DIFFICULTY) */\n      tag_206\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_206:\n        /* \"contracts/ModuleX.sol\":2887:2927  return stake_amount/(low_d + DIFFICULTY) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_199)\n        /* \"contracts/ModuleX.sol\":2843:3447  if(low_d == high_d)... */\n    tag_204:\n        /* \"contracts/ModuleX.sol\":2979:2989  uint low_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":607:609  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3055:3060  low_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":3055:3073  low_d + DIFFICULTY */\n      tag_208\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_208:\n        /* \"contracts/ModuleX.sol\":3040:3052  total_staked */\n      sload(0x03)\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3015:3016  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3007:3012  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3007:3016  low_d + 1 */\n      tag_209\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_209:\n        /* \"contracts/ModuleX.sol\":3006:3037  (low_d + 1)*DIFFICULTY_INTERVAL */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"contracts/ModuleX.sol\":3006:3052  (low_d + 1)*DIFFICULTY_INTERVAL - total_staked */\n      tag_212\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_212:\n        /* \"contracts/ModuleX.sol\":2992:3004  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX.sol\":2992:3053  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked) */\n      tag_213\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_213:\n        /* \"contracts/ModuleX.sol\":2992:3074  SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      tag_214\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_214:\n        /* \"contracts/ModuleX.sol\":2979:3074  uint low_r = SCALE_FACTOR*((low_d + 1)*DIFFICULTY_INTERVAL - total_staked)/(low_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3089:3100  uint high_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":607:609  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3159:3165  high_d */\n      dup4\n        /* \"contracts/ModuleX.sol\":3159:3178  high_d + DIFFICULTY */\n      tag_215\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_215:\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3130:3136  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3130:3156  high_d*DIFFICULTY_INTERVAL */\n      tag_216\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_216:\n        /* \"contracts/ModuleX.sol\":3117:3127  curr_total */\n      dup7\n        /* \"contracts/ModuleX.sol\":3117:3156  curr_total - high_d*DIFFICULTY_INTERVAL */\n      tag_217\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_217:\n        /* \"contracts/ModuleX.sol\":3103:3115  SCALE_FACTOR */\n      dup8\n        /* \"contracts/ModuleX.sol\":3103:3157  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL) */\n      tag_218\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_218:\n        /* \"contracts/ModuleX.sol\":3103:3179  SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      tag_219\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_219:\n        /* \"contracts/ModuleX.sol\":3089:3179  uint high_r = SCALE_FACTOR*(curr_total - high_d*DIFFICULTY_INTERVAL)/(high_d + DIFFICULTY) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3194:3207  uint middle_r */\n      0x00\n        /* \"contracts/ModuleX.sol\":3210:3211  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":3194:3211  uint middle_r = 0 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3230:3236  uint i */\n      0x00\n        /* \"contracts/ModuleX.sol\":3245:3246  1 */\n      0x01\n        /* \"contracts/ModuleX.sol\":3237:3242  low_d */\n      dup7\n        /* \"contracts/ModuleX.sol\":3237:3246  low_d + 1 */\n      tag_223\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_223:\n        /* \"contracts/ModuleX.sol\":3230:3246  uint i=low_d + 1 */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3226:3374  for(uint i=low_d + 1; i < high_d; i++)... */\n    tag_220:\n        /* \"contracts/ModuleX.sol\":3252:3258  high_d */\n      dup5\n        /* \"contracts/ModuleX.sol\":3248:3249  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":3248:3258  i < high_d */\n      lt\n        /* \"contracts/ModuleX.sol\":3226:3374  for(uint i=low_d + 1; i < high_d; i++)... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/ModuleX.sol\":607:609  11 */\n      0x0b\n        /* \"contracts/ModuleX.sol\":3343:3344  i */\n      dup2\n        /* \"contracts/ModuleX.sol\":3343:3357  i + DIFFICULTY */\n      tag_224\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_224:\n        /* \"contracts/ModuleX.sol\":659:674  500000 * 10**18 */\n      0x69e10de76676d0800000\n        /* \"contracts/ModuleX.sol\":3309:3321  SCALE_FACTOR */\n      dup10\n        /* \"contracts/ModuleX.sol\":3309:3341  SCALE_FACTOR*DIFFICULTY_INTERVAL */\n      tag_225\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_225:\n        /* \"contracts/ModuleX.sol\":3309:3358  SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      tag_226\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_226:\n        /* \"contracts/ModuleX.sol\":3297:3358  middle_r += SCALE_FACTOR*DIFFICULTY_INTERVAL/(i + DIFFICULTY) */\n      dup3\n      tag_227\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_227:\n      swap2\n      pop\n        /* \"contracts/ModuleX.sol\":3260:3263  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":3226:3374  for(uint i=low_d + 1; i < high_d; i++)... */\n      jump(tag_220)\n    tag_221:\n      pop\n        /* \"contracts/ModuleX.sol\":3423:3435  SCALE_FACTOR */\n      dup7\n        /* \"contracts/ModuleX.sol\":3415:3421  high_r */\n      dup3\n        /* \"contracts/ModuleX.sol\":3404:3412  middle_r */\n      dup3\n        /* \"contracts/ModuleX.sol\":3396:3401  low_r */\n      dup6\n        /* \"contracts/ModuleX.sol\":3396:3412  low_r + middle_r */\n      tag_228\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_228:\n        /* \"contracts/ModuleX.sol\":3396:3421  low_r + middle_r + high_r */\n      tag_229\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_229:\n        /* \"contracts/ModuleX.sol\":3395:3435  (low_r + middle_r + high_r)/SCALE_FACTOR */\n      tag_230\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_230:\n        /* \"contracts/ModuleX.sol\":3388:3435  return (low_r + middle_r + high_r)/SCALE_FACTOR */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":2554:3454  function calculateReward(uint stake_amount) public view returns(uint)... */\n    tag_199:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":1707:1810  function getCREDIAddress() external view returns(address)... */\n    tag_89:\n        /* \"contracts/ModuleX.sol\":1756:1763  address */\n      0x00\n        /* \"contracts/ModuleX.sol\":1796:1801  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":1781:1802  return address(CREDI) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":1707:1810  function getCREDIAddress() external view returns(address)... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":6617:6897  function withdrawRewards(address to, uint amount) external onlyOwner... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/ModuleX.sol\":6754:6770  pending_payments */\n      sload(0x04)\n        /* \"contracts/ModuleX.sol\":6745:6751  amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":6745:6770  amount + pending_payments */\n      tag_235\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_235:\n        /* \"contracts/ModuleX.sol\":6710:6716  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":6710:6726  xCREDI.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/ModuleX.sol\":6735:6739  this */\n      address\n        /* \"contracts/ModuleX.sol\":6710:6741  xCREDI.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/ModuleX.sol\":6710:6770  xCREDI.balanceOf(address(this)) >= amount + pending_payments */\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":6702:6804  require(xCREDI.balanceOf(address(this)) >= amount + pending_payments, \"ModuleX:Insufficient balance!\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_154\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/ModuleX.sol\":6815:6846  xCREDI.safeTransfer(to, amount) */\n      tag_243\n        /* \"contracts/ModuleX.sol\":6835:6837  to */\n      dup3\n        /* \"contracts/ModuleX.sol\":6839:6845  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6815:6821  xCREDI */\n      immutable(\"0x0d39e801c12a1db7a049a11375544bfecda5660c1466262d86703950d5bcb07f\")\n        /* \"contracts/ModuleX.sol\":6815:6834  xCREDI.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/ModuleX.sol\":6815:6846  xCREDI.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/ModuleX.sol\":6878:6880  to */\n      dup2\n        /* \"contracts/ModuleX.sol\":6862:6889  RewardWithdrawn(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337\n        /* \"contracts/ModuleX.sol\":6882:6888  amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":6862:6889  RewardWithdrawn(to, amount) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":6617:6897  function withdrawRewards(address to, uint amount) external onlyOwner... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":3462:4402  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n    tag_98:\n        /* \"contracts/ModuleX.sol\":3533:3537  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3539:3543  uint */\n      0x00\n        /* \"contracts/ModuleX.sol\":3584:3585  0 */\n      0x00\n        /* \"contracts/ModuleX.sol\":3569:3581  stake_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":3569:3585  stake_amount > 0 */\n      gt\n        /* \"contracts/ModuleX.sol\":3561:3634  require(stake_amount > 0, \"ModuleX:Stake amount must be greater than 0!\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/ModuleX.sol\":542:553  180 minutes */\n      0x2a30\n        /* \"contracts/ModuleX.sol\":3653:3676  lock_period >= MATURITY */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/ModuleX.sol\":3653:3664  lock_period */\n      dup5\n        /* \"contracts/ModuleX.sol\":3653:3676  lock_period >= MATURITY */\n      0xffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/ModuleX.sol\":3645:3712  require(lock_period >= MATURITY, \"ModuleX:Use longer lock_period!\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/ModuleX.sol\":3723:3788  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      tag_252\n        /* \"contracts/ModuleX.sol\":3746:3758  _msgSender() */\n      tag_253\n        /* \"contracts/ModuleX.sol\":3746:3756  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":3746:3758  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/ModuleX.sol\":3768:3772  this */\n      address\n        /* \"contracts/ModuleX.sol\":3775:3787  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":3723:3728  CREDI */\n      immutable(\"0xad444e1082e5d5bbfca385a9a566a2d71dbd349bb06a97871f0be4657884f8e0\")\n        /* \"contracts/ModuleX.sol\":3723:3745  CREDI.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_192\n      swap1\n        /* \"contracts/ModuleX.sol\":3723:3788  CREDI.safeTransferFrom(_msgSender(), address(this), stake_amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/ModuleX.sol\":3800:3815  uint96 maturity */\n      0x00\n        /* \"contracts/ModuleX.sol\":3831:3842  lock_period */\n      dup5\n        /* \"contracts/ModuleX.sol\":3818:3828  time_now() */\n      tag_254\n        /* \"contracts/ModuleX.sol\":3818:3826  time_now */\n      tag_117\n        /* \"contracts/ModuleX.sol\":3818:3828  time_now() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/ModuleX.sol\":3818:3842  time_now() + lock_period */\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"contracts/ModuleX.sol\":3800:3842  uint96 maturity = time_now() + lock_period */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3853:3871  uint reward_amount */\n      0x00\n        /* \"contracts/ModuleX.sol\":3874:3903  calculateReward(stake_amount) */\n      tag_257\n        /* \"contracts/ModuleX.sol\":3890:3902  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":3874:3889  calculateReward */\n      tag_86\n        /* \"contracts/ModuleX.sol\":3874:3903  calculateReward(stake_amount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/ModuleX.sol\":3853:3903  uint reward_amount = calculateReward(stake_amount) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3914:3927  uint stake_id */\n      0x00\n        /* \"contracts/ModuleX.sol\":3930:3942  stakes_count */\n      sload(0x02)\n        /* \"contracts/ModuleX.sol\":3914:3942  uint stake_id = stakes_count */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":3972:4148  StakeDetails({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ModuleX.sol\":4007:4019  _msgSender() */\n      tag_258\n        /* \"contracts/ModuleX.sol\":4007:4017  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"contracts/ModuleX.sol\":3972:4148  StakeDetails({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ModuleX.sol\":4044:4052  maturity */\n      dup5\n        /* \"contracts/ModuleX.sol\":3972:4148  StakeDetails({... */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ModuleX.sol\":4081:4093  stake_amount */\n      dup8\n        /* \"contracts/ModuleX.sol\":3972:4148  StakeDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ModuleX.sol\":4123:4136  reward_amount */\n      dup4\n        /* \"contracts/ModuleX.sol\":3972:4148  StakeDetails({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/ModuleX.sol\":3953:3959  stakes */\n      0x01\n        /* \"contracts/ModuleX.sol\":3953:3969  stakes[stake_id] */\n      0x00\n        /* \"contracts/ModuleX.sol\":3960:3968  stake_id */\n      dup4\n        /* \"contracts/ModuleX.sol\":3953:3969  stakes[stake_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ModuleX.sol\":3953:4148  stakes[stake_id] = StakeDetails({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":4185:4197  stake_amount */\n      dup6\n        /* \"contracts/ModuleX.sol\":4169:4181  total_staked */\n      0x03\n      0x00\n        /* \"contracts/ModuleX.sol\":4169:4197  total_staked += stake_amount */\n      dup3\n      dup3\n      sload\n      tag_259\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_259:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4229:4242  reward_amount */\n      dup2\n        /* \"contracts/ModuleX.sol\":4209:4225  pending_payments */\n      0x04\n      0x00\n        /* \"contracts/ModuleX.sol\":4209:4242  pending_payments += reward_amount */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4265:4277  _msgSender() */\n      tag_261\n        /* \"contracts/ModuleX.sol\":4265:4275  _msgSender */\n      tag_112\n        /* \"contracts/ModuleX.sol\":4265:4277  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"contracts/ModuleX.sol\":4258:4327  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146\n        /* \"contracts/ModuleX.sol\":4279:4287  stake_id */\n      dup3\n        /* \"contracts/ModuleX.sol\":4289:4297  maturity */\n      dup6\n        /* \"contracts/ModuleX.sol\":4299:4311  stake_amount */\n      dup10\n        /* \"contracts/ModuleX.sol\":4313:4326  reward_amount */\n      dup7\n        /* \"contracts/ModuleX.sol\":4258:4327  Staked(_msgSender(), stake_id, maturity, stake_amount, reward_amount) */\n      mload(0x40)\n      tag_262\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ModuleX.sol\":4338:4350  stakes_count */\n      0x02\n      0x00\n        /* \"contracts/ModuleX.sol\":4338:4352  stakes_count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/ModuleX.sol\":4370:4378  stake_id */\n      dup1\n        /* \"contracts/ModuleX.sol\":4380:4393  reward_amount */\n      dup3\n        /* \"contracts/ModuleX.sol\":4363:4394  return(stake_id, reward_amount) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ModuleX.sol\":3462:4402  function stake(uint96 lock_period, uint stake_amount) external returns(uint, uint)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ModuleX.sol\":2443:2546  function time_now() private view returns(uint96)... */\n    tag_117:\n        /* \"contracts/ModuleX.sol\":2484:2490  uint96 */\n      0x00\n        /* \"contracts/ModuleX.sol\":2522:2537  block.timestamp */\n      timestamp\n        /* \"contracts/ModuleX.sol\":2508:2538  return uint96(block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/ModuleX.sol\":2443:2546  function time_now() private view returns(uint96)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_293)\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_296:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_297:\n        /* \"#utility.yul\":177:201   */\n      tag_348\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_296\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_30:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_350\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_297\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_299:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":646:763   */\n    tag_300:\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      0x00\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_301:\n        /* \"#utility.yul\":842:866   */\n      tag_355\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_296\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      0x00\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_356:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_302:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_358\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_301\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_33:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_361\n      tag_299\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1118:1237   */\n    tag_360:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_362\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_302\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_303:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_304:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_305:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_366\n        /* \"#utility.yul\":1676:1710   */\n      tag_367\n        /* \"#utility.yul\":1685:1709   */\n      tag_368\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_303\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1676:1710   */\n      tag_304\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1658:1711   */\n      tag_303\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_306:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_370\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_305\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_307:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_372\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_306\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_308:\n        /* \"#utility.yul\":2102:2153   */\n      tag_374\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_307\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2416   */\n    tag_42:\n        /* \"#utility.yul\":2273:2277   */\n      0x00\n        /* \"#utility.yul\":2311:2313   */\n      0x20\n        /* \"#utility.yul\":2300:2309   */\n      dup3\n        /* \"#utility.yul\":2296:2314   */\n      add\n        /* \"#utility.yul\":2288:2314   */\n      swap1\n      pop\n        /* \"#utility.yul\":2324:2409   */\n      tag_376\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2324:2409   */\n      tag_308\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2166:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_309:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_378\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_303\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_310:\n        /* \"#utility.yul\":2611:2635   */\n      tag_380\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_309\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_48:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_382\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_310\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2985   */\n    tag_311:\n        /* \"#utility.yul\":2912:2919   */\n      0x00\n        /* \"#utility.yul\":2952:2978   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":2945:2950   */\n      dup3\n        /* \"#utility.yul\":2941:2979   */\n      and\n        /* \"#utility.yul\":2930:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2876:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3106   */\n    tag_312:\n        /* \"#utility.yul\":3076:3099   */\n      tag_385\n        /* \"#utility.yul\":3093:3098   */\n      dup2\n        /* \"#utility.yul\":3076:3099   */\n      tag_311\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3071:3074   */\n      dup3\n        /* \"#utility.yul\":3064:3100   */\n      mstore\n        /* \"#utility.yul\":2991:3106   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3112:3330   */\n    tag_55:\n        /* \"#utility.yul\":3203:3207   */\n      0x00\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3230:3239   */\n      dup3\n        /* \"#utility.yul\":3226:3244   */\n      add\n        /* \"#utility.yul\":3218:3244   */\n      swap1\n      pop\n        /* \"#utility.yul\":3254:3323   */\n      tag_387\n        /* \"#utility.yul\":3320:3321   */\n      0x00\n        /* \"#utility.yul\":3309:3318   */\n      dup4\n        /* \"#utility.yul\":3305:3322   */\n      add\n        /* \"#utility.yul\":3296:3302   */\n      dup5\n        /* \"#utility.yul\":3254:3323   */\n      tag_312\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3112:3330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3336:3810   */\n    tag_61:\n        /* \"#utility.yul\":3404:3410   */\n      0x00\n        /* \"#utility.yul\":3412:3418   */\n      0x00\n        /* \"#utility.yul\":3461:3463   */\n      0x40\n        /* \"#utility.yul\":3449:3458   */\n      dup4\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3436:3459   */\n      sub\n        /* \"#utility.yul\":3432:3464   */\n      slt\n        /* \"#utility.yul\":3429:3548   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3467:3546   */\n      tag_390\n      tag_299\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3429:3548   */\n    tag_389:\n        /* \"#utility.yul\":3587:3588   */\n      0x00\n        /* \"#utility.yul\":3612:3665   */\n      tag_391\n        /* \"#utility.yul\":3657:3664   */\n      dup6\n        /* \"#utility.yul\":3648:3654   */\n      dup3\n        /* \"#utility.yul\":3637:3646   */\n      dup7\n        /* \"#utility.yul\":3633:3655   */\n      add\n        /* \"#utility.yul\":3612:3665   */\n      tag_302\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3602:3665   */\n      swap3\n      pop\n        /* \"#utility.yul\":3558:3675   */\n      pop\n        /* \"#utility.yul\":3714:3716   */\n      0x20\n        /* \"#utility.yul\":3740:3793   */\n      tag_392\n        /* \"#utility.yul\":3785:3792   */\n      dup6\n        /* \"#utility.yul\":3776:3782   */\n      dup3\n        /* \"#utility.yul\":3765:3774   */\n      dup7\n        /* \"#utility.yul\":3761:3783   */\n      add\n        /* \"#utility.yul\":3740:3793   */\n      tag_302\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3730:3793   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3803   */\n      pop\n        /* \"#utility.yul\":3336:3810   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3816:3933   */\n    tag_313:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3922:3923   */\n      0x00\n        /* \"#utility.yul\":3915:3927   */\n      revert\n        /* \"#utility.yul\":3939:4056   */\n    tag_314:\n        /* \"#utility.yul\":4048:4049   */\n      0x00\n        /* \"#utility.yul\":4045:4046   */\n      0x00\n        /* \"#utility.yul\":4038:4050   */\n      revert\n        /* \"#utility.yul\":4062:4179   */\n    tag_315:\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4161:4173   */\n      revert\n        /* \"#utility.yul\":4202:4770   */\n    tag_316:\n        /* \"#utility.yul\":4275:4283   */\n      0x00\n        /* \"#utility.yul\":4285:4291   */\n      0x00\n        /* \"#utility.yul\":4335:4338   */\n      dup4\n        /* \"#utility.yul\":4328:4332   */\n      0x1f\n        /* \"#utility.yul\":4320:4326   */\n      dup5\n        /* \"#utility.yul\":4316:4333   */\n      add\n        /* \"#utility.yul\":4312:4339   */\n      slt\n        /* \"#utility.yul\":4302:4424   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4343:4422   */\n      tag_398\n      tag_313\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4302:4424   */\n    tag_397:\n        /* \"#utility.yul\":4456:4462   */\n      dup3\n        /* \"#utility.yul\":4443:4463   */\n      calldataload\n        /* \"#utility.yul\":4433:4463   */\n      swap1\n      pop\n        /* \"#utility.yul\":4486:4504   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4478:4484   */\n      dup2\n        /* \"#utility.yul\":4475:4505   */\n      gt\n        /* \"#utility.yul\":4472:4589   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":4508:4587   */\n      tag_400\n      tag_314\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4472:4589   */\n    tag_399:\n        /* \"#utility.yul\":4622:4626   */\n      0x20\n        /* \"#utility.yul\":4614:4620   */\n      dup4\n        /* \"#utility.yul\":4610:4627   */\n      add\n        /* \"#utility.yul\":4598:4627   */\n      swap2\n      pop\n        /* \"#utility.yul\":4676:4679   */\n      dup4\n        /* \"#utility.yul\":4668:4672   */\n      0x20\n        /* \"#utility.yul\":4660:4666   */\n      dup3\n        /* \"#utility.yul\":4656:4673   */\n      mul\n        /* \"#utility.yul\":4646:4654   */\n      dup4\n        /* \"#utility.yul\":4642:4674   */\n      add\n        /* \"#utility.yul\":4639:4680   */\n      gt\n        /* \"#utility.yul\":4636:4764   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_402\n      tag_315\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4636:4764   */\n    tag_401:\n        /* \"#utility.yul\":4202:4770   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5335   */\n    tag_74:\n        /* \"#utility.yul\":4862:4868   */\n      0x00\n        /* \"#utility.yul\":4870:4876   */\n      0x00\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"#utility.yul\":4907:4916   */\n      dup4\n        /* \"#utility.yul\":4898:4905   */\n      dup6\n        /* \"#utility.yul\":4894:4917   */\n      sub\n        /* \"#utility.yul\":4890:4922   */\n      slt\n        /* \"#utility.yul\":4887:5006   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4925:5004   */\n      tag_405\n      tag_299\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4887:5006   */\n    tag_404:\n        /* \"#utility.yul\":5073:5074   */\n      0x00\n        /* \"#utility.yul\":5062:5071   */\n      dup4\n        /* \"#utility.yul\":5058:5075   */\n      add\n        /* \"#utility.yul\":5045:5076   */\n      calldataload\n        /* \"#utility.yul\":5103:5121   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5095:5101   */\n      dup2\n        /* \"#utility.yul\":5092:5122   */\n      gt\n        /* \"#utility.yul\":5089:5206   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":5125:5204   */\n      tag_407\n      tag_300\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5089:5206   */\n    tag_406:\n        /* \"#utility.yul\":5238:5318   */\n      tag_408\n        /* \"#utility.yul\":5310:5317   */\n      dup6\n        /* \"#utility.yul\":5301:5307   */\n      dup3\n        /* \"#utility.yul\":5290:5299   */\n      dup7\n        /* \"#utility.yul\":5286:5308   */\n      add\n        /* \"#utility.yul\":5238:5318   */\n      tag_316\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5220:5318   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5016:5328   */\n      pop\n        /* \"#utility.yul\":4776:5335   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5894   */\n    tag_83:\n        /* \"#utility.yul\":5518:5522   */\n      0x00\n        /* \"#utility.yul\":5556:5559   */\n      0x80\n        /* \"#utility.yul\":5545:5554   */\n      dup3\n        /* \"#utility.yul\":5541:5560   */\n      add\n        /* \"#utility.yul\":5533:5560   */\n      swap1\n      pop\n        /* \"#utility.yul\":5570:5641   */\n      tag_410\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5627:5636   */\n      dup4\n        /* \"#utility.yul\":5623:5640   */\n      add\n        /* \"#utility.yul\":5614:5620   */\n      dup8\n        /* \"#utility.yul\":5570:5641   */\n      tag_310\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5651:5723   */\n      tag_411\n        /* \"#utility.yul\":5719:5721   */\n      0x20\n        /* \"#utility.yul\":5708:5717   */\n      dup4\n        /* \"#utility.yul\":5704:5722   */\n      add\n        /* \"#utility.yul\":5695:5701   */\n      dup7\n        /* \"#utility.yul\":5651:5723   */\n      tag_297\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5733:5805   */\n      tag_412\n        /* \"#utility.yul\":5801:5803   */\n      0x40\n        /* \"#utility.yul\":5790:5799   */\n      dup4\n        /* \"#utility.yul\":5786:5804   */\n      add\n        /* \"#utility.yul\":5777:5783   */\n      dup6\n        /* \"#utility.yul\":5733:5805   */\n      tag_297\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5815:5887   */\n      tag_413\n        /* \"#utility.yul\":5883:5885   */\n      0x60\n        /* \"#utility.yul\":5872:5881   */\n      dup4\n        /* \"#utility.yul\":5868:5886   */\n      add\n        /* \"#utility.yul\":5859:5865   */\n      dup5\n        /* \"#utility.yul\":5815:5887   */\n      tag_297\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5341:5894   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5900:6022   */\n    tag_317:\n        /* \"#utility.yul\":5973:5997   */\n      tag_415\n        /* \"#utility.yul\":5991:5996   */\n      dup2\n        /* \"#utility.yul\":5973:5997   */\n      tag_309\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":5966:5971   */\n      dup2\n        /* \"#utility.yul\":5963:5998   */\n      eq\n        /* \"#utility.yul\":5953:6016   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6009:6010   */\n      0x00\n        /* \"#utility.yul\":6002:6014   */\n      revert\n        /* \"#utility.yul\":5953:6016   */\n    tag_416:\n        /* \"#utility.yul\":5900:6022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6028:6167   */\n    tag_318:\n        /* \"#utility.yul\":6074:6079   */\n      0x00\n        /* \"#utility.yul\":6112:6118   */\n      dup2\n        /* \"#utility.yul\":6099:6119   */\n      calldataload\n        /* \"#utility.yul\":6090:6119   */\n      swap1\n      pop\n        /* \"#utility.yul\":6128:6161   */\n      tag_418\n        /* \"#utility.yul\":6155:6160   */\n      dup2\n        /* \"#utility.yul\":6128:6161   */\n      tag_317\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6028:6167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6173:6647   */\n    tag_93:\n        /* \"#utility.yul\":6241:6247   */\n      0x00\n        /* \"#utility.yul\":6249:6255   */\n      0x00\n        /* \"#utility.yul\":6298:6300   */\n      0x40\n        /* \"#utility.yul\":6286:6295   */\n      dup4\n        /* \"#utility.yul\":6277:6284   */\n      dup6\n        /* \"#utility.yul\":6273:6296   */\n      sub\n        /* \"#utility.yul\":6269:6301   */\n      slt\n        /* \"#utility.yul\":6266:6385   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":6304:6383   */\n      tag_421\n      tag_299\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6266:6385   */\n    tag_420:\n        /* \"#utility.yul\":6424:6425   */\n      0x00\n        /* \"#utility.yul\":6449:6502   */\n      tag_422\n        /* \"#utility.yul\":6494:6501   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup3\n        /* \"#utility.yul\":6474:6483   */\n      dup7\n        /* \"#utility.yul\":6470:6492   */\n      add\n        /* \"#utility.yul\":6449:6502   */\n      tag_318\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6439:6502   */\n      swap3\n      pop\n        /* \"#utility.yul\":6395:6512   */\n      pop\n        /* \"#utility.yul\":6551:6553   */\n      0x20\n        /* \"#utility.yul\":6577:6630   */\n      tag_423\n        /* \"#utility.yul\":6622:6629   */\n      dup6\n        /* \"#utility.yul\":6613:6619   */\n      dup3\n        /* \"#utility.yul\":6602:6611   */\n      dup7\n        /* \"#utility.yul\":6598:6620   */\n      add\n        /* \"#utility.yul\":6577:6630   */\n      tag_302\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6567:6630   */\n      swap2\n      pop\n        /* \"#utility.yul\":6522:6640   */\n      pop\n        /* \"#utility.yul\":6173:6647   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6653:6773   */\n    tag_319:\n        /* \"#utility.yul\":6725:6748   */\n      tag_425\n        /* \"#utility.yul\":6742:6747   */\n      dup2\n        /* \"#utility.yul\":6725:6748   */\n      tag_311\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6718:6723   */\n      dup2\n        /* \"#utility.yul\":6715:6749   */\n      eq\n        /* \"#utility.yul\":6705:6767   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":6763:6764   */\n      0x00\n        /* \"#utility.yul\":6760:6761   */\n      0x00\n        /* \"#utility.yul\":6753:6765   */\n      revert\n        /* \"#utility.yul\":6705:6767   */\n    tag_426:\n        /* \"#utility.yul\":6653:6773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6779:6916   */\n    tag_320:\n        /* \"#utility.yul\":6824:6829   */\n      0x00\n        /* \"#utility.yul\":6862:6868   */\n      dup2\n        /* \"#utility.yul\":6849:6869   */\n      calldataload\n        /* \"#utility.yul\":6840:6869   */\n      swap1\n      pop\n        /* \"#utility.yul\":6878:6910   */\n      tag_428\n        /* \"#utility.yul\":6904:6909   */\n      dup2\n        /* \"#utility.yul\":6878:6910   */\n      tag_319\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":6779:6916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6922:7394   */\n    tag_97:\n        /* \"#utility.yul\":6989:6995   */\n      0x00\n        /* \"#utility.yul\":6997:7003   */\n      0x00\n        /* \"#utility.yul\":7046:7048   */\n      0x40\n        /* \"#utility.yul\":7034:7043   */\n      dup4\n        /* \"#utility.yul\":7025:7032   */\n      dup6\n        /* \"#utility.yul\":7021:7044   */\n      sub\n        /* \"#utility.yul\":7017:7049   */\n      slt\n        /* \"#utility.yul\":7014:7133   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":7052:7131   */\n      tag_431\n      tag_299\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7014:7133   */\n    tag_430:\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7197:7249   */\n      tag_432\n        /* \"#utility.yul\":7241:7248   */\n      dup6\n        /* \"#utility.yul\":7232:7238   */\n      dup3\n        /* \"#utility.yul\":7221:7230   */\n      dup7\n        /* \"#utility.yul\":7217:7239   */\n      add\n        /* \"#utility.yul\":7197:7249   */\n      tag_320\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7187:7249   */\n      swap3\n      pop\n        /* \"#utility.yul\":7143:7259   */\n      pop\n        /* \"#utility.yul\":7298:7300   */\n      0x20\n        /* \"#utility.yul\":7324:7377   */\n      tag_433\n        /* \"#utility.yul\":7369:7376   */\n      dup6\n        /* \"#utility.yul\":7360:7366   */\n      dup3\n        /* \"#utility.yul\":7349:7358   */\n      dup7\n        /* \"#utility.yul\":7345:7367   */\n      add\n        /* \"#utility.yul\":7324:7377   */\n      tag_302\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7314:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7269:7387   */\n      pop\n        /* \"#utility.yul\":6922:7394   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7400:7732   */\n    tag_100:\n        /* \"#utility.yul\":7521:7525   */\n      0x00\n        /* \"#utility.yul\":7559:7561   */\n      0x40\n        /* \"#utility.yul\":7548:7557   */\n      dup3\n        /* \"#utility.yul\":7544:7562   */\n      add\n        /* \"#utility.yul\":7536:7562   */\n      swap1\n      pop\n        /* \"#utility.yul\":7572:7643   */\n      tag_435\n        /* \"#utility.yul\":7640:7641   */\n      0x00\n        /* \"#utility.yul\":7629:7638   */\n      dup4\n        /* \"#utility.yul\":7625:7642   */\n      add\n        /* \"#utility.yul\":7616:7622   */\n      dup6\n        /* \"#utility.yul\":7572:7643   */\n      tag_297\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7653:7725   */\n      tag_436\n        /* \"#utility.yul\":7721:7723   */\n      0x20\n        /* \"#utility.yul\":7710:7719   */\n      dup4\n        /* \"#utility.yul\":7706:7724   */\n      add\n        /* \"#utility.yul\":7697:7703   */\n      dup5\n        /* \"#utility.yul\":7653:7725   */\n      tag_297\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7400:7732   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7738:8067   */\n    tag_103:\n        /* \"#utility.yul\":7797:7803   */\n      0x00\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7834:7843   */\n      dup3\n        /* \"#utility.yul\":7825:7832   */\n      dup5\n        /* \"#utility.yul\":7821:7844   */\n      sub\n        /* \"#utility.yul\":7817:7849   */\n      slt\n        /* \"#utility.yul\":7814:7933   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7852:7931   */\n      tag_439\n      tag_299\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7814:7933   */\n    tag_438:\n        /* \"#utility.yul\":7972:7973   */\n      0x00\n        /* \"#utility.yul\":7997:8050   */\n      tag_440\n        /* \"#utility.yul\":8042:8049   */\n      dup5\n        /* \"#utility.yul\":8033:8039   */\n      dup3\n        /* \"#utility.yul\":8022:8031   */\n      dup6\n        /* \"#utility.yul\":8018:8040   */\n      add\n        /* \"#utility.yul\":7997:8050   */\n      tag_318\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7987:8050   */\n      swap2\n      pop\n        /* \"#utility.yul\":7943:8060   */\n      pop\n        /* \"#utility.yul\":7738:8067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8073:8242   */\n    tag_321:\n        /* \"#utility.yul\":8157:8168   */\n      0x00\n        /* \"#utility.yul\":8191:8197   */\n      dup3\n        /* \"#utility.yul\":8186:8189   */\n      dup3\n        /* \"#utility.yul\":8179:8198   */\n      mstore\n        /* \"#utility.yul\":8231:8235   */\n      0x20\n        /* \"#utility.yul\":8226:8229   */\n      dup3\n        /* \"#utility.yul\":8222:8236   */\n      add\n        /* \"#utility.yul\":8207:8236   */\n      swap1\n      pop\n        /* \"#utility.yul\":8073:8242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8248:8423   */\n    tag_322:\n        /* \"#utility.yul\":8388:8415   */\n      0x4d6f64756c65583a496e76616c6964205374616b652049442100000000000000\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8376:8382   */\n      dup3\n        /* \"#utility.yul\":8372:8386   */\n      add\n        /* \"#utility.yul\":8365:8416   */\n      mstore\n        /* \"#utility.yul\":8248:8423   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8429:8795   */\n    tag_323:\n        /* \"#utility.yul\":8571:8574   */\n      0x00\n        /* \"#utility.yul\":8592:8659   */\n      tag_444\n        /* \"#utility.yul\":8656:8658   */\n      0x19\n        /* \"#utility.yul\":8651:8654   */\n      dup4\n        /* \"#utility.yul\":8592:8659   */\n      tag_321\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8585:8659   */\n      swap2\n      pop\n        /* \"#utility.yul\":8668:8761   */\n      tag_445\n        /* \"#utility.yul\":8757:8760   */\n      dup3\n        /* \"#utility.yul\":8668:8761   */\n      tag_322\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8786:8788   */\n      0x20\n        /* \"#utility.yul\":8781:8784   */\n      dup3\n        /* \"#utility.yul\":8777:8789   */\n      add\n        /* \"#utility.yul\":8770:8789   */\n      swap1\n      pop\n        /* \"#utility.yul\":8429:8795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8801:9220   */\n    tag_109:\n        /* \"#utility.yul\":8967:8971   */\n      0x00\n        /* \"#utility.yul\":9005:9007   */\n      0x20\n        /* \"#utility.yul\":8994:9003   */\n      dup3\n        /* \"#utility.yul\":8990:9008   */\n      add\n        /* \"#utility.yul\":8982:9008   */\n      swap1\n      pop\n        /* \"#utility.yul\":9054:9063   */\n      dup2\n        /* \"#utility.yul\":9048:9052   */\n      dup2\n        /* \"#utility.yul\":9044:9064   */\n      sub\n        /* \"#utility.yul\":9040:9041   */\n      0x00\n        /* \"#utility.yul\":9029:9038   */\n      dup4\n        /* \"#utility.yul\":9025:9042   */\n      add\n        /* \"#utility.yul\":9018:9065   */\n      mstore\n        /* \"#utility.yul\":9082:9213   */\n      tag_447\n        /* \"#utility.yul\":9208:9212   */\n      dup2\n        /* \"#utility.yul\":9082:9213   */\n      tag_323\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9074:9213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:9220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9226:9407   */\n    tag_324:\n        /* \"#utility.yul\":9366:9399   */\n      0x4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e657200\n        /* \"#utility.yul\":9362:9363   */\n      0x00\n        /* \"#utility.yul\":9354:9360   */\n      dup3\n        /* \"#utility.yul\":9350:9364   */\n      add\n        /* \"#utility.yul\":9343:9400   */\n      mstore\n        /* \"#utility.yul\":9226:9407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9413:9779   */\n    tag_325:\n        /* \"#utility.yul\":9555:9558   */\n      0x00\n        /* \"#utility.yul\":9576:9643   */\n      tag_450\n        /* \"#utility.yul\":9640:9642   */\n      0x1f\n        /* \"#utility.yul\":9635:9638   */\n      dup4\n        /* \"#utility.yul\":9576:9643   */\n      tag_321\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9569:9643   */\n      swap2\n      pop\n        /* \"#utility.yul\":9652:9745   */\n      tag_451\n        /* \"#utility.yul\":9741:9744   */\n      dup3\n        /* \"#utility.yul\":9652:9745   */\n      tag_324\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9770:9772   */\n      0x20\n        /* \"#utility.yul\":9765:9768   */\n      dup3\n        /* \"#utility.yul\":9761:9773   */\n      add\n        /* \"#utility.yul\":9754:9773   */\n      swap1\n      pop\n        /* \"#utility.yul\":9413:9779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9785:10204   */\n    tag_115:\n        /* \"#utility.yul\":9951:9955   */\n      0x00\n        /* \"#utility.yul\":9989:9991   */\n      0x20\n        /* \"#utility.yul\":9978:9987   */\n      dup3\n        /* \"#utility.yul\":9974:9992   */\n      add\n        /* \"#utility.yul\":9966:9992   */\n      swap1\n      pop\n        /* \"#utility.yul\":10038:10047   */\n      dup2\n        /* \"#utility.yul\":10032:10036   */\n      dup2\n        /* \"#utility.yul\":10028:10048   */\n      sub\n        /* \"#utility.yul\":10024:10025   */\n      0x00\n        /* \"#utility.yul\":10013:10022   */\n      dup4\n        /* \"#utility.yul\":10009:10026   */\n      add\n        /* \"#utility.yul\":10002:10049   */\n      mstore\n        /* \"#utility.yul\":10066:10197   */\n      tag_453\n        /* \"#utility.yul\":10192:10196   */\n      dup2\n        /* \"#utility.yul\":10066:10197   */\n      tag_325\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":10058:10197   */\n      swap1\n      pop\n        /* \"#utility.yul\":9785:10204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10210:10439   */\n    tag_326:\n        /* \"#utility.yul\":10350:10384   */\n      0x4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420\n        /* \"#utility.yul\":10346:10347   */\n      0x00\n        /* \"#utility.yul\":10338:10344   */\n      dup3\n        /* \"#utility.yul\":10334:10348   */\n      add\n        /* \"#utility.yul\":10327:10385   */\n      mstore\n        /* \"#utility.yul\":10419:10431   */\n      0x7065726d69747465642100000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10414:10416   */\n      0x20\n        /* \"#utility.yul\":10406:10412   */\n      dup3\n        /* \"#utility.yul\":10402:10417   */\n      add\n        /* \"#utility.yul\":10395:10432   */\n      mstore\n        /* \"#utility.yul\":10210:10439   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10445:10811   */\n    tag_327:\n        /* \"#utility.yul\":10587:10590   */\n      0x00\n        /* \"#utility.yul\":10608:10675   */\n      tag_456\n        /* \"#utility.yul\":10672:10674   */\n      0x2a\n        /* \"#utility.yul\":10667:10670   */\n      dup4\n        /* \"#utility.yul\":10608:10675   */\n      tag_321\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10601:10675   */\n      swap2\n      pop\n        /* \"#utility.yul\":10684:10777   */\n      tag_457\n        /* \"#utility.yul\":10773:10776   */\n      dup3\n        /* \"#utility.yul\":10684:10777   */\n      tag_326\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10802:10804   */\n      0x40\n        /* \"#utility.yul\":10797:10800   */\n      dup3\n        /* \"#utility.yul\":10793:10805   */\n      add\n        /* \"#utility.yul\":10786:10805   */\n      swap1\n      pop\n        /* \"#utility.yul\":10445:10811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10817:11236   */\n    tag_120:\n        /* \"#utility.yul\":10983:10987   */\n      0x00\n        /* \"#utility.yul\":11021:11023   */\n      0x20\n        /* \"#utility.yul\":11010:11019   */\n      dup3\n        /* \"#utility.yul\":11006:11024   */\n      add\n        /* \"#utility.yul\":10998:11024   */\n      swap1\n      pop\n        /* \"#utility.yul\":11070:11079   */\n      dup2\n        /* \"#utility.yul\":11064:11068   */\n      dup2\n        /* \"#utility.yul\":11060:11080   */\n      sub\n        /* \"#utility.yul\":11056:11057   */\n      0x00\n        /* \"#utility.yul\":11045:11054   */\n      dup4\n        /* \"#utility.yul\":11041:11058   */\n      add\n        /* \"#utility.yul\":11034:11081   */\n      mstore\n        /* \"#utility.yul\":11098:11229   */\n      tag_459\n        /* \"#utility.yul\":11224:11228   */\n      dup2\n        /* \"#utility.yul\":11098:11229   */\n      tag_327\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11090:11229   */\n      swap1\n      pop\n        /* \"#utility.yul\":10817:11236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11242:11416   */\n    tag_328:\n        /* \"#utility.yul\":11382:11408   */\n      0x4d6f64756c65583a4e6f7468696e6720746f20636c61696d0000000000000000\n        /* \"#utility.yul\":11378:11379   */\n      0x00\n        /* \"#utility.yul\":11370:11376   */\n      dup3\n        /* \"#utility.yul\":11366:11380   */\n      add\n        /* \"#utility.yul\":11359:11409   */\n      mstore\n        /* \"#utility.yul\":11242:11416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11422:11788   */\n    tag_329:\n        /* \"#utility.yul\":11564:11567   */\n      0x00\n        /* \"#utility.yul\":11585:11652   */\n      tag_462\n        /* \"#utility.yul\":11649:11651   */\n      0x18\n        /* \"#utility.yul\":11644:11647   */\n      dup4\n        /* \"#utility.yul\":11585:11652   */\n      tag_321\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":11578:11652   */\n      swap2\n      pop\n        /* \"#utility.yul\":11661:11754   */\n      tag_463\n        /* \"#utility.yul\":11750:11753   */\n      dup3\n        /* \"#utility.yul\":11661:11754   */\n      tag_328\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11779:11781   */\n      0x20\n        /* \"#utility.yul\":11774:11777   */\n      dup3\n        /* \"#utility.yul\":11770:11782   */\n      add\n        /* \"#utility.yul\":11763:11782   */\n      swap1\n      pop\n        /* \"#utility.yul\":11422:11788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11794:12213   */\n    tag_123:\n        /* \"#utility.yul\":11960:11964   */\n      0x00\n        /* \"#utility.yul\":11998:12000   */\n      0x20\n        /* \"#utility.yul\":11987:11996   */\n      dup3\n        /* \"#utility.yul\":11983:12001   */\n      add\n        /* \"#utility.yul\":11975:12001   */\n      swap1\n      pop\n        /* \"#utility.yul\":12047:12056   */\n      dup2\n        /* \"#utility.yul\":12041:12045   */\n      dup2\n        /* \"#utility.yul\":12037:12057   */\n      sub\n        /* \"#utility.yul\":12033:12034   */\n      0x00\n        /* \"#utility.yul\":12022:12031   */\n      dup4\n        /* \"#utility.yul\":12018:12035   */\n      add\n        /* \"#utility.yul\":12011:12058   */\n      mstore\n        /* \"#utility.yul\":12075:12206   */\n      tag_465\n        /* \"#utility.yul\":12201:12205   */\n      dup2\n        /* \"#utility.yul\":12075:12206   */\n      tag_329\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12067:12206   */\n      swap1\n      pop\n        /* \"#utility.yul\":11794:12213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12219:12399   */\n    tag_330:\n        /* \"#utility.yul\":12267:12344   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12264:12265   */\n      0x00\n        /* \"#utility.yul\":12257:12345   */\n      mstore\n        /* \"#utility.yul\":12364:12368   */\n      0x11\n        /* \"#utility.yul\":12361:12362   */\n      0x04\n        /* \"#utility.yul\":12354:12369   */\n      mstore\n        /* \"#utility.yul\":12388:12392   */\n      0x24\n        /* \"#utility.yul\":12385:12386   */\n      0x00\n        /* \"#utility.yul\":12378:12393   */\n      revert\n        /* \"#utility.yul\":12405:12599   */\n    tag_128:\n        /* \"#utility.yul\":12445:12449   */\n      0x00\n        /* \"#utility.yul\":12465:12485   */\n      tag_468\n        /* \"#utility.yul\":12483:12484   */\n      dup3\n        /* \"#utility.yul\":12465:12485   */\n      tag_296\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12460:12485   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12519   */\n      tag_469\n        /* \"#utility.yul\":12517:12518   */\n      dup4\n        /* \"#utility.yul\":12499:12519   */\n      tag_296\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12494:12519   */\n      swap3\n      pop\n        /* \"#utility.yul\":12543:12544   */\n      dup3\n        /* \"#utility.yul\":12540:12541   */\n      dup3\n        /* \"#utility.yul\":12536:12545   */\n      sub\n        /* \"#utility.yul\":12528:12545   */\n      swap1\n      pop\n        /* \"#utility.yul\":12567:12568   */\n      dup2\n        /* \"#utility.yul\":12561:12565   */\n      dup2\n        /* \"#utility.yul\":12558:12569   */\n      gt\n        /* \"#utility.yul\":12555:12592   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":12572:12590   */\n      tag_471\n      tag_330\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12555:12592   */\n    tag_470:\n        /* \"#utility.yul\":12405:12599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12605:12833   */\n    tag_331:\n        /* \"#utility.yul\":12745:12779   */\n      0x4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":12741:12742   */\n      0x00\n        /* \"#utility.yul\":12733:12739   */\n      dup3\n        /* \"#utility.yul\":12729:12743   */\n      add\n        /* \"#utility.yul\":12722:12780   */\n      mstore\n        /* \"#utility.yul\":12814:12825   */\n      0x68616e207a65726f210000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12809:12811   */\n      0x20\n        /* \"#utility.yul\":12801:12807   */\n      dup3\n        /* \"#utility.yul\":12797:12812   */\n      add\n        /* \"#utility.yul\":12790:12826   */\n      mstore\n        /* \"#utility.yul\":12605:12833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12839:13205   */\n    tag_332:\n        /* \"#utility.yul\":12981:12984   */\n      0x00\n        /* \"#utility.yul\":13002:13069   */\n      tag_474\n        /* \"#utility.yul\":13066:13068   */\n      0x29\n        /* \"#utility.yul\":13061:13064   */\n      dup4\n        /* \"#utility.yul\":13002:13069   */\n      tag_321\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12995:13069   */\n      swap2\n      pop\n        /* \"#utility.yul\":13078:13171   */\n      tag_475\n        /* \"#utility.yul\":13167:13170   */\n      dup3\n        /* \"#utility.yul\":13078:13171   */\n      tag_331\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":13196:13198   */\n      0x40\n        /* \"#utility.yul\":13191:13194   */\n      dup3\n        /* \"#utility.yul\":13187:13199   */\n      add\n        /* \"#utility.yul\":13180:13199   */\n      swap1\n      pop\n        /* \"#utility.yul\":12839:13205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13211:13630   */\n    tag_147:\n        /* \"#utility.yul\":13377:13381   */\n      0x00\n        /* \"#utility.yul\":13415:13417   */\n      0x20\n        /* \"#utility.yul\":13404:13413   */\n      dup3\n        /* \"#utility.yul\":13400:13418   */\n      add\n        /* \"#utility.yul\":13392:13418   */\n      swap1\n      pop\n        /* \"#utility.yul\":13464:13473   */\n      dup2\n        /* \"#utility.yul\":13458:13462   */\n      dup2\n        /* \"#utility.yul\":13454:13474   */\n      sub\n        /* \"#utility.yul\":13450:13451   */\n      0x00\n        /* \"#utility.yul\":13439:13448   */\n      dup4\n        /* \"#utility.yul\":13435:13452   */\n      add\n        /* \"#utility.yul\":13428:13475   */\n      mstore\n        /* \"#utility.yul\":13492:13623   */\n      tag_477\n        /* \"#utility.yul\":13618:13622   */\n      dup2\n        /* \"#utility.yul\":13492:13623   */\n      tag_332\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13484:13623   */\n      swap1\n      pop\n        /* \"#utility.yul\":13211:13630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13636:13807   */\n    tag_333:\n        /* \"#utility.yul\":13776:13799   */\n      0x4d6f64756c65583a4275726e7420746f6b656e73210000000000000000000000\n        /* \"#utility.yul\":13772:13773   */\n      0x00\n        /* \"#utility.yul\":13764:13770   */\n      dup3\n        /* \"#utility.yul\":13760:13774   */\n      add\n        /* \"#utility.yul\":13753:13800   */\n      mstore\n        /* \"#utility.yul\":13636:13807   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13813:14179   */\n    tag_334:\n        /* \"#utility.yul\":13955:13958   */\n      0x00\n        /* \"#utility.yul\":13976:14043   */\n      tag_480\n        /* \"#utility.yul\":14040:14042   */\n      0x15\n        /* \"#utility.yul\":14035:14038   */\n      dup4\n        /* \"#utility.yul\":13976:14043   */\n      tag_321\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":13969:14043   */\n      swap2\n      pop\n        /* \"#utility.yul\":14052:14145   */\n      tag_481\n        /* \"#utility.yul\":14141:14144   */\n      dup3\n        /* \"#utility.yul\":14052:14145   */\n      tag_333\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":14170:14172   */\n      0x20\n        /* \"#utility.yul\":14165:14168   */\n      dup3\n        /* \"#utility.yul\":14161:14173   */\n      add\n        /* \"#utility.yul\":14154:14173   */\n      swap1\n      pop\n        /* \"#utility.yul\":13813:14179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14185:14604   */\n    tag_151:\n        /* \"#utility.yul\":14351:14355   */\n      0x00\n        /* \"#utility.yul\":14389:14391   */\n      0x20\n        /* \"#utility.yul\":14378:14387   */\n      dup3\n        /* \"#utility.yul\":14374:14392   */\n      add\n        /* \"#utility.yul\":14366:14392   */\n      swap1\n      pop\n        /* \"#utility.yul\":14438:14447   */\n      dup2\n        /* \"#utility.yul\":14432:14436   */\n      dup2\n        /* \"#utility.yul\":14428:14448   */\n      sub\n        /* \"#utility.yul\":14424:14425   */\n      0x00\n        /* \"#utility.yul\":14413:14422   */\n      dup4\n        /* \"#utility.yul\":14409:14426   */\n      add\n        /* \"#utility.yul\":14402:14449   */\n      mstore\n        /* \"#utility.yul\":14466:14597   */\n      tag_483\n        /* \"#utility.yul\":14592:14596   */\n      dup2\n        /* \"#utility.yul\":14466:14597   */\n      tag_334\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14458:14597   */\n      swap1\n      pop\n        /* \"#utility.yul\":14185:14604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14610:14789   */\n    tag_335:\n        /* \"#utility.yul\":14750:14781   */\n      0x4d6f64756c65583a496e73756666696369656e742062616c616e636521000000\n        /* \"#utility.yul\":14746:14747   */\n      0x00\n        /* \"#utility.yul\":14738:14744   */\n      dup3\n        /* \"#utility.yul\":14734:14748   */\n      add\n        /* \"#utility.yul\":14727:14782   */\n      mstore\n        /* \"#utility.yul\":14610:14789   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14795:15161   */\n    tag_336:\n        /* \"#utility.yul\":14937:14940   */\n      0x00\n        /* \"#utility.yul\":14958:15025   */\n      tag_486\n        /* \"#utility.yul\":15022:15024   */\n      0x1d\n        /* \"#utility.yul\":15017:15020   */\n      dup4\n        /* \"#utility.yul\":14958:15025   */\n      tag_321\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14951:15025   */\n      swap2\n      pop\n        /* \"#utility.yul\":15034:15127   */\n      tag_487\n        /* \"#utility.yul\":15123:15126   */\n      dup3\n        /* \"#utility.yul\":15034:15127   */\n      tag_335\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15152:15154   */\n      0x20\n        /* \"#utility.yul\":15147:15150   */\n      dup3\n        /* \"#utility.yul\":15143:15155   */\n      add\n        /* \"#utility.yul\":15136:15155   */\n      swap1\n      pop\n        /* \"#utility.yul\":14795:15161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15167:15586   */\n    tag_154:\n        /* \"#utility.yul\":15333:15337   */\n      0x00\n        /* \"#utility.yul\":15371:15373   */\n      0x20\n        /* \"#utility.yul\":15360:15369   */\n      dup3\n        /* \"#utility.yul\":15356:15374   */\n      add\n        /* \"#utility.yul\":15348:15374   */\n      swap1\n      pop\n        /* \"#utility.yul\":15420:15429   */\n      dup2\n        /* \"#utility.yul\":15414:15418   */\n      dup2\n        /* \"#utility.yul\":15410:15430   */\n      sub\n        /* \"#utility.yul\":15406:15407   */\n      0x00\n        /* \"#utility.yul\":15395:15404   */\n      dup4\n        /* \"#utility.yul\":15391:15408   */\n      add\n        /* \"#utility.yul\":15384:15431   */\n      mstore\n        /* \"#utility.yul\":15448:15579   */\n      tag_489\n        /* \"#utility.yul\":15574:15578   */\n      dup2\n        /* \"#utility.yul\":15448:15579   */\n      tag_336\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15440:15579   */\n      swap1\n      pop\n        /* \"#utility.yul\":15167:15586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15592:15772   */\n    tag_169:\n        /* \"#utility.yul\":15640:15717   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15637:15638   */\n      0x00\n        /* \"#utility.yul\":15630:15718   */\n      mstore\n        /* \"#utility.yul\":15737:15741   */\n      0x32\n        /* \"#utility.yul\":15734:15735   */\n      0x04\n        /* \"#utility.yul\":15727:15742   */\n      mstore\n        /* \"#utility.yul\":15761:15765   */\n      0x24\n        /* \"#utility.yul\":15758:15759   */\n      0x00\n        /* \"#utility.yul\":15751:15766   */\n      revert\n        /* \"#utility.yul\":15778:15969   */\n    tag_178:\n        /* \"#utility.yul\":15818:15821   */\n      0x00\n        /* \"#utility.yul\":15837:15857   */\n      tag_492\n        /* \"#utility.yul\":15855:15856   */\n      dup3\n        /* \"#utility.yul\":15837:15857   */\n      tag_296\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":15832:15857   */\n      swap2\n      pop\n        /* \"#utility.yul\":15871:15891   */\n      tag_493\n        /* \"#utility.yul\":15889:15890   */\n      dup4\n        /* \"#utility.yul\":15871:15891   */\n      tag_296\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":15866:15891   */\n      swap3\n      pop\n        /* \"#utility.yul\":15914:15915   */\n      dup3\n        /* \"#utility.yul\":15911:15912   */\n      dup3\n        /* \"#utility.yul\":15907:15916   */\n      add\n        /* \"#utility.yul\":15900:15916   */\n      swap1\n      pop\n        /* \"#utility.yul\":15935:15938   */\n      dup1\n        /* \"#utility.yul\":15932:15933   */\n      dup3\n        /* \"#utility.yul\":15929:15939   */\n      gt\n        /* \"#utility.yul\":15926:15962   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":15942:15960   */\n      tag_495\n      tag_330\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15926:15962   */\n    tag_494:\n        /* \"#utility.yul\":15778:15969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15975:16151   */\n    tag_337:\n        /* \"#utility.yul\":16115:16143   */\n      0x4d6f64756c65583a546f74616c20616d6f756e74206973203021000000000000\n        /* \"#utility.yul\":16111:16112   */\n      0x00\n        /* \"#utility.yul\":16103:16109   */\n      dup3\n        /* \"#utility.yul\":16099:16113   */\n      add\n        /* \"#utility.yul\":16092:16144   */\n      mstore\n        /* \"#utility.yul\":15975:16151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16157:16523   */\n    tag_338:\n        /* \"#utility.yul\":16299:16302   */\n      0x00\n        /* \"#utility.yul\":16320:16387   */\n      tag_498\n        /* \"#utility.yul\":16384:16386   */\n      0x1a\n        /* \"#utility.yul\":16379:16382   */\n      dup4\n        /* \"#utility.yul\":16320:16387   */\n      tag_321\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":16313:16387   */\n      swap2\n      pop\n        /* \"#utility.yul\":16396:16489   */\n      tag_499\n        /* \"#utility.yul\":16485:16488   */\n      dup3\n        /* \"#utility.yul\":16396:16489   */\n      tag_337\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16514:16516   */\n      0x20\n        /* \"#utility.yul\":16509:16512   */\n      dup3\n        /* \"#utility.yul\":16505:16517   */\n      add\n        /* \"#utility.yul\":16498:16517   */\n      swap1\n      pop\n        /* \"#utility.yul\":16157:16523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16529:16948   */\n    tag_184:\n        /* \"#utility.yul\":16695:16699   */\n      0x00\n        /* \"#utility.yul\":16733:16735   */\n      0x20\n        /* \"#utility.yul\":16722:16731   */\n      dup3\n        /* \"#utility.yul\":16718:16736   */\n      add\n        /* \"#utility.yul\":16710:16736   */\n      swap1\n      pop\n        /* \"#utility.yul\":16782:16791   */\n      dup2\n        /* \"#utility.yul\":16776:16780   */\n      dup2\n        /* \"#utility.yul\":16772:16792   */\n      sub\n        /* \"#utility.yul\":16768:16769   */\n      0x00\n        /* \"#utility.yul\":16757:16766   */\n      dup4\n        /* \"#utility.yul\":16753:16770   */\n      add\n        /* \"#utility.yul\":16746:16793   */\n      mstore\n        /* \"#utility.yul\":16810:16941   */\n      tag_501\n        /* \"#utility.yul\":16936:16940   */\n      dup2\n        /* \"#utility.yul\":16810:16941   */\n      tag_338\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16802:16941   */\n      swap1\n      pop\n        /* \"#utility.yul\":16529:16948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16954:17134   */\n    tag_339:\n        /* \"#utility.yul\":17002:17079   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16999:17000   */\n      0x00\n        /* \"#utility.yul\":16992:17080   */\n      mstore\n        /* \"#utility.yul\":17099:17103   */\n      0x12\n        /* \"#utility.yul\":17096:17097   */\n      0x04\n        /* \"#utility.yul\":17089:17104   */\n      mstore\n        /* \"#utility.yul\":17123:17127   */\n      0x24\n        /* \"#utility.yul\":17120:17121   */\n      0x00\n        /* \"#utility.yul\":17113:17128   */\n      revert\n        /* \"#utility.yul\":17140:17325   */\n    tag_202:\n        /* \"#utility.yul\":17180:17181   */\n      0x00\n        /* \"#utility.yul\":17197:17217   */\n      tag_504\n        /* \"#utility.yul\":17215:17216   */\n      dup3\n        /* \"#utility.yul\":17197:17217   */\n      tag_296\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":17192:17217   */\n      swap2\n      pop\n        /* \"#utility.yul\":17231:17251   */\n      tag_505\n        /* \"#utility.yul\":17249:17250   */\n      dup4\n        /* \"#utility.yul\":17231:17251   */\n      tag_296\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17226:17251   */\n      swap3\n      pop\n        /* \"#utility.yul\":17270:17271   */\n      dup3\n        /* \"#utility.yul\":17260:17295   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":17275:17293   */\n      tag_507\n      tag_339\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":17260:17295   */\n    tag_506:\n        /* \"#utility.yul\":17317:17318   */\n      dup3\n        /* \"#utility.yul\":17314:17315   */\n      dup3\n        /* \"#utility.yul\":17310:17319   */\n      div\n        /* \"#utility.yul\":17305:17319   */\n      swap1\n      pop\n        /* \"#utility.yul\":17140:17325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17331:17741   */\n    tag_211:\n        /* \"#utility.yul\":17371:17378   */\n      0x00\n        /* \"#utility.yul\":17394:17414   */\n      tag_509\n        /* \"#utility.yul\":17412:17413   */\n      dup3\n        /* \"#utility.yul\":17394:17414   */\n      tag_296\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":17389:17414   */\n      swap2\n      pop\n        /* \"#utility.yul\":17428:17448   */\n      tag_510\n        /* \"#utility.yul\":17446:17447   */\n      dup4\n        /* \"#utility.yul\":17428:17448   */\n      tag_296\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17423:17448   */\n      swap3\n      pop\n        /* \"#utility.yul\":17483:17484   */\n      dup3\n        /* \"#utility.yul\":17480:17481   */\n      dup3\n        /* \"#utility.yul\":17476:17485   */\n      mul\n        /* \"#utility.yul\":17505:17535   */\n      tag_511\n        /* \"#utility.yul\":17523:17534   */\n      dup2\n        /* \"#utility.yul\":17505:17535   */\n      tag_296\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":17494:17535   */\n      swap2\n      pop\n        /* \"#utility.yul\":17684:17685   */\n      dup3\n        /* \"#utility.yul\":17675:17682   */\n      dup3\n        /* \"#utility.yul\":17671:17686   */\n      div\n        /* \"#utility.yul\":17668:17669   */\n      dup5\n        /* \"#utility.yul\":17665:17687   */\n      eq\n        /* \"#utility.yul\":17645:17646   */\n      dup4\n        /* \"#utility.yul\":17638:17647   */\n      iszero\n        /* \"#utility.yul\":17618:17701   */\n      or\n        /* \"#utility.yul\":17595:17734   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":17714:17732   */\n      tag_513\n      tag_330\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17595:17734   */\n    tag_512:\n        /* \"#utility.yul\":17379:17741   */\n      pop\n        /* \"#utility.yul\":17331:17741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17747:17890   */\n    tag_340:\n        /* \"#utility.yul\":17804:17809   */\n      0x00\n        /* \"#utility.yul\":17835:17841   */\n      dup2\n        /* \"#utility.yul\":17829:17842   */\n      mload\n        /* \"#utility.yul\":17820:17842   */\n      swap1\n      pop\n        /* \"#utility.yul\":17851:17884   */\n      tag_515\n        /* \"#utility.yul\":17878:17883   */\n      dup2\n        /* \"#utility.yul\":17851:17884   */\n      tag_301\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17747:17890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17896:18247   */\n    tag_240:\n        /* \"#utility.yul\":17966:17972   */\n      0x00\n        /* \"#utility.yul\":18015:18017   */\n      0x20\n        /* \"#utility.yul\":18003:18012   */\n      dup3\n        /* \"#utility.yul\":17994:18001   */\n      dup5\n        /* \"#utility.yul\":17990:18013   */\n      sub\n        /* \"#utility.yul\":17986:18018   */\n      slt\n        /* \"#utility.yul\":17983:18102   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":18021:18100   */\n      tag_518\n      tag_299\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":17983:18102   */\n    tag_517:\n        /* \"#utility.yul\":18141:18142   */\n      0x00\n        /* \"#utility.yul\":18166:18230   */\n      tag_519\n        /* \"#utility.yul\":18222:18229   */\n      dup5\n        /* \"#utility.yul\":18213:18219   */\n      dup3\n        /* \"#utility.yul\":18202:18211   */\n      dup6\n        /* \"#utility.yul\":18198:18220   */\n      add\n        /* \"#utility.yul\":18166:18230   */\n      tag_340\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":18156:18230   */\n      swap2\n      pop\n        /* \"#utility.yul\":18112:18240   */\n      pop\n        /* \"#utility.yul\":17896:18247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18253:18484   */\n    tag_341:\n        /* \"#utility.yul\":18393:18427   */\n      0x4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265\n        /* \"#utility.yul\":18389:18390   */\n      0x00\n        /* \"#utility.yul\":18381:18387   */\n      dup3\n        /* \"#utility.yul\":18377:18391   */\n      add\n        /* \"#utility.yul\":18370:18428   */\n      mstore\n        /* \"#utility.yul\":18462:18476   */\n      0x61746572207468616e2030210000000000000000000000000000000000000000\n        /* \"#utility.yul\":18457:18459   */\n      0x20\n        /* \"#utility.yul\":18449:18455   */\n      dup3\n        /* \"#utility.yul\":18445:18460   */\n      add\n        /* \"#utility.yul\":18438:18477   */\n      mstore\n        /* \"#utility.yul\":18253:18484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18490:18856   */\n    tag_342:\n        /* \"#utility.yul\":18632:18635   */\n      0x00\n        /* \"#utility.yul\":18653:18720   */\n      tag_522\n        /* \"#utility.yul\":18717:18719   */\n      0x2c\n        /* \"#utility.yul\":18712:18715   */\n      dup4\n        /* \"#utility.yul\":18653:18720   */\n      tag_321\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":18646:18720   */\n      swap2\n      pop\n        /* \"#utility.yul\":18729:18822   */\n      tag_523\n        /* \"#utility.yul\":18818:18821   */\n      dup3\n        /* \"#utility.yul\":18729:18822   */\n      tag_341\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18847:18849   */\n      0x40\n        /* \"#utility.yul\":18842:18845   */\n      dup3\n        /* \"#utility.yul\":18838:18850   */\n      add\n        /* \"#utility.yul\":18831:18850   */\n      swap1\n      pop\n        /* \"#utility.yul\":18490:18856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18862:19281   */\n    tag_248:\n        /* \"#utility.yul\":19028:19032   */\n      0x00\n        /* \"#utility.yul\":19066:19068   */\n      0x20\n        /* \"#utility.yul\":19055:19064   */\n      dup3\n        /* \"#utility.yul\":19051:19069   */\n      add\n        /* \"#utility.yul\":19043:19069   */\n      swap1\n      pop\n        /* \"#utility.yul\":19115:19124   */\n      dup2\n        /* \"#utility.yul\":19109:19113   */\n      dup2\n        /* \"#utility.yul\":19105:19125   */\n      sub\n        /* \"#utility.yul\":19101:19102   */\n      0x00\n        /* \"#utility.yul\":19090:19099   */\n      dup4\n        /* \"#utility.yul\":19086:19103   */\n      add\n        /* \"#utility.yul\":19079:19126   */\n      mstore\n        /* \"#utility.yul\":19143:19274   */\n      tag_525\n        /* \"#utility.yul\":19269:19273   */\n      dup2\n        /* \"#utility.yul\":19143:19274   */\n      tag_342\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":19135:19274   */\n      swap1\n      pop\n        /* \"#utility.yul\":18862:19281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19287:19468   */\n    tag_343:\n        /* \"#utility.yul\":19427:19460   */\n      0x4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f642100\n        /* \"#utility.yul\":19423:19424   */\n      0x00\n        /* \"#utility.yul\":19415:19421   */\n      dup3\n        /* \"#utility.yul\":19411:19425   */\n      add\n        /* \"#utility.yul\":19404:19461   */\n      mstore\n        /* \"#utility.yul\":19287:19468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19474:19840   */\n    tag_344:\n        /* \"#utility.yul\":19616:19619   */\n      0x00\n        /* \"#utility.yul\":19637:19704   */\n      tag_528\n        /* \"#utility.yul\":19701:19703   */\n      0x1f\n        /* \"#utility.yul\":19696:19699   */\n      dup4\n        /* \"#utility.yul\":19637:19704   */\n      tag_321\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":19630:19704   */\n      swap2\n      pop\n        /* \"#utility.yul\":19713:19806   */\n      tag_529\n        /* \"#utility.yul\":19802:19805   */\n      dup3\n        /* \"#utility.yul\":19713:19806   */\n      tag_343\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":19831:19833   */\n      0x20\n        /* \"#utility.yul\":19826:19829   */\n      dup3\n        /* \"#utility.yul\":19822:19834   */\n      add\n        /* \"#utility.yul\":19815:19834   */\n      swap1\n      pop\n        /* \"#utility.yul\":19474:19840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19846:20265   */\n    tag_251:\n        /* \"#utility.yul\":20012:20016   */\n      0x00\n        /* \"#utility.yul\":20050:20052   */\n      0x20\n        /* \"#utility.yul\":20039:20048   */\n      dup3\n        /* \"#utility.yul\":20035:20053   */\n      add\n        /* \"#utility.yul\":20027:20053   */\n      swap1\n      pop\n        /* \"#utility.yul\":20099:20108   */\n      dup2\n        /* \"#utility.yul\":20093:20097   */\n      dup2\n        /* \"#utility.yul\":20089:20109   */\n      sub\n        /* \"#utility.yul\":20085:20086   */\n      0x00\n        /* \"#utility.yul\":20074:20083   */\n      dup4\n        /* \"#utility.yul\":20070:20087   */\n      add\n        /* \"#utility.yul\":20063:20110   */\n      mstore\n        /* \"#utility.yul\":20127:20258   */\n      tag_531\n        /* \"#utility.yul\":20253:20257   */\n      dup2\n        /* \"#utility.yul\":20127:20258   */\n      tag_344\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":20119:20258   */\n      swap1\n      pop\n        /* \"#utility.yul\":19846:20265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20271:20484   */\n    tag_256:\n        /* \"#utility.yul\":20310:20313   */\n      0x00\n        /* \"#utility.yul\":20329:20348   */\n      tag_533\n        /* \"#utility.yul\":20346:20347   */\n      dup3\n        /* \"#utility.yul\":20329:20348   */\n      tag_311\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":20324:20348   */\n      swap2\n      pop\n        /* \"#utility.yul\":20362:20381   */\n      tag_534\n        /* \"#utility.yul\":20379:20380   */\n      dup4\n        /* \"#utility.yul\":20362:20381   */\n      tag_311\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":20357:20381   */\n      swap3\n      pop\n        /* \"#utility.yul\":20404:20405   */\n      dup3\n        /* \"#utility.yul\":20401:20402   */\n      dup3\n        /* \"#utility.yul\":20397:20406   */\n      add\n        /* \"#utility.yul\":20390:20406   */\n      swap1\n      pop\n        /* \"#utility.yul\":20427:20453   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":20422:20425   */\n      dup2\n        /* \"#utility.yul\":20419:20454   */\n      gt\n        /* \"#utility.yul\":20416:20477   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":20457:20475   */\n      tag_536\n      tag_330\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":20416:20477   */\n    tag_535:\n        /* \"#utility.yul\":20271:20484   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20490:21039   */\n    tag_263:\n        /* \"#utility.yul\":20665:20669   */\n      0x00\n        /* \"#utility.yul\":20703:20706   */\n      0x80\n        /* \"#utility.yul\":20692:20701   */\n      dup3\n        /* \"#utility.yul\":20688:20707   */\n      add\n        /* \"#utility.yul\":20680:20707   */\n      swap1\n      pop\n        /* \"#utility.yul\":20717:20788   */\n      tag_538\n        /* \"#utility.yul\":20785:20786   */\n      0x00\n        /* \"#utility.yul\":20774:20783   */\n      dup4\n        /* \"#utility.yul\":20770:20787   */\n      add\n        /* \"#utility.yul\":20761:20767   */\n      dup8\n        /* \"#utility.yul\":20717:20788   */\n      tag_297\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":20798:20868   */\n      tag_539\n        /* \"#utility.yul\":20864:20866   */\n      0x20\n        /* \"#utility.yul\":20853:20862   */\n      dup4\n        /* \"#utility.yul\":20849:20867   */\n      add\n        /* \"#utility.yul\":20840:20846   */\n      dup7\n        /* \"#utility.yul\":20798:20868   */\n      tag_312\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":20878:20950   */\n      tag_540\n        /* \"#utility.yul\":20946:20948   */\n      0x40\n        /* \"#utility.yul\":20935:20944   */\n      dup4\n        /* \"#utility.yul\":20931:20949   */\n      add\n        /* \"#utility.yul\":20922:20928   */\n      dup6\n        /* \"#utility.yul\":20878:20950   */\n      tag_297\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20960:21032   */\n      tag_541\n        /* \"#utility.yul\":21028:21030   */\n      0x60\n        /* \"#utility.yul\":21017:21026   */\n      dup4\n        /* \"#utility.yul\":21013:21031   */\n      add\n        /* \"#utility.yul\":21004:21010   */\n      dup5\n        /* \"#utility.yul\":20960:21032   */\n      tag_297\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20490:21039   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21045:21278   */\n    tag_265:\n        /* \"#utility.yul\":21084:21087   */\n      0x00\n        /* \"#utility.yul\":21107:21131   */\n      tag_543\n        /* \"#utility.yul\":21125:21130   */\n      dup3\n        /* \"#utility.yul\":21107:21131   */\n      tag_296\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":21098:21131   */\n      swap2\n      pop\n        /* \"#utility.yul\":21153:21219   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21146:21151   */\n      dup3\n        /* \"#utility.yul\":21143:21220   */\n      sub\n        /* \"#utility.yul\":21140:21243   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":21223:21241   */\n      tag_545\n      tag_330\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":21140:21243   */\n    tag_544:\n        /* \"#utility.yul\":21270:21271   */\n      0x01\n        /* \"#utility.yul\":21263:21268   */\n      dup3\n        /* \"#utility.yul\":21259:21272   */\n      add\n        /* \"#utility.yul\":21252:21272   */\n      swap1\n      pop\n        /* \"#utility.yul\":21045:21278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21284:21616   */\n    tag_277:\n        /* \"#utility.yul\":21405:21409   */\n      0x00\n        /* \"#utility.yul\":21443:21445   */\n      0x40\n        /* \"#utility.yul\":21432:21441   */\n      dup3\n        /* \"#utility.yul\":21428:21446   */\n      add\n        /* \"#utility.yul\":21420:21446   */\n      swap1\n      pop\n        /* \"#utility.yul\":21456:21527   */\n      tag_547\n        /* \"#utility.yul\":21524:21525   */\n      0x00\n        /* \"#utility.yul\":21513:21522   */\n      dup4\n        /* \"#utility.yul\":21509:21526   */\n      add\n        /* \"#utility.yul\":21500:21506   */\n      dup6\n        /* \"#utility.yul\":21456:21527   */\n      tag_310\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":21537:21609   */\n      tag_548\n        /* \"#utility.yul\":21605:21607   */\n      0x20\n        /* \"#utility.yul\":21594:21603   */\n      dup4\n        /* \"#utility.yul\":21590:21608   */\n      add\n        /* \"#utility.yul\":21581:21587   */\n      dup5\n        /* \"#utility.yul\":21537:21609   */\n      tag_297\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":21284:21616   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21622:22064   */\n    tag_289:\n        /* \"#utility.yul\":21771:21775   */\n      0x00\n        /* \"#utility.yul\":21809:21811   */\n      0x60\n        /* \"#utility.yul\":21798:21807   */\n      dup3\n        /* \"#utility.yul\":21794:21812   */\n      add\n        /* \"#utility.yul\":21786:21812   */\n      swap1\n      pop\n        /* \"#utility.yul\":21822:21893   */\n      tag_550\n        /* \"#utility.yul\":21890:21891   */\n      0x00\n        /* \"#utility.yul\":21879:21888   */\n      dup4\n        /* \"#utility.yul\":21875:21892   */\n      add\n        /* \"#utility.yul\":21866:21872   */\n      dup7\n        /* \"#utility.yul\":21822:21893   */\n      tag_310\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":21903:21975   */\n      tag_551\n        /* \"#utility.yul\":21971:21973   */\n      0x20\n        /* \"#utility.yul\":21960:21969   */\n      dup4\n        /* \"#utility.yul\":21956:21974   */\n      add\n        /* \"#utility.yul\":21947:21953   */\n      dup6\n        /* \"#utility.yul\":21903:21975   */\n      tag_310\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21985:22057   */\n      tag_552\n        /* \"#utility.yul\":22053:22055   */\n      0x40\n        /* \"#utility.yul\":22042:22051   */\n      dup4\n        /* \"#utility.yul\":22038:22056   */\n      add\n        /* \"#utility.yul\":22029:22035   */\n      dup5\n        /* \"#utility.yul\":21985:22057   */\n      tag_297\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":21622:22064   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220db767b669f7098c30ca8f7e063cf626ddb2c456dac7743f8d6e611af584578aa64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": 315,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 322,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:10",
										"nodeType": "YulBlock",
										"src": "0:1707:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "939:413:10",
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:10",
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nativeSrc": "987:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nativeSrc": "987:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nativeSrc": "956:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:10",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nativeSrc": "952:32:10",
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nativeSrc": "949:119:10",
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nativeSrc": "1078:128:10",
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nativeSrc": "1093:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nativeSrc": "1164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nativeSrc": "1132:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:10",
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nativeSrc": "1231:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nativeSrc": "1303:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nativeSrc": "1271:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:10",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:10",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:10",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:10",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											},
											{
												"body": {
													"nativeSrc": "1423:53:10",
													"nodeType": "YulBlock",
													"src": "1423:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:10"
																		},
																		"nativeSrc": "1445:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:10"
																},
																"nativeSrc": "1433:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:10"
															},
															"nativeSrc": "1433:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:10",
														"nodeType": "YulTypedName",
														"src": "1411:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:10",
														"nodeType": "YulTypedName",
														"src": "1418:3:10",
														"type": ""
													}
												],
												"src": "1358:118:10"
											},
											{
												"body": {
													"nativeSrc": "1580:124:10",
													"nodeType": "YulBlock",
													"src": "1580:124:10",
													"statements": [
														{
															"nativeSrc": "1590:26:10",
															"nodeType": "YulAssignment",
															"src": "1590:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:10"
																},
																"nativeSrc": "1598:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:10"
																		},
																		"nativeSrc": "1679:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:10"
																},
																"nativeSrc": "1626:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:10"
															},
															"nativeSrc": "1626:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:10",
														"nodeType": "YulTypedName",
														"src": "1552:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:10",
														"nodeType": "YulTypedName",
														"src": "1564:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:10",
														"nodeType": "YulTypedName",
														"src": "1575:4:10",
														"type": ""
													}
												],
												"src": "1482:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405260016002555f6003555f60045534801561001c575f5ffd5b506040516125a23803806125a2833981810160405281019061003e9190610261565b61004c61013b60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100bc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b391906102ae565b60405180910390fd5b6100cb8161014260201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506102c7565b5f33905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023082610207565b9050919050565b61024081610226565b811461024a575f5ffd5b50565b5f8151905061025b81610237565b92915050565b5f5f6040838503121561027757610276610203565b5b5f6102848582860161024d565b92505060206102958582860161024d565b9150509250929050565b6102a881610226565b82525050565b5f6020820190506102c15f83018461029f565b92915050565b60805160a05161227b6103275f395f81816105c4015281816106aa0152818161092e01528181610bf601528181610f5e015261103c01525f81816106720152818161088901528181610b5c01528181610f220152611186015261227b5ff3fe608060405234801561000f575f5ffd5b5060043610610135575f3560e01c8063af7568dd116100b6578063ce325bf81161007a578063ce325bf8146102f3578063d2d7231f14610326578063d46149a214610356578063d6ef7af014610374578063d93c04a014610390578063f2fde38b146103c157610135565b8063af7568dd14610261578063b109beec1461027f578063b5fa91fe1461029d578063bc854352146102bb578063beceed39146102d757610135565b80637c2fdeb5116100fd5780637c2fdeb5146101cd5780638da5cb5b146101eb5780638e12c0cd146102095780638f4729b714610227578063ac00500f1461024557610135565b8063109cf39914610139578063379607f5146101575780633fa352f5146101875780636db08f25146101a5578063715018a6146101c3575b5f5ffd5b6101416103dd565b60405161014e9190611721565b60405180910390f35b610171600480360381019061016c919061176c565b6103eb565b60405161017e9190611721565b60405180910390f35b61018f61066b565b60405161019c9190611721565b60405180910390f35b6101ad610670565b6040516101ba9190611811565b60405180910390f35b6101cb610694565b005b6101d56106a7565b6040516101e2919061184a565b60405180910390f35b6101f36106ce565b604051610200919061184a565b60405180910390f35b6102116106f5565b60405161021e9190611889565b60405180910390f35b61022f6106fb565b60405161023c9190611721565b60405180910390f35b61025f600480360381019061025a91906118a2565b610701565b005b610269610926565b6040516102769190611721565b60405180910390f35b61028761092c565b6040516102949190611811565b60405180910390f35b6102a5610950565b6040516102b29190611721565b60405180910390f35b6102d560048036038101906102d09190611941565b610965565b005b6102f160048036038101906102ec919061176c565b610ba5565b005b61030d6004803603810190610308919061176c565b610c75565b60405161031d949392919061198c565b60405180910390f35b610340600480360381019061033b919061176c565b610d73565b60405161034d9190611721565b60405180910390f35b61035e610f1f565b60405161036b919061184a565b60405180910390f35b61038e600480360381019061038991906119f9565b610f46565b005b6103aa60048036038101906103a59190611a61565b6110d2565b6040516103b8929190611a9f565b60405180910390f35b6103db60048036038101906103d69190611ac6565b611393565b005b6969e10de76676d080000081565b5f815f811180156103fd575060025481105b61043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611b4b565b60405180910390fd5b5f60015f8581526020019081526020015f209050610458611417565b73ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611bb3565b60405180910390fd5b805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1661051961141e565b6bffffffffffffffffffffffff161015610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611c41565b60405180910390fd5b5f8160020154116105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590611ca9565b60405180910390fd5b5f816002015490506106086105c1611417565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b8060045f8282546106199190611cf4565b925050819055505f82600201819055507f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19856040516106589190611721565b60405180910390a1809350505050919050565b600b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069c6114a4565b6106a55f61152b565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612a3081565b60045481565b6107096114a4565b815f8111801561071a575060025481105b610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611b4b565b60405180910390fd5b5f821161079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611d97565b60405180910390fd5b5f60015f8581526020019081526020015f209050805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166107e161141e565b6bffffffffffffffffffffffff161115610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790611dff565b60405180910390fd5b8060010154831115610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90611e67565b60405180910390fd5b6108cd610882611417565b82600101547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b82816001015f8282546108e09190611cf4565b925050819055507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c8484604051610918929190611a9f565b60405180910390a150505050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60016002546109609190611cf4565b905090565b61096d6114a4565b5f5f90505f5f90505b83839050811015610b0b5760025484848381811061099757610996611e85565b5b90506020020135106109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d590611b4b565b60405180910390fd5b5f60015f8686858181106109f5576109f4611e85565b5b9050602002013581526020019081526020015f209050805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16610a3d61141e565b6bffffffffffffffffffffffff161115610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8390611dff565b60405180910390fd5b806001015483610a9c9190611eb2565b92505f81600101819055507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610adb57610ada611e85565b5b905060200201358260010154604051610af5929190611a9f565b60405180910390a1508080600101915050610976565b505f8111610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4590611f2f565b60405180910390fd5b610ba0610b59611417565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b505050565b5f8111610be7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bde90611d97565b60405180910390fd5b610c3b610bf2611417565b30837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115ec909392919063ffffffff16565b7fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d81604051610c6a9190611721565b60405180910390a150565b5f5f5f5f845f81118015610c8a575060025481105b610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611b4b565b60405180910390fd5b60015f8781526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8881526020019081526020015f205f0160149054906101000a90046bffffffffffffffffffffffff1660015f8981526020019081526020015f206001015460015f8a81526020019081526020015f2060020154826bffffffffffffffffffffffff1692509450945094509450509193509193565b5f5f670de0b6b3a764000090505f83600354610d8f9190611eb2565b90505f6969e10de76676d0800000600354610daa9190611f7a565b90505f6969e10de76676d080000083610dc39190611f7a565b9050808203610def57600b82610dd99190611eb2565b86610de49190611f7a565b945050505050610f1a565b5f600b83610dfd9190611eb2565b6003546969e10de76676d0800000600186610e189190611eb2565b610e229190611faa565b610e2c9190611cf4565b86610e379190611faa565b610e419190611f7a565b90505f600b83610e519190611eb2565b6969e10de76676d080000084610e679190611faa565b86610e729190611cf4565b87610e7d9190611faa565b610e879190611f7a565b90505f5f90505f600186610e9b9190611eb2565b90505b84811015610eed57600b81610eb39190611eb2565b6969e10de76676d080000089610ec99190611faa565b610ed39190611f7a565b82610ede9190611eb2565b91508080600101915050610e9e565b5086828285610efc9190611eb2565b610f069190611eb2565b610f109190611f7a565b9750505050505050505b919050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b610f4e6114a4565b60045481610f5c9190611eb2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fb5919061184a565b602060405180830381865afa158015610fd0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff49190611fff565b1015611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102c90611e67565b60405180910390fd5b61108082827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337826040516110c69190611721565b60405180910390a25050565b5f5f5f8311611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d9061209a565b60405180910390fd5b612a306bffffffffffffffffffffffff16846bffffffffffffffffffffffff161015611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e90612102565b60405180910390fd5b6111cb611182611417565b30857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115ec909392919063ffffffff16565b5f846111d561141e565b6111df9190612120565b90505f6111eb85610d73565b90505f60025490506040518060800160405280611206611417565b73ffffffffffffffffffffffffffffffffffffffff168152602001846bffffffffffffffffffffffff1681526020018781526020018381525060015f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060408201518160010155606082015181600201559050508560035f8282546112f29190611eb2565b925050819055508160045f82825461130a9190611eb2565b92505081905550611319611417565b73ffffffffffffffffffffffffffffffffffffffff167f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f4714682858986604051611364949392919061215f565b60405180910390a260025f81548092919061137e906121a2565b91905055508082945094505050509250929050565b61139b6114a4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361140b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611402919061184a565b60405180910390fd5b6114148161152b565b50565b5f33905090565b5f42905090565b61149f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016114589291906121e9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061166e565b505050565b6114ac611417565b73ffffffffffffffffffffffffffffffffffffffff166114ca6106ce565b73ffffffffffffffffffffffffffffffffffffffff1614611529576114ed611417565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611520919061184a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611668848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161162193929190612210565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061166e565b50505050565b5f5f60205f8451602086015f885af18061168d576040513d5f823e3d81fd5b3d92505f519150505f82146116a65760018114156116c1565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561170357836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016116fa919061184a565b60405180910390fd5b50505050565b5f819050919050565b61171b81611709565b82525050565b5f6020820190506117345f830184611712565b92915050565b5f5ffd5b5f5ffd5b61174b81611709565b8114611755575f5ffd5b50565b5f8135905061176681611742565b92915050565b5f602082840312156117815761178061173a565b5b5f61178e84828501611758565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6117d96117d46117cf84611797565b6117b6565b611797565b9050919050565b5f6117ea826117bf565b9050919050565b5f6117fb826117e0565b9050919050565b61180b816117f1565b82525050565b5f6020820190506118245f830184611802565b92915050565b5f61183482611797565b9050919050565b6118448161182a565b82525050565b5f60208201905061185d5f83018461183b565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b61188381611863565b82525050565b5f60208201905061189c5f83018461187a565b92915050565b5f5f604083850312156118b8576118b761173a565b5b5f6118c585828601611758565b92505060206118d685828601611758565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611901576119006118e0565b5b8235905067ffffffffffffffff81111561191e5761191d6118e4565b5b60208301915083602082028301111561193a576119396118e8565b5b9250929050565b5f5f602083850312156119575761195661173a565b5b5f83013567ffffffffffffffff8111156119745761197361173e565b5b611980858286016118ec565b92509250509250929050565b5f60808201905061199f5f83018761183b565b6119ac6020830186611712565b6119b96040830185611712565b6119c66060830184611712565b95945050505050565b6119d88161182a565b81146119e2575f5ffd5b50565b5f813590506119f3816119cf565b92915050565b5f5f60408385031215611a0f57611a0e61173a565b5b5f611a1c858286016119e5565b9250506020611a2d85828601611758565b9150509250929050565b611a4081611863565b8114611a4a575f5ffd5b50565b5f81359050611a5b81611a37565b92915050565b5f5f60408385031215611a7757611a7661173a565b5b5f611a8485828601611a4d565b9250506020611a9585828601611758565b9150509250929050565b5f604082019050611ab25f830185611712565b611abf6020830184611712565b9392505050565b5f60208284031215611adb57611ada61173a565b5b5f611ae8848285016119e5565b91505092915050565b5f82825260208201905092915050565b7f4d6f64756c65583a496e76616c6964205374616b6520494421000000000000005f82015250565b5f611b35601983611af1565b9150611b4082611b01565b602082019050919050565b5f6020820190508181035f830152611b6281611b29565b9050919050565b7f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572005f82015250565b5f611b9d601f83611af1565b9150611ba882611b69565b602082019050919050565b5f6020820190508181035f830152611bca81611b91565b9050919050565b7f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74205f8201527f7065726d69747465642100000000000000000000000000000000000000000000602082015250565b5f611c2b602a83611af1565b9150611c3682611bd1565b604082019050919050565b5f6020820190508181035f830152611c5881611c1f565b9050919050565b7f4d6f64756c65583a4e6f7468696e6720746f20636c61696d00000000000000005f82015250565b5f611c93601883611af1565b9150611c9e82611c5f565b602082019050919050565b5f6020820190508181035f830152611cc081611c87565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611cfe82611709565b9150611d0983611709565b9250828203905081811115611d2157611d20611cc7565b5b92915050565b7f4d6f64756c65583a616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f210000000000000000000000000000000000000000000000602082015250565b5f611d81602983611af1565b9150611d8c82611d27565b604082019050919050565b5f6020820190508181035f830152611dae81611d75565b9050919050565b7f4d6f64756c65583a4275726e7420746f6b656e732100000000000000000000005f82015250565b5f611de9601583611af1565b9150611df482611db5565b602082019050919050565b5f6020820190508181035f830152611e1681611ddd565b9050919050565b7f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000005f82015250565b5f611e51601d83611af1565b9150611e5c82611e1d565b602082019050919050565b5f6020820190508181035f830152611e7e81611e45565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611ebc82611709565b9150611ec783611709565b9250828201905080821115611edf57611ede611cc7565b5b92915050565b7f4d6f64756c65583a546f74616c20616d6f756e742069732030210000000000005f82015250565b5f611f19601a83611af1565b9150611f2482611ee5565b602082019050919050565b5f6020820190508181035f830152611f4681611f0d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f8482611709565b9150611f8f83611709565b925082611f9f57611f9e611f4d565b5b828204905092915050565b5f611fb482611709565b9150611fbf83611709565b9250828202611fcd81611709565b91508282048414831517611fe457611fe3611cc7565b5b5092915050565b5f81519050611ff981611742565b92915050565b5f602082840312156120145761201361173a565b5b5f61202184828501611feb565b91505092915050565b7f4d6f64756c65583a5374616b6520616d6f756e74206d757374206265206772655f8201527f61746572207468616e2030210000000000000000000000000000000000000000602082015250565b5f612084602c83611af1565b915061208f8261202a565b604082019050919050565b5f6020820190508181035f8301526120b181612078565b9050919050565b7f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421005f82015250565b5f6120ec601f83611af1565b91506120f7826120b8565b602082019050919050565b5f6020820190508181035f830152612119816120e0565b9050919050565b5f61212a82611863565b915061213583611863565b925082820190506bffffffffffffffffffffffff81111561215957612158611cc7565b5b92915050565b5f6080820190506121725f830187611712565b61217f602083018661187a565b61218c6040830185611712565b6121996060830184611712565b95945050505050565b5f6121ac82611709565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121de576121dd611cc7565b5b600182019050919050565b5f6040820190506121fc5f83018561183b565b6122096020830184611712565b9392505050565b5f6060820190506122235f83018661183b565b612230602083018561183b565b61223d6040830184611712565b94935050505056fea2646970667358221220db767b669f7098c30ca8f7e063cf626ddb2c456dac7743f8d6e611af584578aa64736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH0 PUSH1 0x3 SSTORE PUSH0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x25A2 CODESIZE SUB DUP1 PUSH2 0x25A2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3E SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST PUSH2 0x4C PUSH2 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB DUP2 PUSH2 0x142 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x2C7 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x230 DUP3 PUSH2 0x207 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x240 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP2 EQ PUSH2 0x24A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25B DUP2 PUSH2 0x237 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x277 JUMPI PUSH2 0x276 PUSH2 0x203 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x284 DUP6 DUP3 DUP7 ADD PUSH2 0x24D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x295 DUP6 DUP3 DUP7 ADD PUSH2 0x24D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A8 DUP2 PUSH2 0x226 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x29F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x227B PUSH2 0x327 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5C4 ADD MSTORE DUP2 DUP2 PUSH2 0x6AA ADD MSTORE DUP2 DUP2 PUSH2 0x92E ADD MSTORE DUP2 DUP2 PUSH2 0xBF6 ADD MSTORE DUP2 DUP2 PUSH2 0xF5E ADD MSTORE PUSH2 0x103C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x672 ADD MSTORE DUP2 DUP2 PUSH2 0x889 ADD MSTORE DUP2 DUP2 PUSH2 0xB5C ADD MSTORE DUP2 DUP2 PUSH2 0xF22 ADD MSTORE PUSH2 0x1186 ADD MSTORE PUSH2 0x227B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x2D7 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7C2FDEB5 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x245 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x109CF399 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x3FA352F5 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x694 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xBA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST STOP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3FD JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x458 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x519 PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x608 PUSH2 0x5C1 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 DUP6 PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x69C PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x6A5 PUSH0 PUSH2 0x152B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x709 PUSH2 0x14A4 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x71A JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x750 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CD PUSH2 0x882 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x960 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x96D PUSH2 0x14A4 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3D PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA0 PUSH2 0xB59 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDE SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3B PUSH2 0xBF2 PUSH2 0x1417 JUMP JUMPDEST ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP2 PUSH1 0x40 MLOAD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC8A JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 DUP4 PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xDEF JUMPI PUSH1 0xB DUP3 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP7 PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0xF1A JUMP JUMPDEST PUSH0 PUSH1 0xB DUP4 PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH1 0x1 DUP7 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST DUP7 PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE41 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB DUP4 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP5 PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST DUP7 PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST DUP8 PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEED JUMPI PUSH1 0xB DUP2 PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP10 PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST DUP3 PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE9E JUMP JUMPDEST POP DUP7 DUP3 DUP3 DUP6 PUSH2 0xEFC SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4E PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH2 0xF5C SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST LT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102C SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1080 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110D SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A30 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CB PUSH2 0x1182 PUSH2 0x1417 JUMP JUMPDEST ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x11D5 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11EB DUP6 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1206 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP6 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1319 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 DUP3 DUP6 DUP10 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1364 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x137E SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP3 SWAP5 POP SWAP5 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x139B PUSH2 0x14A4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0x152B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x149F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1458 SWAP3 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14AC PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14CA PUSH2 0x6CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1529 JUMPI PUSH2 0x14ED PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1668 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1621 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x16A6 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x16C1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1703 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1709 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1709 JUMP JUMPDEST DUP2 EQ PUSH2 0x1755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1766 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1781 JUMPI PUSH2 0x1780 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178E DUP5 DUP3 DUP6 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D9 PUSH2 0x17D4 PUSH2 0x17CF DUP5 PUSH2 0x1797 JUMP JUMPDEST PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17EA DUP3 PUSH2 0x17BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB DUP3 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1824 PUSH0 DUP4 ADD DUP5 PUSH2 0x1802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1834 DUP3 PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1844 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185D PUSH0 DUP4 ADD DUP5 PUSH2 0x183B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x18E0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191E JUMPI PUSH2 0x191D PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH2 0x1980 DUP6 DUP3 DUP7 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP8 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x19AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x19C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F3 DUP2 PUSH2 0x19CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A2D DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5B DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A84 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A95 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AB2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1ABF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE8 DUP5 DUP3 DUP6 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B35 PUSH1 0x19 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B40 DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B62 DUP2 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9D PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA8 DUP3 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 PUSH2 0x1B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2B PUSH1 0x2A DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C58 DUP2 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 PUSH1 0x18 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP3 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CFE DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D09 DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F210000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D81 PUSH1 0x29 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8C DUP3 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAE DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE9 PUSH1 0x15 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF4 DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E16 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E51 PUSH1 0x1D DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7E DUP2 PUSH2 0x1E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EBC DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC7 DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F19 PUSH1 0x1A DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F24 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F46 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F84 DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8F DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB4 DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FCD DUP2 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2014 JUMPI PUSH2 0x2013 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2021 DUP5 DUP3 DUP6 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 PUSH1 0x2C DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP3 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B1 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EC PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A DUP3 PUSH2 0x1863 JUMP JUMPDEST SWAP2 POP PUSH2 0x2135 DUP4 PUSH2 0x1863 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH0 DUP4 ADD DUP8 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AC DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21FC PUSH0 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x2209 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2223 PUSH0 DUP4 ADD DUP7 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x2230 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x223D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB PUSH23 0x7B669F7098C30CA8F7E063CF626DDB2C456DAC7743F8D6 DUPN 0x11 0xAF PC GASLIMIT PUSH25 0xAA64736F6C634300081D003300000000000000000000000000 ",
							"sourceMap": "278:6624:8:-:0;;;975:1;947:29;;1010:1;983:28;;1049:1;1018:32;;1526:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1589:12;:10;;;:12;;:::i;:::-;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1635:11:8::1;1620:27;;;;;;;;::::0;::::1;1674:12;1658:29;;;;;;;;::::0;::::1;1526:169:::0;;278:6624;;656:96:6;709:7;735:10;728:17;;656:96;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;278:6624:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_860": {
									"entryPoint": 1648,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_850": {
									"entryPoint": 1643,
									"id": 850,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DIFFICULTY_INTERVAL_857": {
									"entryPoint": 989,
									"id": 857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MATURITY_847": {
									"entryPoint": 1781,
									"id": 847,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_737": {
									"entryPoint": 5742,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5284,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": 5143,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5419,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewards_1489": {
									"entryPoint": 2981,
									"id": 1489,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@batchWithdrawCREDI_1460": {
									"entryPoint": 2405,
									"id": 1460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateReward_1145": {
									"entryPoint": 3443,
									"id": 1145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1309": {
									"entryPoint": 1003,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCREDIAddress_961": {
									"entryPoint": 3871,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStake_1017": {
									"entryPoint": 3189,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getStakesCount_982": {
									"entryPoint": 2384,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getxCREDIAddress_972": {
									"entryPoint": 1703,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1742,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pending_payments_877": {
									"entryPoint": 1787,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1684,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 5612,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_360": {
									"entryPoint": 5157,
									"id": 360,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1236": {
									"entryPoint": 4306,
									"id": 1236,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@time_now_1029": {
									"entryPoint": 5150,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@total_staked_874": {
									"entryPoint": 2342,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5011,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawCREDI_1373": {
									"entryPoint": 1793,
									"id": 1373,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawRewards_1526": {
									"entryPoint": 3910,
									"id": 1526,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@xCREDI_863": {
									"entryPoint": 2348,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint96": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8720,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09": {
									"entryPoint": 8234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint96": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22067:10",
										"nodeType": "YulBlock",
										"src": "0:22067:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:10",
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nativeSrc": "62:16:10",
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:10",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:10",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:10",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nativeSrc": "155:53:10",
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nativeSrc": "177:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nativeSrc": "165:37:10",
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nativeSrc": "165:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:10",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:10",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nativeSrc": "312:124:10",
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nativeSrc": "322:26:10",
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nativeSrc": "330:18:10",
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nativeSrc": "411:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nativeSrc": "358:71:10",
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nativeSrc": "358:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:10",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:10",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:10",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nativeSrc": "482:35:10",
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nativeSrc": "492:19:10",
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:10",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nativeSrc": "502:9:10",
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:10",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nativeSrc": "612:28:10",
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:10",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nativeSrc": "622:12:10",
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nativeSrc": "622:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nativeSrc": "735:28:10",
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:10",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:10",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nativeSrc": "745:12:10",
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nativeSrc": "745:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nativeSrc": "812:79:10",
													"nodeType": "YulBlock",
													"src": "812:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:16:10",
																"nodeType": "YulBlock",
																"src": "869:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "878:1:10",
																					"nodeType": "YulLiteral",
																					"src": "878:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "881:1:10",
																					"nodeType": "YulLiteral",
																					"src": "881:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "871:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:10"
																			},
																			"nativeSrc": "871:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:10"
																		},
																		"nativeSrc": "871:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "835:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "860:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "842:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:10"
																				},
																				"nativeSrc": "842:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "832:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:10"
																		},
																		"nativeSrc": "832:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "825:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:10"
																},
																"nativeSrc": "825:43:10",
																"nodeType": "YulFunctionCall",
																"src": "825:43:10"
															},
															"nativeSrc": "822:63:10",
															"nodeType": "YulIf",
															"src": "822:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "769:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "805:5:10",
														"nodeType": "YulTypedName",
														"src": "805:5:10",
														"type": ""
													}
												],
												"src": "769:122:10"
											},
											{
												"body": {
													"nativeSrc": "949:87:10",
													"nodeType": "YulBlock",
													"src": "949:87:10",
													"statements": [
														{
															"nativeSrc": "959:29:10",
															"nodeType": "YulAssignment",
															"src": "959:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "981:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "968:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:10"
																},
																"nativeSrc": "968:20:10",
																"nodeType": "YulFunctionCall",
																"src": "968:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "959:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1024:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "997:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:10"
																},
																"nativeSrc": "997:33:10",
																"nodeType": "YulFunctionCall",
																"src": "997:33:10"
															},
															"nativeSrc": "997:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "997:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "897:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "927:6:10",
														"nodeType": "YulTypedName",
														"src": "927:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "935:3:10",
														"nodeType": "YulTypedName",
														"src": "935:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "943:5:10",
														"nodeType": "YulTypedName",
														"src": "943:5:10",
														"type": ""
													}
												],
												"src": "897:139:10"
											},
											{
												"body": {
													"nativeSrc": "1108:263:10",
													"nodeType": "YulBlock",
													"src": "1108:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:10",
																"nodeType": "YulBlock",
																"src": "1154:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:10"
																			},
																			"nativeSrc": "1156:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:10"
																		},
																		"nativeSrc": "1156:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:10"
																		},
																		"nativeSrc": "1125:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:10"
																},
																"nativeSrc": "1121:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:10"
															},
															"nativeSrc": "1118:119:10",
															"nodeType": "YulIf",
															"src": "1118:119:10"
														},
														{
															"nativeSrc": "1247:117:10",
															"nodeType": "YulBlock",
															"src": "1247:117:10",
															"statements": [
																{
																	"nativeSrc": "1262:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:10"
																				},
																				"nativeSrc": "1322:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:10"
																		},
																		"nativeSrc": "1301:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1042:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:10",
														"nodeType": "YulTypedName",
														"src": "1078:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:10",
														"nodeType": "YulTypedName",
														"src": "1089:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:10",
														"nodeType": "YulTypedName",
														"src": "1101:6:10",
														"type": ""
													}
												],
												"src": "1042:329:10"
											},
											{
												"body": {
													"nativeSrc": "1422:81:10",
													"nodeType": "YulBlock",
													"src": "1422:81:10",
													"statements": [
														{
															"nativeSrc": "1432:65:10",
															"nodeType": "YulAssignment",
															"src": "1432:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:10"
																},
																"nativeSrc": "1443:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:10",
														"nodeType": "YulTypedName",
														"src": "1404:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:10",
														"nodeType": "YulTypedName",
														"src": "1414:7:10",
														"type": ""
													}
												],
												"src": "1377:126:10"
											},
											{
												"body": {
													"nativeSrc": "1541:28:10",
													"nodeType": "YulBlock",
													"src": "1541:28:10",
													"statements": [
														{
															"nativeSrc": "1551:12:10",
															"nodeType": "YulAssignment",
															"src": "1551:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:10",
																"nodeType": "YulIdentifier",
																"src": "1558:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:10",
														"nodeType": "YulTypedName",
														"src": "1527:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:10",
														"nodeType": "YulTypedName",
														"src": "1537:3:10",
														"type": ""
													}
												],
												"src": "1509:60:10"
											},
											{
												"body": {
													"nativeSrc": "1635:82:10",
													"nodeType": "YulBlock",
													"src": "1635:82:10",
													"statements": [
														{
															"nativeSrc": "1645:66:10",
															"nodeType": "YulAssignment",
															"src": "1645:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:10"
																				},
																				"nativeSrc": "1685:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:10"
																		},
																		"nativeSrc": "1676:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:10"
																},
																"nativeSrc": "1658:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:10",
														"nodeType": "YulTypedName",
														"src": "1615:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:10",
														"nodeType": "YulTypedName",
														"src": "1625:9:10",
														"type": ""
													}
												],
												"src": "1575:142:10"
											},
											{
												"body": {
													"nativeSrc": "1783:66:10",
													"nodeType": "YulBlock",
													"src": "1783:66:10",
													"statements": [
														{
															"nativeSrc": "1793:50:10",
															"nodeType": "YulAssignment",
															"src": "1793:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:10"
																},
																"nativeSrc": "1806:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:10",
														"nodeType": "YulTypedName",
														"src": "1763:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:10",
														"nodeType": "YulTypedName",
														"src": "1773:9:10",
														"type": ""
													}
												],
												"src": "1723:126:10"
											},
											{
												"body": {
													"nativeSrc": "1929:66:10",
													"nodeType": "YulBlock",
													"src": "1929:66:10",
													"statements": [
														{
															"nativeSrc": "1939:50:10",
															"nodeType": "YulAssignment",
															"src": "1939:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1983:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1952:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:10"
																},
																"nativeSrc": "1952:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1952:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1939:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "1855:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1909:5:10",
														"nodeType": "YulTypedName",
														"src": "1909:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1919:9:10",
														"nodeType": "YulTypedName",
														"src": "1919:9:10",
														"type": ""
													}
												],
												"src": "1855:140:10"
											},
											{
												"body": {
													"nativeSrc": "2080:80:10",
													"nodeType": "YulBlock",
													"src": "2080:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2147:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "2102:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:10"
																		},
																		"nativeSrc": "2102:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:10"
																},
																"nativeSrc": "2090:64:10",
																"nodeType": "YulFunctionCall",
																"src": "2090:64:10"
															},
															"nativeSrc": "2090:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "2001:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2068:5:10",
														"nodeType": "YulTypedName",
														"src": "2068:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2075:3:10",
														"nodeType": "YulTypedName",
														"src": "2075:3:10",
														"type": ""
													}
												],
												"src": "2001:159:10"
											},
											{
												"body": {
													"nativeSrc": "2278:138:10",
													"nodeType": "YulBlock",
													"src": "2278:138:10",
													"statements": [
														{
															"nativeSrc": "2288:26:10",
															"nodeType": "YulAssignment",
															"src": "2288:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2300:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2300:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2311:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2311:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2296:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:10"
																},
																"nativeSrc": "2296:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2296:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2288:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2288:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2382:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:10"
																		},
																		"nativeSrc": "2391:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "2324:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "2324:57:10"
																},
																"nativeSrc": "2324:85:10",
																"nodeType": "YulFunctionCall",
																"src": "2324:85:10"
															},
															"nativeSrc": "2324:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "2324:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "2166:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2250:9:10",
														"nodeType": "YulTypedName",
														"src": "2250:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2262:6:10",
														"nodeType": "YulTypedName",
														"src": "2262:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2273:4:10",
														"nodeType": "YulTypedName",
														"src": "2273:4:10",
														"type": ""
													}
												],
												"src": "2166:250:10"
											},
											{
												"body": {
													"nativeSrc": "2467:51:10",
													"nodeType": "YulBlock",
													"src": "2467:51:10",
													"statements": [
														{
															"nativeSrc": "2477:35:10",
															"nodeType": "YulAssignment",
															"src": "2477:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2488:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:10"
																},
																"nativeSrc": "2488:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2488:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2477:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2422:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:10",
														"nodeType": "YulTypedName",
														"src": "2449:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2459:7:10",
														"nodeType": "YulTypedName",
														"src": "2459:7:10",
														"type": ""
													}
												],
												"src": "2422:96:10"
											},
											{
												"body": {
													"nativeSrc": "2589:53:10",
													"nodeType": "YulBlock",
													"src": "2589:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:10"
																		},
																		"nativeSrc": "2611:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:10"
																},
																"nativeSrc": "2599:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:10"
															},
															"nativeSrc": "2599:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:10",
														"nodeType": "YulTypedName",
														"src": "2577:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:10",
														"nodeType": "YulTypedName",
														"src": "2584:3:10",
														"type": ""
													}
												],
												"src": "2524:118:10"
											},
											{
												"body": {
													"nativeSrc": "2746:124:10",
													"nodeType": "YulBlock",
													"src": "2746:124:10",
													"statements": [
														{
															"nativeSrc": "2756:26:10",
															"nodeType": "YulAssignment",
															"src": "2756:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:10"
																},
																"nativeSrc": "2764:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:10"
																		},
																		"nativeSrc": "2845:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:10"
																},
																"nativeSrc": "2792:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:10"
															},
															"nativeSrc": "2792:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:10",
														"nodeType": "YulTypedName",
														"src": "2718:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:10",
														"nodeType": "YulTypedName",
														"src": "2730:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:10",
														"nodeType": "YulTypedName",
														"src": "2741:4:10",
														"type": ""
													}
												],
												"src": "2648:222:10"
											},
											{
												"body": {
													"nativeSrc": "2920:65:10",
													"nodeType": "YulBlock",
													"src": "2920:65:10",
													"statements": [
														{
															"nativeSrc": "2930:49:10",
															"nodeType": "YulAssignment",
															"src": "2930:49:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2945:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2945:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2952:26:10",
																		"nodeType": "YulLiteral",
																		"src": "2952:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2941:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2941:3:10"
																},
																"nativeSrc": "2941:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2941:38:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2930:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2930:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "2876:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2902:5:10",
														"nodeType": "YulTypedName",
														"src": "2902:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2912:7:10",
														"nodeType": "YulTypedName",
														"src": "2912:7:10",
														"type": ""
													}
												],
												"src": "2876:109:10"
											},
											{
												"body": {
													"nativeSrc": "3054:52:10",
													"nodeType": "YulBlock",
													"src": "3054:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3071:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3071:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3093:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3093:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nativeSrc": "3076:16:10",
																			"nodeType": "YulIdentifier",
																			"src": "3076:16:10"
																		},
																		"nativeSrc": "3076:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3064:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:10"
																},
																"nativeSrc": "3064:36:10",
																"nodeType": "YulFunctionCall",
																"src": "3064:36:10"
															},
															"nativeSrc": "3064:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "3064:36:10"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
												"nativeSrc": "2991:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3042:5:10",
														"nodeType": "YulTypedName",
														"src": "3042:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3049:3:10",
														"nodeType": "YulTypedName",
														"src": "3049:3:10",
														"type": ""
													}
												],
												"src": "2991:115:10"
											},
											{
												"body": {
													"nativeSrc": "3208:122:10",
													"nodeType": "YulBlock",
													"src": "3208:122:10",
													"statements": [
														{
															"nativeSrc": "3218:26:10",
															"nodeType": "YulAssignment",
															"src": "3218:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3230:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3241:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3226:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:10"
																},
																"nativeSrc": "3226:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3226:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3218:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3218:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3296:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3309:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3320:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3320:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3305:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:10"
																		},
																		"nativeSrc": "3305:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3305:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "3254:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "3254:41:10"
																},
																"nativeSrc": "3254:69:10",
																"nodeType": "YulFunctionCall",
																"src": "3254:69:10"
															},
															"nativeSrc": "3254:69:10",
															"nodeType": "YulExpressionStatement",
															"src": "3254:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nativeSrc": "3112:218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:10",
														"nodeType": "YulTypedName",
														"src": "3180:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3192:6:10",
														"nodeType": "YulTypedName",
														"src": "3192:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3203:4:10",
														"nodeType": "YulTypedName",
														"src": "3203:4:10",
														"type": ""
													}
												],
												"src": "3112:218:10"
											},
											{
												"body": {
													"nativeSrc": "3419:391:10",
													"nodeType": "YulBlock",
													"src": "3419:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3465:83:10",
																"nodeType": "YulBlock",
																"src": "3465:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3467:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3467:77:10"
																			},
																			"nativeSrc": "3467:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3467:79:10"
																		},
																		"nativeSrc": "3467:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3467:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3449:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3449:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3436:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:3:10"
																		},
																		"nativeSrc": "3436:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3461:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:32:10"
															},
															"nativeSrc": "3429:119:10",
															"nodeType": "YulIf",
															"src": "3429:119:10"
														},
														{
															"nativeSrc": "3558:117:10",
															"nodeType": "YulBlock",
															"src": "3558:117:10",
															"statements": [
																{
																	"nativeSrc": "3573:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3573:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3587:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3587:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3577:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3577:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3602:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3602:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3637:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3637:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3648:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3648:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3633:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3633:3:10"
																				},
																				"nativeSrc": "3633:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3633:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3657:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3657:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3612:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3612:20:10"
																		},
																		"nativeSrc": "3612:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3612:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3602:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3602:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3685:118:10",
															"nodeType": "YulBlock",
															"src": "3685:118:10",
															"statements": [
																{
																	"nativeSrc": "3700:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3700:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3714:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3714:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3704:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3704:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3730:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3730:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3765:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3765:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3776:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3761:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3761:3:10"
																				},
																				"nativeSrc": "3761:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3761:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3785:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3785:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3740:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3740:20:10"
																		},
																		"nativeSrc": "3740:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3730:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3730:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3336:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3381:9:10",
														"nodeType": "YulTypedName",
														"src": "3381:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3392:7:10",
														"nodeType": "YulTypedName",
														"src": "3392:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3404:6:10",
														"nodeType": "YulTypedName",
														"src": "3404:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3412:6:10",
														"nodeType": "YulTypedName",
														"src": "3412:6:10",
														"type": ""
													}
												],
												"src": "3336:474:10"
											},
											{
												"body": {
													"nativeSrc": "3905:28:10",
													"nodeType": "YulBlock",
													"src": "3905:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3922:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3922:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3925:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:10"
																},
																"nativeSrc": "3915:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3915:12:10"
															},
															"nativeSrc": "3915:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "3915:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3816:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3816:117:10"
											},
											{
												"body": {
													"nativeSrc": "4028:28:10",
													"nodeType": "YulBlock",
													"src": "4028:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4045:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4045:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4048:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4048:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4038:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:10"
																},
																"nativeSrc": "4038:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4038:12:10"
															},
															"nativeSrc": "4038:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "4038:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "3939:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3939:117:10"
											},
											{
												"body": {
													"nativeSrc": "4151:28:10",
													"nodeType": "YulBlock",
													"src": "4151:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4168:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4168:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4171:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4171:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4161:6:10"
																},
																"nativeSrc": "4161:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4161:12:10"
															},
															"nativeSrc": "4161:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "4161:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4062:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4062:117:10"
											},
											{
												"body": {
													"nativeSrc": "4292:478:10",
													"nodeType": "YulBlock",
													"src": "4292:478:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4341:83:10",
																"nodeType": "YulBlock",
																"src": "4341:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4343:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4343:77:10"
																			},
																			"nativeSrc": "4343:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4343:79:10"
																		},
																		"nativeSrc": "4343:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4320:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4320:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4328:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4328:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4316:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:10"
																				},
																				"nativeSrc": "4316:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4316:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4335:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4335:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4312:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:10"
																		},
																		"nativeSrc": "4312:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4312:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4305:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:10"
																},
																"nativeSrc": "4305:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4305:35:10"
															},
															"nativeSrc": "4302:122:10",
															"nodeType": "YulIf",
															"src": "4302:122:10"
														},
														{
															"nativeSrc": "4433:30:10",
															"nodeType": "YulAssignment",
															"src": "4433:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4456:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4456:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4443:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4443:12:10"
																},
																"nativeSrc": "4443:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4443:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4506:83:10",
																"nodeType": "YulBlock",
																"src": "4506:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "4508:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4508:77:10"
																			},
																			"nativeSrc": "4508:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4508:79:10"
																		},
																		"nativeSrc": "4508:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4508:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4478:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4486:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4486:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4475:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4475:2:10"
																},
																"nativeSrc": "4475:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4475:30:10"
															},
															"nativeSrc": "4472:117:10",
															"nodeType": "YulIf",
															"src": "4472:117:10"
														},
														{
															"nativeSrc": "4598:29:10",
															"nodeType": "YulAssignment",
															"src": "4598:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4614:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4622:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4622:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4610:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4610:3:10"
																},
																"nativeSrc": "4610:17:10",
																"nodeType": "YulFunctionCall",
																"src": "4610:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "4598:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4598:8:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4681:83:10",
																"nodeType": "YulBlock",
																"src": "4681:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4683:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:10"
																			},
																			"nativeSrc": "4683:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:10"
																		},
																		"nativeSrc": "4683:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "4646:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "4646:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "4660:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4660:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4668:4:10",
																						"nodeType": "YulLiteral",
																						"src": "4668:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4656:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4656:3:10"
																				},
																				"nativeSrc": "4656:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4656:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:10"
																		},
																		"nativeSrc": "4642:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4642:32:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4676:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4676:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4639:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4639:2:10"
																},
																"nativeSrc": "4639:41:10",
																"nodeType": "YulFunctionCall",
																"src": "4639:41:10"
															},
															"nativeSrc": "4636:128:10",
															"nodeType": "YulIf",
															"src": "4636:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "4202:568:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4259:6:10",
														"nodeType": "YulTypedName",
														"src": "4259:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4267:3:10",
														"nodeType": "YulTypedName",
														"src": "4267:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4275:8:10",
														"nodeType": "YulTypedName",
														"src": "4275:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4285:6:10",
														"nodeType": "YulTypedName",
														"src": "4285:6:10",
														"type": ""
													}
												],
												"src": "4202:568:10"
											},
											{
												"body": {
													"nativeSrc": "4877:458:10",
													"nodeType": "YulBlock",
													"src": "4877:458:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4923:83:10",
																"nodeType": "YulBlock",
																"src": "4923:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4925:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4925:77:10"
																			},
																			"nativeSrc": "4925:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4925:79:10"
																		},
																		"nativeSrc": "4925:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4925:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4898:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4898:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4907:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4894:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:10"
																		},
																		"nativeSrc": "4894:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4919:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4890:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:10"
																},
																"nativeSrc": "4890:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4890:32:10"
															},
															"nativeSrc": "4887:119:10",
															"nodeType": "YulIf",
															"src": "4887:119:10"
														},
														{
															"nativeSrc": "5016:312:10",
															"nodeType": "YulBlock",
															"src": "5016:312:10",
															"statements": [
																{
																	"nativeSrc": "5031:45:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5031:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5062:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5062:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5073:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5073:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5058:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5058:3:10"
																				},
																				"nativeSrc": "5058:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5058:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5045:12:10",
																			"nodeType": "YulIdentifier",
																			"src": "5045:12:10"
																		},
																		"nativeSrc": "5045:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5045:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5035:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5035:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5123:83:10",
																		"nodeType": "YulBlock",
																		"src": "5123:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5125:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "5125:77:10"
																					},
																					"nativeSrc": "5125:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5125:79:10"
																				},
																				"nativeSrc": "5125:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5125:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5095:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5095:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5103:18:10",
																				"nodeType": "YulLiteral",
																				"src": "5103:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5092:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5092:2:10"
																		},
																		"nativeSrc": "5092:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:30:10"
																	},
																	"nativeSrc": "5089:117:10",
																	"nodeType": "YulIf",
																	"src": "5089:117:10"
																},
																{
																	"nativeSrc": "5220:98:10",
																	"nodeType": "YulAssignment",
																	"src": "5220:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5290:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5290:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5301:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5301:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5286:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5286:3:10"
																				},
																				"nativeSrc": "5286:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5286:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5310:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5310:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "5238:47:10",
																			"nodeType": "YulIdentifier",
																			"src": "5238:47:10"
																		},
																		"nativeSrc": "5238:80:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5238:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5220:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5220:6:10"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "5228:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5228:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "4776:559:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4839:9:10",
														"nodeType": "YulTypedName",
														"src": "4839:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4850:7:10",
														"nodeType": "YulTypedName",
														"src": "4850:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4862:6:10",
														"nodeType": "YulTypedName",
														"src": "4862:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4870:6:10",
														"nodeType": "YulTypedName",
														"src": "4870:6:10",
														"type": ""
													}
												],
												"src": "4776:559:10"
											},
											{
												"body": {
													"nativeSrc": "5523:371:10",
													"nodeType": "YulBlock",
													"src": "5523:371:10",
													"statements": [
														{
															"nativeSrc": "5533:27:10",
															"nodeType": "YulAssignment",
															"src": "5533:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5545:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5545:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5556:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5556:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5541:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5541:3:10"
																},
																"nativeSrc": "5541:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5541:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5533:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5533:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5627:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5638:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5638:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5623:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:10"
																		},
																		"nativeSrc": "5623:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5570:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5570:43:10"
																},
																"nativeSrc": "5570:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5570:71:10"
															},
															"nativeSrc": "5570:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5570:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5695:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5695:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5708:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5708:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5719:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5704:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5704:3:10"
																		},
																		"nativeSrc": "5704:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5704:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5651:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5651:43:10"
																},
																"nativeSrc": "5651:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5651:72:10"
															},
															"nativeSrc": "5651:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5651:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5777:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5777:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5790:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5790:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5801:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5801:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5786:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5786:3:10"
																		},
																		"nativeSrc": "5786:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5733:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5733:43:10"
																},
																"nativeSrc": "5733:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5733:72:10"
															},
															"nativeSrc": "5733:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5733:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5859:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5859:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5872:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5883:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5883:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:10"
																		},
																		"nativeSrc": "5868:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5815:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5815:43:10"
																},
																"nativeSrc": "5815:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5815:72:10"
															},
															"nativeSrc": "5815:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5815:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5341:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5471:9:10",
														"nodeType": "YulTypedName",
														"src": "5471:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5483:6:10",
														"nodeType": "YulTypedName",
														"src": "5483:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5491:6:10",
														"nodeType": "YulTypedName",
														"src": "5491:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5499:6:10",
														"nodeType": "YulTypedName",
														"src": "5499:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5507:6:10",
														"nodeType": "YulTypedName",
														"src": "5507:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5518:4:10",
														"nodeType": "YulTypedName",
														"src": "5518:4:10",
														"type": ""
													}
												],
												"src": "5341:553:10"
											},
											{
												"body": {
													"nativeSrc": "5943:79:10",
													"nodeType": "YulBlock",
													"src": "5943:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6000:16:10",
																"nodeType": "YulBlock",
																"src": "6000:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6009:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6009:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6012:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6012:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6002:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6002:6:10"
																			},
																			"nativeSrc": "6002:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6002:12:10"
																		},
																		"nativeSrc": "6002:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6002:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5966:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5966:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5991:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5991:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5973:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5973:17:10"
																				},
																				"nativeSrc": "5973:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5973:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5963:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5963:2:10"
																		},
																		"nativeSrc": "5963:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5963:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5956:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:10"
																},
																"nativeSrc": "5956:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5956:43:10"
															},
															"nativeSrc": "5953:63:10",
															"nodeType": "YulIf",
															"src": "5953:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5900:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5936:5:10",
														"nodeType": "YulTypedName",
														"src": "5936:5:10",
														"type": ""
													}
												],
												"src": "5900:122:10"
											},
											{
												"body": {
													"nativeSrc": "6080:87:10",
													"nodeType": "YulBlock",
													"src": "6080:87:10",
													"statements": [
														{
															"nativeSrc": "6090:29:10",
															"nodeType": "YulAssignment",
															"src": "6090:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6112:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6112:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6099:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6099:12:10"
																},
																"nativeSrc": "6099:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6090:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6090:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6155:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6155:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6128:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "6128:26:10"
																},
																"nativeSrc": "6128:33:10",
																"nodeType": "YulFunctionCall",
																"src": "6128:33:10"
															},
															"nativeSrc": "6128:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "6128:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6028:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6058:6:10",
														"nodeType": "YulTypedName",
														"src": "6058:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6066:3:10",
														"nodeType": "YulTypedName",
														"src": "6066:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6074:5:10",
														"nodeType": "YulTypedName",
														"src": "6074:5:10",
														"type": ""
													}
												],
												"src": "6028:139:10"
											},
											{
												"body": {
													"nativeSrc": "6256:391:10",
													"nodeType": "YulBlock",
													"src": "6256:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6302:83:10",
																"nodeType": "YulBlock",
																"src": "6302:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6304:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6304:77:10"
																			},
																			"nativeSrc": "6304:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6304:79:10"
																		},
																		"nativeSrc": "6304:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6304:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6277:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6277:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6286:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6286:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:10"
																		},
																		"nativeSrc": "6273:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6273:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6298:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6298:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6269:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6269:3:10"
																},
																"nativeSrc": "6269:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6269:32:10"
															},
															"nativeSrc": "6266:119:10",
															"nodeType": "YulIf",
															"src": "6266:119:10"
														},
														{
															"nativeSrc": "6395:117:10",
															"nodeType": "YulBlock",
															"src": "6395:117:10",
															"statements": [
																{
																	"nativeSrc": "6410:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6410:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6424:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6424:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6414:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6414:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6439:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6439:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6474:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6474:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6485:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6485:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6470:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6470:3:10"
																				},
																				"nativeSrc": "6470:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6470:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6494:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6494:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6449:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6449:20:10"
																		},
																		"nativeSrc": "6449:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6449:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6439:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6439:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6522:118:10",
															"nodeType": "YulBlock",
															"src": "6522:118:10",
															"statements": [
																{
																	"nativeSrc": "6537:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6537:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6551:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6551:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6541:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6541:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6567:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6567:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6602:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6602:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6613:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6613:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6598:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6598:3:10"
																				},
																				"nativeSrc": "6598:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6598:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6622:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6622:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6577:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6577:20:10"
																		},
																		"nativeSrc": "6577:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6577:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6567:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6567:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "6173:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6218:9:10",
														"nodeType": "YulTypedName",
														"src": "6218:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6229:7:10",
														"nodeType": "YulTypedName",
														"src": "6229:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6241:6:10",
														"nodeType": "YulTypedName",
														"src": "6241:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6249:6:10",
														"nodeType": "YulTypedName",
														"src": "6249:6:10",
														"type": ""
													}
												],
												"src": "6173:474:10"
											},
											{
												"body": {
													"nativeSrc": "6695:78:10",
													"nodeType": "YulBlock",
													"src": "6695:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6751:16:10",
																"nodeType": "YulBlock",
																"src": "6751:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6760:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6760:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6763:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6763:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6753:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6753:6:10"
																			},
																			"nativeSrc": "6753:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6753:12:10"
																		},
																		"nativeSrc": "6753:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6753:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6718:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6718:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6742:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6742:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint96",
																					"nativeSrc": "6725:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "6725:16:10"
																				},
																				"nativeSrc": "6725:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6725:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6715:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6715:2:10"
																		},
																		"nativeSrc": "6715:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6715:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:10"
																},
																"nativeSrc": "6708:42:10",
																"nodeType": "YulFunctionCall",
																"src": "6708:42:10"
															},
															"nativeSrc": "6705:62:10",
															"nodeType": "YulIf",
															"src": "6705:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint96",
												"nativeSrc": "6653:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6688:5:10",
														"nodeType": "YulTypedName",
														"src": "6688:5:10",
														"type": ""
													}
												],
												"src": "6653:120:10"
											},
											{
												"body": {
													"nativeSrc": "6830:86:10",
													"nodeType": "YulBlock",
													"src": "6830:86:10",
													"statements": [
														{
															"nativeSrc": "6840:29:10",
															"nodeType": "YulAssignment",
															"src": "6840:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6862:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6849:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6849:12:10"
																},
																"nativeSrc": "6849:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6849:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6840:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6840:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6904:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6904:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint96",
																	"nativeSrc": "6878:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "6878:25:10"
																},
																"nativeSrc": "6878:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6878:32:10"
															},
															"nativeSrc": "6878:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "6878:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint96",
												"nativeSrc": "6779:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6808:6:10",
														"nodeType": "YulTypedName",
														"src": "6808:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6816:3:10",
														"nodeType": "YulTypedName",
														"src": "6816:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6824:5:10",
														"nodeType": "YulTypedName",
														"src": "6824:5:10",
														"type": ""
													}
												],
												"src": "6779:137:10"
											},
											{
												"body": {
													"nativeSrc": "7004:390:10",
													"nodeType": "YulBlock",
													"src": "7004:390:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7050:83:10",
																"nodeType": "YulBlock",
																"src": "7050:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7052:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7052:77:10"
																			},
																			"nativeSrc": "7052:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7052:79:10"
																		},
																		"nativeSrc": "7052:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7052:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7025:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7025:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7034:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7034:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:10"
																		},
																		"nativeSrc": "7021:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7046:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7017:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7017:3:10"
																},
																"nativeSrc": "7017:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7017:32:10"
															},
															"nativeSrc": "7014:119:10",
															"nodeType": "YulIf",
															"src": "7014:119:10"
														},
														{
															"nativeSrc": "7143:116:10",
															"nodeType": "YulBlock",
															"src": "7143:116:10",
															"statements": [
																{
																	"nativeSrc": "7158:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7158:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7172:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7172:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7162:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7162:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7187:62:10",
																	"nodeType": "YulAssignment",
																	"src": "7187:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7221:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7221:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7232:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7232:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7217:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7217:3:10"
																				},
																				"nativeSrc": "7217:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7217:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7241:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7241:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nativeSrc": "7197:19:10",
																			"nodeType": "YulIdentifier",
																			"src": "7197:19:10"
																		},
																		"nativeSrc": "7197:52:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7197:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7187:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7187:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7269:118:10",
															"nodeType": "YulBlock",
															"src": "7269:118:10",
															"statements": [
																{
																	"nativeSrc": "7284:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7284:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7298:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7288:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7288:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7314:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7314:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7349:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7349:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7360:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7360:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7345:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7345:3:10"
																				},
																				"nativeSrc": "7345:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7345:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7369:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7369:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7324:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7324:20:10"
																		},
																		"nativeSrc": "7324:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7324:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7314:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7314:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nativeSrc": "6922:472:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6966:9:10",
														"nodeType": "YulTypedName",
														"src": "6966:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6977:7:10",
														"nodeType": "YulTypedName",
														"src": "6977:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6989:6:10",
														"nodeType": "YulTypedName",
														"src": "6989:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6997:6:10",
														"nodeType": "YulTypedName",
														"src": "6997:6:10",
														"type": ""
													}
												],
												"src": "6922:472:10"
											},
											{
												"body": {
													"nativeSrc": "7526:206:10",
													"nodeType": "YulBlock",
													"src": "7526:206:10",
													"statements": [
														{
															"nativeSrc": "7536:26:10",
															"nodeType": "YulAssignment",
															"src": "7536:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7548:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7548:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7559:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7559:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7544:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:10"
																},
																"nativeSrc": "7544:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7544:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7536:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7616:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7616:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7629:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7629:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7640:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7640:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7625:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7625:3:10"
																		},
																		"nativeSrc": "7625:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7625:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7572:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7572:43:10"
																},
																"nativeSrc": "7572:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7572:71:10"
															},
															"nativeSrc": "7572:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7572:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7697:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7697:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7710:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7710:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7721:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7721:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7706:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7706:3:10"
																		},
																		"nativeSrc": "7706:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7706:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7653:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7653:43:10"
																},
																"nativeSrc": "7653:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7653:72:10"
															},
															"nativeSrc": "7653:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7653:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7400:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7490:9:10",
														"nodeType": "YulTypedName",
														"src": "7490:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7502:6:10",
														"nodeType": "YulTypedName",
														"src": "7502:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7510:6:10",
														"nodeType": "YulTypedName",
														"src": "7510:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7521:4:10",
														"nodeType": "YulTypedName",
														"src": "7521:4:10",
														"type": ""
													}
												],
												"src": "7400:332:10"
											},
											{
												"body": {
													"nativeSrc": "7804:263:10",
													"nodeType": "YulBlock",
													"src": "7804:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7850:83:10",
																"nodeType": "YulBlock",
																"src": "7850:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7852:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7852:77:10"
																			},
																			"nativeSrc": "7852:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7852:79:10"
																		},
																		"nativeSrc": "7852:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7852:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7825:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7825:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7834:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7821:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7821:3:10"
																		},
																		"nativeSrc": "7821:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7821:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7817:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7817:3:10"
																},
																"nativeSrc": "7817:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7817:32:10"
															},
															"nativeSrc": "7814:119:10",
															"nodeType": "YulIf",
															"src": "7814:119:10"
														},
														{
															"nativeSrc": "7943:117:10",
															"nodeType": "YulBlock",
															"src": "7943:117:10",
															"statements": [
																{
																	"nativeSrc": "7958:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7958:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7972:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7972:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7962:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7962:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7987:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7987:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8022:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8022:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8033:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8033:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8018:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8018:3:10"
																				},
																				"nativeSrc": "8018:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8018:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8042:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8042:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7997:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7997:20:10"
																		},
																		"nativeSrc": "7997:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7997:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7987:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7987:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7738:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7774:9:10",
														"nodeType": "YulTypedName",
														"src": "7774:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7785:7:10",
														"nodeType": "YulTypedName",
														"src": "7785:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7797:6:10",
														"nodeType": "YulTypedName",
														"src": "7797:6:10",
														"type": ""
													}
												],
												"src": "7738:329:10"
											},
											{
												"body": {
													"nativeSrc": "8169:73:10",
													"nodeType": "YulBlock",
													"src": "8169:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8186:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8186:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8191:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8191:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8179:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8179:6:10"
																},
																"nativeSrc": "8179:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8179:19:10"
															},
															"nativeSrc": "8179:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "8179:19:10"
														},
														{
															"nativeSrc": "8207:29:10",
															"nodeType": "YulAssignment",
															"src": "8207:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8226:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8231:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8231:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8222:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8222:3:10"
																},
																"nativeSrc": "8222:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8222:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8207:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "8207:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8073:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8141:3:10",
														"nodeType": "YulTypedName",
														"src": "8141:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8146:6:10",
														"nodeType": "YulTypedName",
														"src": "8146:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8157:11:10",
														"nodeType": "YulTypedName",
														"src": "8157:11:10",
														"type": ""
													}
												],
												"src": "8073:169:10"
											},
											{
												"body": {
													"nativeSrc": "8354:69:10",
													"nodeType": "YulBlock",
													"src": "8354:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8376:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8384:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8384:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8372:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8372:3:10"
																		},
																		"nativeSrc": "8372:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8372:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"kind": "string",
																		"nativeSrc": "8388:27:10",
																		"nodeType": "YulLiteral",
																		"src": "8388:27:10",
																		"type": "",
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8365:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8365:6:10"
																},
																"nativeSrc": "8365:51:10",
																"nodeType": "YulFunctionCall",
																"src": "8365:51:10"
															},
															"nativeSrc": "8365:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "8365:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
												"nativeSrc": "8248:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8346:6:10",
														"nodeType": "YulTypedName",
														"src": "8346:6:10",
														"type": ""
													}
												],
												"src": "8248:175:10"
											},
											{
												"body": {
													"nativeSrc": "8575:220:10",
													"nodeType": "YulBlock",
													"src": "8575:220:10",
													"statements": [
														{
															"nativeSrc": "8585:74:10",
															"nodeType": "YulAssignment",
															"src": "8585:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8651:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8651:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8656:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8592:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8592:58:10"
																},
																"nativeSrc": "8592:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8592:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8585:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8757:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8757:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																	"nativeSrc": "8668:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8668:88:10"
																},
																"nativeSrc": "8668:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8668:93:10"
															},
															"nativeSrc": "8668:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8668:93:10"
														},
														{
															"nativeSrc": "8770:19:10",
															"nodeType": "YulAssignment",
															"src": "8770:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8781:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8781:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8786:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8786:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8777:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8777:3:10"
																},
																"nativeSrc": "8777:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8777:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8770:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8429:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8563:3:10",
														"nodeType": "YulTypedName",
														"src": "8563:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8571:3:10",
														"nodeType": "YulTypedName",
														"src": "8571:3:10",
														"type": ""
													}
												],
												"src": "8429:366:10"
											},
											{
												"body": {
													"nativeSrc": "8972:248:10",
													"nodeType": "YulBlock",
													"src": "8972:248:10",
													"statements": [
														{
															"nativeSrc": "8982:26:10",
															"nodeType": "YulAssignment",
															"src": "8982:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8994:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8994:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9005:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9005:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8990:3:10"
																},
																"nativeSrc": "8990:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8990:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8982:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9029:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9029:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9040:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9040:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:10"
																		},
																		"nativeSrc": "9025:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9025:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9048:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9048:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9054:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9054:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9044:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:10"
																		},
																		"nativeSrc": "9044:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9018:6:10"
																},
																"nativeSrc": "9018:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9018:47:10"
															},
															"nativeSrc": "9018:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9018:47:10"
														},
														{
															"nativeSrc": "9074:139:10",
															"nodeType": "YulAssignment",
															"src": "9074:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9208:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9208:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9082:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9082:124:10"
																},
																"nativeSrc": "9082:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9082:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9074:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9074:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8801:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8952:9:10",
														"nodeType": "YulTypedName",
														"src": "8952:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8967:4:10",
														"nodeType": "YulTypedName",
														"src": "8967:4:10",
														"type": ""
													}
												],
												"src": "8801:419:10"
											},
											{
												"body": {
													"nativeSrc": "9332:75:10",
													"nodeType": "YulBlock",
													"src": "9332:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9354:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9354:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9362:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9362:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9350:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9350:3:10"
																		},
																		"nativeSrc": "9350:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9350:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "9366:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9366:33:10",
																		"type": "",
																		"value": "ModuleX:Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9343:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9343:6:10"
																},
																"nativeSrc": "9343:57:10",
																"nodeType": "YulFunctionCall",
																"src": "9343:57:10"
															},
															"nativeSrc": "9343:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "9343:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
												"nativeSrc": "9226:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9324:6:10",
														"nodeType": "YulTypedName",
														"src": "9324:6:10",
														"type": ""
													}
												],
												"src": "9226:181:10"
											},
											{
												"body": {
													"nativeSrc": "9559:220:10",
													"nodeType": "YulBlock",
													"src": "9559:220:10",
													"statements": [
														{
															"nativeSrc": "9569:74:10",
															"nodeType": "YulAssignment",
															"src": "9569:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9635:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9635:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9640:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9576:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9576:58:10"
																},
																"nativeSrc": "9576:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9576:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9569:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9569:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9741:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9741:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																	"nativeSrc": "9652:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9652:88:10"
																},
																"nativeSrc": "9652:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9652:93:10"
															},
															"nativeSrc": "9652:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9652:93:10"
														},
														{
															"nativeSrc": "9754:19:10",
															"nodeType": "YulAssignment",
															"src": "9754:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9765:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9765:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9770:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9770:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9761:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:10"
																},
																"nativeSrc": "9761:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9761:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9754:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9413:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9547:3:10",
														"nodeType": "YulTypedName",
														"src": "9547:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9555:3:10",
														"nodeType": "YulTypedName",
														"src": "9555:3:10",
														"type": ""
													}
												],
												"src": "9413:366:10"
											},
											{
												"body": {
													"nativeSrc": "9956:248:10",
													"nodeType": "YulBlock",
													"src": "9956:248:10",
													"statements": [
														{
															"nativeSrc": "9966:26:10",
															"nodeType": "YulAssignment",
															"src": "9966:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9978:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9978:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9989:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9989:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9974:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9974:3:10"
																},
																"nativeSrc": "9974:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9974:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9966:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9966:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10013:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10013:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10024:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10024:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10009:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:10"
																		},
																		"nativeSrc": "10009:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10032:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10032:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10038:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10038:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10028:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:10"
																		},
																		"nativeSrc": "10028:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10028:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10002:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:10"
																},
																"nativeSrc": "10002:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10002:47:10"
															},
															"nativeSrc": "10002:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10002:47:10"
														},
														{
															"nativeSrc": "10058:139:10",
															"nodeType": "YulAssignment",
															"src": "10058:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10192:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10192:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10066:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10066:124:10"
																},
																"nativeSrc": "10066:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10066:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10058:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10058:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9785:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9936:9:10",
														"nodeType": "YulTypedName",
														"src": "9936:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9951:4:10",
														"nodeType": "YulTypedName",
														"src": "9951:4:10",
														"type": ""
													}
												],
												"src": "9785:419:10"
											},
											{
												"body": {
													"nativeSrc": "10316:123:10",
													"nodeType": "YulBlock",
													"src": "10316:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10338:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10338:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10346:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10346:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10334:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:10"
																		},
																		"nativeSrc": "10334:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10334:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "10350:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10350:34:10",
																		"type": "",
																		"value": "ModuleX:Early Withdrawal is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10327:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10327:6:10"
																},
																"nativeSrc": "10327:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10327:58:10"
															},
															"nativeSrc": "10327:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10327:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10406:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10406:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10414:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10414:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10402:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:10"
																		},
																		"nativeSrc": "10402:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10402:15:10"
																	},
																	{
																		"hexValue": "7065726d697474656421",
																		"kind": "string",
																		"nativeSrc": "10419:12:10",
																		"nodeType": "YulLiteral",
																		"src": "10419:12:10",
																		"type": "",
																		"value": "permitted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10395:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10395:6:10"
																},
																"nativeSrc": "10395:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10395:37:10"
															},
															"nativeSrc": "10395:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10395:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
												"nativeSrc": "10210:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10308:6:10",
														"nodeType": "YulTypedName",
														"src": "10308:6:10",
														"type": ""
													}
												],
												"src": "10210:229:10"
											},
											{
												"body": {
													"nativeSrc": "10591:220:10",
													"nodeType": "YulBlock",
													"src": "10591:220:10",
													"statements": [
														{
															"nativeSrc": "10601:74:10",
															"nodeType": "YulAssignment",
															"src": "10601:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10667:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10667:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10608:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10608:58:10"
																},
																"nativeSrc": "10608:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10608:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10601:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10773:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10773:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																	"nativeSrc": "10684:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10684:88:10"
																},
																"nativeSrc": "10684:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10684:93:10"
															},
															"nativeSrc": "10684:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10684:93:10"
														},
														{
															"nativeSrc": "10786:19:10",
															"nodeType": "YulAssignment",
															"src": "10786:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10797:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10797:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10802:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10802:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10793:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10793:3:10"
																},
																"nativeSrc": "10793:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10793:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10786:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10786:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10445:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10579:3:10",
														"nodeType": "YulTypedName",
														"src": "10579:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10587:3:10",
														"nodeType": "YulTypedName",
														"src": "10587:3:10",
														"type": ""
													}
												],
												"src": "10445:366:10"
											},
											{
												"body": {
													"nativeSrc": "10988:248:10",
													"nodeType": "YulBlock",
													"src": "10988:248:10",
													"statements": [
														{
															"nativeSrc": "10998:26:10",
															"nodeType": "YulAssignment",
															"src": "10998:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11021:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11006:3:10"
																},
																"nativeSrc": "11006:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11006:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10998:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11045:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11045:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11056:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11056:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11041:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:10"
																		},
																		"nativeSrc": "11041:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11064:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11064:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11070:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11070:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11060:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:10"
																		},
																		"nativeSrc": "11060:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11060:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11034:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11034:6:10"
																},
																"nativeSrc": "11034:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11034:47:10"
															},
															"nativeSrc": "11034:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11034:47:10"
														},
														{
															"nativeSrc": "11090:139:10",
															"nodeType": "YulAssignment",
															"src": "11090:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11098:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11098:124:10"
																},
																"nativeSrc": "11098:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11098:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11090:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11090:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10817:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10968:9:10",
														"nodeType": "YulTypedName",
														"src": "10968:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10983:4:10",
														"nodeType": "YulTypedName",
														"src": "10983:4:10",
														"type": ""
													}
												],
												"src": "10817:419:10"
											},
											{
												"body": {
													"nativeSrc": "11348:68:10",
													"nodeType": "YulBlock",
													"src": "11348:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11370:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11370:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11378:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11378:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11366:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11366:3:10"
																		},
																		"nativeSrc": "11366:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11366:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "11382:26:10",
																		"nodeType": "YulLiteral",
																		"src": "11382:26:10",
																		"type": "",
																		"value": "ModuleX:Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11359:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11359:6:10"
																},
																"nativeSrc": "11359:50:10",
																"nodeType": "YulFunctionCall",
																"src": "11359:50:10"
															},
															"nativeSrc": "11359:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "11359:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
												"nativeSrc": "11242:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11340:6:10",
														"nodeType": "YulTypedName",
														"src": "11340:6:10",
														"type": ""
													}
												],
												"src": "11242:174:10"
											},
											{
												"body": {
													"nativeSrc": "11568:220:10",
													"nodeType": "YulBlock",
													"src": "11568:220:10",
													"statements": [
														{
															"nativeSrc": "11578:74:10",
															"nodeType": "YulAssignment",
															"src": "11578:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11644:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11644:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11649:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11649:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11585:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11585:58:10"
																},
																"nativeSrc": "11585:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11585:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11578:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11578:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11750:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11750:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																	"nativeSrc": "11661:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11661:88:10"
																},
																"nativeSrc": "11661:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11661:93:10"
															},
															"nativeSrc": "11661:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11661:93:10"
														},
														{
															"nativeSrc": "11763:19:10",
															"nodeType": "YulAssignment",
															"src": "11763:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11774:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11774:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11779:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:10"
																},
																"nativeSrc": "11770:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11770:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11763:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11763:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11422:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11556:3:10",
														"nodeType": "YulTypedName",
														"src": "11556:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11564:3:10",
														"nodeType": "YulTypedName",
														"src": "11564:3:10",
														"type": ""
													}
												],
												"src": "11422:366:10"
											},
											{
												"body": {
													"nativeSrc": "11965:248:10",
													"nodeType": "YulBlock",
													"src": "11965:248:10",
													"statements": [
														{
															"nativeSrc": "11975:26:10",
															"nodeType": "YulAssignment",
															"src": "11975:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11987:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11987:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11998:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11983:3:10"
																},
																"nativeSrc": "11983:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11983:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11975:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11975:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12022:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12022:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12033:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12018:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12018:3:10"
																		},
																		"nativeSrc": "12018:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12018:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12041:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12041:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12047:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12047:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12037:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12037:3:10"
																		},
																		"nativeSrc": "12037:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12037:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12011:6:10"
																},
																"nativeSrc": "12011:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12011:47:10"
															},
															"nativeSrc": "12011:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12011:47:10"
														},
														{
															"nativeSrc": "12067:139:10",
															"nodeType": "YulAssignment",
															"src": "12067:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12201:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12201:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12075:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12075:124:10"
																},
																"nativeSrc": "12075:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12075:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12067:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12067:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11794:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11945:9:10",
														"nodeType": "YulTypedName",
														"src": "11945:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11960:4:10",
														"nodeType": "YulTypedName",
														"src": "11960:4:10",
														"type": ""
													}
												],
												"src": "11794:419:10"
											},
											{
												"body": {
													"nativeSrc": "12247:152:10",
													"nodeType": "YulBlock",
													"src": "12247:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12264:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12264:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12267:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12267:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12257:6:10"
																},
																"nativeSrc": "12257:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12257:88:10"
															},
															"nativeSrc": "12257:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12257:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12361:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12361:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12364:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12364:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12354:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12354:6:10"
																},
																"nativeSrc": "12354:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12354:15:10"
															},
															"nativeSrc": "12354:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12354:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12385:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12385:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12388:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12388:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12378:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12378:6:10"
																},
																"nativeSrc": "12378:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12378:15:10"
															},
															"nativeSrc": "12378:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12378:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12219:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12219:180:10"
											},
											{
												"body": {
													"nativeSrc": "12450:149:10",
													"nodeType": "YulBlock",
													"src": "12450:149:10",
													"statements": [
														{
															"nativeSrc": "12460:25:10",
															"nodeType": "YulAssignment",
															"src": "12460:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12483:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12483:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12465:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12465:17:10"
																},
																"nativeSrc": "12465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12465:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12460:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12460:1:10"
																}
															]
														},
														{
															"nativeSrc": "12494:25:10",
															"nodeType": "YulAssignment",
															"src": "12494:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12517:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12517:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12499:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12499:17:10"
																},
																"nativeSrc": "12499:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12499:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12494:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12494:1:10"
																}
															]
														},
														{
															"nativeSrc": "12528:17:10",
															"nodeType": "YulAssignment",
															"src": "12528:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12540:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12540:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12543:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12543:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12536:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12536:3:10"
																},
																"nativeSrc": "12536:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12536:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12528:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12528:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12570:22:10",
																"nodeType": "YulBlock",
																"src": "12570:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12572:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12572:16:10"
																			},
																			"nativeSrc": "12572:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12572:18:10"
																		},
																		"nativeSrc": "12572:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12572:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12561:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12561:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12567:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12567:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12558:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12558:2:10"
																},
																"nativeSrc": "12558:11:10",
																"nodeType": "YulFunctionCall",
																"src": "12558:11:10"
															},
															"nativeSrc": "12555:37:10",
															"nodeType": "YulIf",
															"src": "12555:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12405:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12436:1:10",
														"nodeType": "YulTypedName",
														"src": "12436:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12439:1:10",
														"nodeType": "YulTypedName",
														"src": "12439:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12445:4:10",
														"nodeType": "YulTypedName",
														"src": "12445:4:10",
														"type": ""
													}
												],
												"src": "12405:194:10"
											},
											{
												"body": {
													"nativeSrc": "12711:122:10",
													"nodeType": "YulBlock",
													"src": "12711:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12733:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12733:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12741:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12741:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12729:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12729:3:10"
																		},
																		"nativeSrc": "12729:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12729:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "12745:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12745:34:10",
																		"type": "",
																		"value": "ModuleX:amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12722:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12722:6:10"
																},
																"nativeSrc": "12722:58:10",
																"nodeType": "YulFunctionCall",
																"src": "12722:58:10"
															},
															"nativeSrc": "12722:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "12722:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12801:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12801:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12809:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12809:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12797:3:10"
																		},
																		"nativeSrc": "12797:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12797:15:10"
																	},
																	{
																		"hexValue": "68616e207a65726f21",
																		"kind": "string",
																		"nativeSrc": "12814:11:10",
																		"nodeType": "YulLiteral",
																		"src": "12814:11:10",
																		"type": "",
																		"value": "han zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12790:6:10"
																},
																"nativeSrc": "12790:36:10",
																"nodeType": "YulFunctionCall",
																"src": "12790:36:10"
															},
															"nativeSrc": "12790:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "12790:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
												"nativeSrc": "12605:228:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12703:6:10",
														"nodeType": "YulTypedName",
														"src": "12703:6:10",
														"type": ""
													}
												],
												"src": "12605:228:10"
											},
											{
												"body": {
													"nativeSrc": "12985:220:10",
													"nodeType": "YulBlock",
													"src": "12985:220:10",
													"statements": [
														{
															"nativeSrc": "12995:74:10",
															"nodeType": "YulAssignment",
															"src": "12995:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13061:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13061:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13066:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13002:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13002:58:10"
																},
																"nativeSrc": "13002:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13002:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12995:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12995:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13167:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13167:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																	"nativeSrc": "13078:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13078:88:10"
																},
																"nativeSrc": "13078:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13078:93:10"
															},
															"nativeSrc": "13078:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13078:93:10"
														},
														{
															"nativeSrc": "13180:19:10",
															"nodeType": "YulAssignment",
															"src": "13180:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13191:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13196:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13196:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13187:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13187:3:10"
																},
																"nativeSrc": "13187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13187:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13180:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12839:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12973:3:10",
														"nodeType": "YulTypedName",
														"src": "12973:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12981:3:10",
														"nodeType": "YulTypedName",
														"src": "12981:3:10",
														"type": ""
													}
												],
												"src": "12839:366:10"
											},
											{
												"body": {
													"nativeSrc": "13382:248:10",
													"nodeType": "YulBlock",
													"src": "13382:248:10",
													"statements": [
														{
															"nativeSrc": "13392:26:10",
															"nodeType": "YulAssignment",
															"src": "13392:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13404:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13404:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13415:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13400:3:10"
																},
																"nativeSrc": "13400:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13400:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13392:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13392:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13439:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13439:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13450:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13450:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13435:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13435:3:10"
																		},
																		"nativeSrc": "13435:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13435:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13458:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13458:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13464:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13464:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13454:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13454:3:10"
																		},
																		"nativeSrc": "13454:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13454:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13428:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:10"
																},
																"nativeSrc": "13428:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13428:47:10"
															},
															"nativeSrc": "13428:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13428:47:10"
														},
														{
															"nativeSrc": "13484:139:10",
															"nodeType": "YulAssignment",
															"src": "13484:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13618:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13618:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13492:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13492:124:10"
																},
																"nativeSrc": "13492:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13492:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13484:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13484:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13211:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13362:9:10",
														"nodeType": "YulTypedName",
														"src": "13362:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13377:4:10",
														"nodeType": "YulTypedName",
														"src": "13377:4:10",
														"type": ""
													}
												],
												"src": "13211:419:10"
											},
											{
												"body": {
													"nativeSrc": "13742:65:10",
													"nodeType": "YulBlock",
													"src": "13742:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13764:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13764:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13772:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13772:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13760:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13760:3:10"
																		},
																		"nativeSrc": "13760:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13760:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "13776:23:10",
																		"nodeType": "YulLiteral",
																		"src": "13776:23:10",
																		"type": "",
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:10"
																},
																"nativeSrc": "13753:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13753:47:10"
															},
															"nativeSrc": "13753:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13753:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
												"nativeSrc": "13636:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13734:6:10",
														"nodeType": "YulTypedName",
														"src": "13734:6:10",
														"type": ""
													}
												],
												"src": "13636:171:10"
											},
											{
												"body": {
													"nativeSrc": "13959:220:10",
													"nodeType": "YulBlock",
													"src": "13959:220:10",
													"statements": [
														{
															"nativeSrc": "13969:74:10",
															"nodeType": "YulAssignment",
															"src": "13969:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14035:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14035:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14040:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14040:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13976:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13976:58:10"
																},
																"nativeSrc": "13976:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13976:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13969:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14141:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14141:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																	"nativeSrc": "14052:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14052:88:10"
																},
																"nativeSrc": "14052:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14052:93:10"
															},
															"nativeSrc": "14052:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14052:93:10"
														},
														{
															"nativeSrc": "14154:19:10",
															"nodeType": "YulAssignment",
															"src": "14154:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14165:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14165:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14161:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14161:3:10"
																},
																"nativeSrc": "14161:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14161:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14154:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14154:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13813:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13947:3:10",
														"nodeType": "YulTypedName",
														"src": "13947:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13955:3:10",
														"nodeType": "YulTypedName",
														"src": "13955:3:10",
														"type": ""
													}
												],
												"src": "13813:366:10"
											},
											{
												"body": {
													"nativeSrc": "14356:248:10",
													"nodeType": "YulBlock",
													"src": "14356:248:10",
													"statements": [
														{
															"nativeSrc": "14366:26:10",
															"nodeType": "YulAssignment",
															"src": "14366:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14378:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14378:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14389:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14374:3:10"
																},
																"nativeSrc": "14374:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14374:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14366:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14366:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14413:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14413:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14424:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14424:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14409:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14409:3:10"
																		},
																		"nativeSrc": "14409:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14409:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14432:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14432:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14438:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14438:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14428:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14428:3:10"
																		},
																		"nativeSrc": "14428:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14428:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14402:6:10"
																},
																"nativeSrc": "14402:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14402:47:10"
															},
															"nativeSrc": "14402:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14402:47:10"
														},
														{
															"nativeSrc": "14458:139:10",
															"nodeType": "YulAssignment",
															"src": "14458:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14592:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14592:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14466:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14466:124:10"
																},
																"nativeSrc": "14466:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14466:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14458:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14458:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14185:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14336:9:10",
														"nodeType": "YulTypedName",
														"src": "14336:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14351:4:10",
														"nodeType": "YulTypedName",
														"src": "14351:4:10",
														"type": ""
													}
												],
												"src": "14185:419:10"
											},
											{
												"body": {
													"nativeSrc": "14716:73:10",
													"nodeType": "YulBlock",
													"src": "14716:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14738:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14738:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14746:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14746:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14734:3:10"
																		},
																		"nativeSrc": "14734:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14734:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
																		"kind": "string",
																		"nativeSrc": "14750:31:10",
																		"nodeType": "YulLiteral",
																		"src": "14750:31:10",
																		"type": "",
																		"value": "ModuleX:Insufficient balance!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14727:6:10"
																},
																"nativeSrc": "14727:55:10",
																"nodeType": "YulFunctionCall",
																"src": "14727:55:10"
															},
															"nativeSrc": "14727:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "14727:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
												"nativeSrc": "14610:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14708:6:10",
														"nodeType": "YulTypedName",
														"src": "14708:6:10",
														"type": ""
													}
												],
												"src": "14610:179:10"
											},
											{
												"body": {
													"nativeSrc": "14941:220:10",
													"nodeType": "YulBlock",
													"src": "14941:220:10",
													"statements": [
														{
															"nativeSrc": "14951:74:10",
															"nodeType": "YulAssignment",
															"src": "14951:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15017:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15017:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15022:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15022:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14958:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14958:58:10"
																},
																"nativeSrc": "14958:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14958:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14951:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14951:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15123:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15123:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																	"nativeSrc": "15034:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15034:88:10"
																},
																"nativeSrc": "15034:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15034:93:10"
															},
															"nativeSrc": "15034:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15034:93:10"
														},
														{
															"nativeSrc": "15136:19:10",
															"nodeType": "YulAssignment",
															"src": "15136:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15147:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15147:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15152:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15152:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15143:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15143:3:10"
																},
																"nativeSrc": "15143:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15143:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15136:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15136:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14795:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14929:3:10",
														"nodeType": "YulTypedName",
														"src": "14929:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14937:3:10",
														"nodeType": "YulTypedName",
														"src": "14937:3:10",
														"type": ""
													}
												],
												"src": "14795:366:10"
											},
											{
												"body": {
													"nativeSrc": "15338:248:10",
													"nodeType": "YulBlock",
													"src": "15338:248:10",
													"statements": [
														{
															"nativeSrc": "15348:26:10",
															"nodeType": "YulAssignment",
															"src": "15348:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15360:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15360:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15371:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15371:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15356:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15356:3:10"
																},
																"nativeSrc": "15356:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15356:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15348:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15348:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15395:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15406:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15406:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15391:3:10"
																		},
																		"nativeSrc": "15391:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15391:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15414:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15414:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15420:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15420:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15410:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15410:3:10"
																		},
																		"nativeSrc": "15410:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15410:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15384:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15384:6:10"
																},
																"nativeSrc": "15384:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15384:47:10"
															},
															"nativeSrc": "15384:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15384:47:10"
														},
														{
															"nativeSrc": "15440:139:10",
															"nodeType": "YulAssignment",
															"src": "15440:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15574:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15574:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15448:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15448:124:10"
																},
																"nativeSrc": "15448:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15448:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15440:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15440:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15167:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15318:9:10",
														"nodeType": "YulTypedName",
														"src": "15318:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15333:4:10",
														"nodeType": "YulTypedName",
														"src": "15333:4:10",
														"type": ""
													}
												],
												"src": "15167:419:10"
											},
											{
												"body": {
													"nativeSrc": "15620:152:10",
													"nodeType": "YulBlock",
													"src": "15620:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15637:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15637:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15640:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15640:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15630:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15630:6:10"
																},
																"nativeSrc": "15630:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15630:88:10"
															},
															"nativeSrc": "15630:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15630:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15734:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15734:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15737:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15737:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15727:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15727:6:10"
																},
																"nativeSrc": "15727:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15727:15:10"
															},
															"nativeSrc": "15727:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15727:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15758:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15758:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15761:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15761:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15751:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:10"
																},
																"nativeSrc": "15751:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15751:15:10"
															},
															"nativeSrc": "15751:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15751:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15592:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15592:180:10"
											},
											{
												"body": {
													"nativeSrc": "15822:147:10",
													"nodeType": "YulBlock",
													"src": "15822:147:10",
													"statements": [
														{
															"nativeSrc": "15832:25:10",
															"nodeType": "YulAssignment",
															"src": "15832:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15855:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15855:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15837:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15837:17:10"
																},
																"nativeSrc": "15837:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15837:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15832:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15832:1:10"
																}
															]
														},
														{
															"nativeSrc": "15866:25:10",
															"nodeType": "YulAssignment",
															"src": "15866:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15889:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15889:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15871:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15871:17:10"
																},
																"nativeSrc": "15871:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15871:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15866:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15866:1:10"
																}
															]
														},
														{
															"nativeSrc": "15900:16:10",
															"nodeType": "YulAssignment",
															"src": "15900:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15911:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15911:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15914:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15914:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15907:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15907:3:10"
																},
																"nativeSrc": "15907:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15907:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15900:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15900:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15940:22:10",
																"nodeType": "YulBlock",
																"src": "15940:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15942:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15942:16:10"
																			},
																			"nativeSrc": "15942:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15942:18:10"
																		},
																		"nativeSrc": "15942:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15942:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15932:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15932:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15935:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15935:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15929:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15929:2:10"
																},
																"nativeSrc": "15929:10:10",
																"nodeType": "YulFunctionCall",
																"src": "15929:10:10"
															},
															"nativeSrc": "15926:36:10",
															"nodeType": "YulIf",
															"src": "15926:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15778:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15809:1:10",
														"nodeType": "YulTypedName",
														"src": "15809:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15812:1:10",
														"nodeType": "YulTypedName",
														"src": "15812:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15818:3:10",
														"nodeType": "YulTypedName",
														"src": "15818:3:10",
														"type": ""
													}
												],
												"src": "15778:191:10"
											},
											{
												"body": {
													"nativeSrc": "16081:70:10",
													"nodeType": "YulBlock",
													"src": "16081:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16103:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16103:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16111:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16111:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16099:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16099:3:10"
																		},
																		"nativeSrc": "16099:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16099:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
																		"kind": "string",
																		"nativeSrc": "16115:28:10",
																		"nodeType": "YulLiteral",
																		"src": "16115:28:10",
																		"type": "",
																		"value": "ModuleX:Total amount is 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16092:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16092:6:10"
																},
																"nativeSrc": "16092:52:10",
																"nodeType": "YulFunctionCall",
																"src": "16092:52:10"
															},
															"nativeSrc": "16092:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "16092:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
												"nativeSrc": "15975:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16073:6:10",
														"nodeType": "YulTypedName",
														"src": "16073:6:10",
														"type": ""
													}
												],
												"src": "15975:176:10"
											},
											{
												"body": {
													"nativeSrc": "16303:220:10",
													"nodeType": "YulBlock",
													"src": "16303:220:10",
													"statements": [
														{
															"nativeSrc": "16313:74:10",
															"nodeType": "YulAssignment",
															"src": "16313:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16379:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16379:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16384:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16384:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16320:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16320:58:10"
																},
																"nativeSrc": "16320:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16320:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16313:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16313:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16485:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16485:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																	"nativeSrc": "16396:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16396:88:10"
																},
																"nativeSrc": "16396:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16396:93:10"
															},
															"nativeSrc": "16396:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16396:93:10"
														},
														{
															"nativeSrc": "16498:19:10",
															"nodeType": "YulAssignment",
															"src": "16498:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16509:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16509:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16505:3:10"
																},
																"nativeSrc": "16505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16505:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16498:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16498:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16157:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16291:3:10",
														"nodeType": "YulTypedName",
														"src": "16291:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16299:3:10",
														"nodeType": "YulTypedName",
														"src": "16299:3:10",
														"type": ""
													}
												],
												"src": "16157:366:10"
											},
											{
												"body": {
													"nativeSrc": "16700:248:10",
													"nodeType": "YulBlock",
													"src": "16700:248:10",
													"statements": [
														{
															"nativeSrc": "16710:26:10",
															"nodeType": "YulAssignment",
															"src": "16710:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16722:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16722:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16733:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16733:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16718:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:10"
																},
																"nativeSrc": "16718:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16718:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16710:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16710:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16757:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16757:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16768:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16768:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16753:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16753:3:10"
																		},
																		"nativeSrc": "16753:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16753:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16776:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16776:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16782:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16772:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16772:3:10"
																		},
																		"nativeSrc": "16772:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16772:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16746:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16746:6:10"
																},
																"nativeSrc": "16746:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16746:47:10"
															},
															"nativeSrc": "16746:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16746:47:10"
														},
														{
															"nativeSrc": "16802:139:10",
															"nodeType": "YulAssignment",
															"src": "16802:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16936:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16936:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16810:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16810:124:10"
																},
																"nativeSrc": "16810:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16810:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16802:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16802:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16529:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16680:9:10",
														"nodeType": "YulTypedName",
														"src": "16680:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16695:4:10",
														"nodeType": "YulTypedName",
														"src": "16695:4:10",
														"type": ""
													}
												],
												"src": "16529:419:10"
											},
											{
												"body": {
													"nativeSrc": "16982:152:10",
													"nodeType": "YulBlock",
													"src": "16982:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16999:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16999:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17002:77:10",
																		"nodeType": "YulLiteral",
																		"src": "17002:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16992:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16992:6:10"
																},
																"nativeSrc": "16992:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16992:88:10"
															},
															"nativeSrc": "16992:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16992:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17096:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17096:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17099:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17099:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17089:6:10"
																},
																"nativeSrc": "17089:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17089:15:10"
															},
															"nativeSrc": "17089:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17089:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17120:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17120:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17123:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17123:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17113:6:10"
																},
																"nativeSrc": "17113:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17113:15:10"
															},
															"nativeSrc": "17113:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17113:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16954:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16954:180:10"
											},
											{
												"body": {
													"nativeSrc": "17182:143:10",
													"nodeType": "YulBlock",
													"src": "17182:143:10",
													"statements": [
														{
															"nativeSrc": "17192:25:10",
															"nodeType": "YulAssignment",
															"src": "17192:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17215:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17215:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17197:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17197:17:10"
																},
																"nativeSrc": "17197:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17197:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17192:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17192:1:10"
																}
															]
														},
														{
															"nativeSrc": "17226:25:10",
															"nodeType": "YulAssignment",
															"src": "17226:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17249:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17249:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17231:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17231:17:10"
																},
																"nativeSrc": "17231:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17231:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17226:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17226:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17273:22:10",
																"nodeType": "YulBlock",
																"src": "17273:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17275:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17275:16:10"
																			},
																			"nativeSrc": "17275:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17275:18:10"
																		},
																		"nativeSrc": "17275:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17275:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17270:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17270:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17263:6:10"
																},
																"nativeSrc": "17263:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17263:9:10"
															},
															"nativeSrc": "17260:35:10",
															"nodeType": "YulIf",
															"src": "17260:35:10"
														},
														{
															"nativeSrc": "17305:14:10",
															"nodeType": "YulAssignment",
															"src": "17305:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17314:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17314:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17317:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17317:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17310:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17310:3:10"
																},
																"nativeSrc": "17310:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17310:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17305:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17305:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17140:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17171:1:10",
														"nodeType": "YulTypedName",
														"src": "17171:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17174:1:10",
														"nodeType": "YulTypedName",
														"src": "17174:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17180:1:10",
														"nodeType": "YulTypedName",
														"src": "17180:1:10",
														"type": ""
													}
												],
												"src": "17140:185:10"
											},
											{
												"body": {
													"nativeSrc": "17379:362:10",
													"nodeType": "YulBlock",
													"src": "17379:362:10",
													"statements": [
														{
															"nativeSrc": "17389:25:10",
															"nodeType": "YulAssignment",
															"src": "17389:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17412:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17412:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17394:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17394:17:10"
																},
																"nativeSrc": "17394:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17394:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17389:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17389:1:10"
																}
															]
														},
														{
															"nativeSrc": "17423:25:10",
															"nodeType": "YulAssignment",
															"src": "17423:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17446:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17446:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17428:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17428:17:10"
																},
																"nativeSrc": "17428:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17428:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17423:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17423:1:10"
																}
															]
														},
														{
															"nativeSrc": "17457:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "17457:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17480:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17480:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17483:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17483:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17476:3:10"
																},
																"nativeSrc": "17476:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17476:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17461:11:10",
																	"nodeType": "YulTypedName",
																	"src": "17461:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17494:41:10",
															"nodeType": "YulAssignment",
															"src": "17494:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17523:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "17523:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17505:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17505:17:10"
																},
																"nativeSrc": "17505:30:10",
																"nodeType": "YulFunctionCall",
																"src": "17505:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17494:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "17494:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17712:22:10",
																"nodeType": "YulBlock",
																"src": "17712:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17714:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17714:16:10"
																			},
																			"nativeSrc": "17714:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17714:18:10"
																		},
																		"nativeSrc": "17714:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17714:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17645:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "17645:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17638:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "17638:6:10"
																				},
																				"nativeSrc": "17638:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17638:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17668:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "17668:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17675:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "17675:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17684:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "17684:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17671:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "17671:3:10"
																						},
																						"nativeSrc": "17671:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "17671:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17665:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "17665:2:10"
																				},
																				"nativeSrc": "17665:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "17665:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17618:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "17618:2:10"
																		},
																		"nativeSrc": "17618:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17618:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17598:6:10"
																},
																"nativeSrc": "17598:113:10",
																"nodeType": "YulFunctionCall",
																"src": "17598:113:10"
															},
															"nativeSrc": "17595:139:10",
															"nodeType": "YulIf",
															"src": "17595:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17331:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17362:1:10",
														"nodeType": "YulTypedName",
														"src": "17362:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17365:1:10",
														"nodeType": "YulTypedName",
														"src": "17365:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17371:7:10",
														"nodeType": "YulTypedName",
														"src": "17371:7:10",
														"type": ""
													}
												],
												"src": "17331:410:10"
											},
											{
												"body": {
													"nativeSrc": "17810:80:10",
													"nodeType": "YulBlock",
													"src": "17810:80:10",
													"statements": [
														{
															"nativeSrc": "17820:22:10",
															"nodeType": "YulAssignment",
															"src": "17820:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17835:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17835:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17829:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "17829:5:10"
																},
																"nativeSrc": "17829:13:10",
																"nodeType": "YulFunctionCall",
																"src": "17829:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17820:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "17820:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17878:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "17878:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "17851:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "17851:26:10"
																},
																"nativeSrc": "17851:33:10",
																"nodeType": "YulFunctionCall",
																"src": "17851:33:10"
															},
															"nativeSrc": "17851:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "17851:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17747:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17788:6:10",
														"nodeType": "YulTypedName",
														"src": "17788:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17796:3:10",
														"nodeType": "YulTypedName",
														"src": "17796:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17804:5:10",
														"nodeType": "YulTypedName",
														"src": "17804:5:10",
														"type": ""
													}
												],
												"src": "17747:143:10"
											},
											{
												"body": {
													"nativeSrc": "17973:274:10",
													"nodeType": "YulBlock",
													"src": "17973:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "18019:83:10",
																"nodeType": "YulBlock",
																"src": "18019:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18021:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "18021:77:10"
																			},
																			"nativeSrc": "18021:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "18021:79:10"
																		},
																		"nativeSrc": "18021:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "18021:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17994:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18003:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18003:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17990:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17990:3:10"
																		},
																		"nativeSrc": "17990:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17990:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18015:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18015:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17986:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17986:3:10"
																},
																"nativeSrc": "17986:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17986:32:10"
															},
															"nativeSrc": "17983:119:10",
															"nodeType": "YulIf",
															"src": "17983:119:10"
														},
														{
															"nativeSrc": "18112:128:10",
															"nodeType": "YulBlock",
															"src": "18112:128:10",
															"statements": [
																{
																	"nativeSrc": "18127:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18127:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18141:1:10",
																		"nodeType": "YulLiteral",
																		"src": "18141:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18131:6:10",
																			"nodeType": "YulTypedName",
																			"src": "18131:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18156:74:10",
																	"nodeType": "YulAssignment",
																	"src": "18156:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18202:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "18202:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18213:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "18213:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18198:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "18198:3:10"
																				},
																				"nativeSrc": "18198:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "18198:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18222:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "18222:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "18166:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "18166:31:10"
																		},
																		"nativeSrc": "18166:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18166:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18156:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "18156:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17896:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17943:9:10",
														"nodeType": "YulTypedName",
														"src": "17943:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17954:7:10",
														"nodeType": "YulTypedName",
														"src": "17954:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17966:6:10",
														"nodeType": "YulTypedName",
														"src": "17966:6:10",
														"type": ""
													}
												],
												"src": "17896:351:10"
											},
											{
												"body": {
													"nativeSrc": "18359:125:10",
													"nodeType": "YulBlock",
													"src": "18359:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18381:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18381:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18389:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18389:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18377:3:10"
																		},
																		"nativeSrc": "18377:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18377:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d75737420626520677265",
																		"kind": "string",
																		"nativeSrc": "18393:34:10",
																		"nodeType": "YulLiteral",
																		"src": "18393:34:10",
																		"type": "",
																		"value": "ModuleX:Stake amount must be gre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18370:6:10"
																},
																"nativeSrc": "18370:58:10",
																"nodeType": "YulFunctionCall",
																"src": "18370:58:10"
															},
															"nativeSrc": "18370:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "18370:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18449:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18449:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18457:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18457:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18445:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18445:3:10"
																		},
																		"nativeSrc": "18445:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18445:15:10"
																	},
																	{
																		"hexValue": "61746572207468616e203021",
																		"kind": "string",
																		"nativeSrc": "18462:14:10",
																		"nodeType": "YulLiteral",
																		"src": "18462:14:10",
																		"type": "",
																		"value": "ater than 0!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18438:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18438:6:10"
																},
																"nativeSrc": "18438:39:10",
																"nodeType": "YulFunctionCall",
																"src": "18438:39:10"
															},
															"nativeSrc": "18438:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "18438:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
												"nativeSrc": "18253:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18351:6:10",
														"nodeType": "YulTypedName",
														"src": "18351:6:10",
														"type": ""
													}
												],
												"src": "18253:231:10"
											},
											{
												"body": {
													"nativeSrc": "18636:220:10",
													"nodeType": "YulBlock",
													"src": "18636:220:10",
													"statements": [
														{
															"nativeSrc": "18646:74:10",
															"nodeType": "YulAssignment",
															"src": "18646:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18712:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18712:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18717:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18717:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18653:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18653:58:10"
																},
																"nativeSrc": "18653:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18653:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18646:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18818:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18818:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																	"nativeSrc": "18729:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18729:88:10"
																},
																"nativeSrc": "18729:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18729:93:10"
															},
															"nativeSrc": "18729:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18729:93:10"
														},
														{
															"nativeSrc": "18831:19:10",
															"nodeType": "YulAssignment",
															"src": "18831:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18842:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18842:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18847:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18847:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18838:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18838:3:10"
																},
																"nativeSrc": "18838:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18838:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18831:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18831:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18490:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18624:3:10",
														"nodeType": "YulTypedName",
														"src": "18624:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18632:3:10",
														"nodeType": "YulTypedName",
														"src": "18632:3:10",
														"type": ""
													}
												],
												"src": "18490:366:10"
											},
											{
												"body": {
													"nativeSrc": "19033:248:10",
													"nodeType": "YulBlock",
													"src": "19033:248:10",
													"statements": [
														{
															"nativeSrc": "19043:26:10",
															"nodeType": "YulAssignment",
															"src": "19043:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19055:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19055:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19066:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19066:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19051:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19051:3:10"
																},
																"nativeSrc": "19051:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19051:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19043:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19043:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19090:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19090:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19101:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19101:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19086:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19086:3:10"
																		},
																		"nativeSrc": "19086:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19086:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19109:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19109:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19115:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19115:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19105:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19105:3:10"
																		},
																		"nativeSrc": "19105:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19105:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19079:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19079:6:10"
																},
																"nativeSrc": "19079:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19079:47:10"
															},
															"nativeSrc": "19079:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19079:47:10"
														},
														{
															"nativeSrc": "19135:139:10",
															"nodeType": "YulAssignment",
															"src": "19135:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19269:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19269:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19143:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19143:124:10"
																},
																"nativeSrc": "19143:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19143:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19135:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19135:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18862:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19013:9:10",
														"nodeType": "YulTypedName",
														"src": "19013:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19028:4:10",
														"nodeType": "YulTypedName",
														"src": "19028:4:10",
														"type": ""
													}
												],
												"src": "18862:419:10"
											},
											{
												"body": {
													"nativeSrc": "19393:75:10",
													"nodeType": "YulBlock",
													"src": "19393:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19415:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19415:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19423:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19423:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19411:3:10"
																		},
																		"nativeSrc": "19411:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19411:14:10"
																	},
																	{
																		"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
																		"kind": "string",
																		"nativeSrc": "19427:33:10",
																		"nodeType": "YulLiteral",
																		"src": "19427:33:10",
																		"type": "",
																		"value": "ModuleX:Use longer lock_period!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19404:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19404:6:10"
																},
																"nativeSrc": "19404:57:10",
																"nodeType": "YulFunctionCall",
																"src": "19404:57:10"
															},
															"nativeSrc": "19404:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "19404:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
												"nativeSrc": "19287:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19385:6:10",
														"nodeType": "YulTypedName",
														"src": "19385:6:10",
														"type": ""
													}
												],
												"src": "19287:181:10"
											},
											{
												"body": {
													"nativeSrc": "19620:220:10",
													"nodeType": "YulBlock",
													"src": "19620:220:10",
													"statements": [
														{
															"nativeSrc": "19630:74:10",
															"nodeType": "YulAssignment",
															"src": "19630:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19696:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19696:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19701:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19701:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19637:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19637:58:10"
																},
																"nativeSrc": "19637:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19637:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19630:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19630:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19802:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19802:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																	"nativeSrc": "19713:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19713:88:10"
																},
																"nativeSrc": "19713:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19713:93:10"
															},
															"nativeSrc": "19713:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19713:93:10"
														},
														{
															"nativeSrc": "19815:19:10",
															"nodeType": "YulAssignment",
															"src": "19815:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19826:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19826:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19831:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19831:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19822:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19822:3:10"
																},
																"nativeSrc": "19822:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19822:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19815:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19815:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19474:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19608:3:10",
														"nodeType": "YulTypedName",
														"src": "19608:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19616:3:10",
														"nodeType": "YulTypedName",
														"src": "19616:3:10",
														"type": ""
													}
												],
												"src": "19474:366:10"
											},
											{
												"body": {
													"nativeSrc": "20017:248:10",
													"nodeType": "YulBlock",
													"src": "20017:248:10",
													"statements": [
														{
															"nativeSrc": "20027:26:10",
															"nodeType": "YulAssignment",
															"src": "20027:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20039:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20039:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20050:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20050:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20035:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20035:3:10"
																},
																"nativeSrc": "20035:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20035:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20027:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20027:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20074:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20074:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20085:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20085:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20070:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20070:3:10"
																		},
																		"nativeSrc": "20070:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20070:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20093:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20093:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20099:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20099:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20089:3:10"
																		},
																		"nativeSrc": "20089:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20089:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20063:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20063:6:10"
																},
																"nativeSrc": "20063:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20063:47:10"
															},
															"nativeSrc": "20063:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20063:47:10"
														},
														{
															"nativeSrc": "20119:139:10",
															"nodeType": "YulAssignment",
															"src": "20119:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20253:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20253:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20127:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20127:124:10"
																},
																"nativeSrc": "20127:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20127:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20119:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20119:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19846:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19997:9:10",
														"nodeType": "YulTypedName",
														"src": "19997:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20012:4:10",
														"nodeType": "YulTypedName",
														"src": "20012:4:10",
														"type": ""
													}
												],
												"src": "19846:419:10"
											},
											{
												"body": {
													"nativeSrc": "20314:170:10",
													"nodeType": "YulBlock",
													"src": "20314:170:10",
													"statements": [
														{
															"nativeSrc": "20324:24:10",
															"nodeType": "YulAssignment",
															"src": "20324:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20346:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "20346:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "20329:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "20329:16:10"
																},
																"nativeSrc": "20329:19:10",
																"nodeType": "YulFunctionCall",
																"src": "20329:19:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20324:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "20324:1:10"
																}
															]
														},
														{
															"nativeSrc": "20357:24:10",
															"nodeType": "YulAssignment",
															"src": "20357:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20379:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "20379:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nativeSrc": "20362:16:10",
																	"nodeType": "YulIdentifier",
																	"src": "20362:16:10"
																},
																"nativeSrc": "20362:19:10",
																"nodeType": "YulFunctionCall",
																"src": "20362:19:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20357:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "20357:1:10"
																}
															]
														},
														{
															"nativeSrc": "20390:16:10",
															"nodeType": "YulAssignment",
															"src": "20390:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20401:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "20401:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20404:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "20404:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20397:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20397:3:10"
																},
																"nativeSrc": "20397:9:10",
																"nodeType": "YulFunctionCall",
																"src": "20397:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20390:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20455:22:10",
																"nodeType": "YulBlock",
																"src": "20455:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20457:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "20457:16:10"
																			},
																			"nativeSrc": "20457:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20457:18:10"
																		},
																		"nativeSrc": "20457:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "20457:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "20422:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20422:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20427:26:10",
																		"nodeType": "YulLiteral",
																		"src": "20427:26:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20419:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20419:2:10"
																},
																"nativeSrc": "20419:35:10",
																"nodeType": "YulFunctionCall",
																"src": "20419:35:10"
															},
															"nativeSrc": "20416:61:10",
															"nodeType": "YulIf",
															"src": "20416:61:10"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nativeSrc": "20271:213:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20301:1:10",
														"nodeType": "YulTypedName",
														"src": "20301:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20304:1:10",
														"nodeType": "YulTypedName",
														"src": "20304:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20310:3:10",
														"nodeType": "YulTypedName",
														"src": "20310:3:10",
														"type": ""
													}
												],
												"src": "20271:213:10"
											},
											{
												"body": {
													"nativeSrc": "20670:369:10",
													"nodeType": "YulBlock",
													"src": "20670:369:10",
													"statements": [
														{
															"nativeSrc": "20680:27:10",
															"nodeType": "YulAssignment",
															"src": "20680:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20692:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20692:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20703:3:10",
																		"nodeType": "YulLiteral",
																		"src": "20703:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20688:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20688:3:10"
																},
																"nativeSrc": "20688:19:10",
																"nodeType": "YulFunctionCall",
																"src": "20688:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20680:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20680:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20761:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20761:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20774:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20774:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20785:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20785:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20770:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20770:3:10"
																		},
																		"nativeSrc": "20770:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20770:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20717:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20717:43:10"
																},
																"nativeSrc": "20717:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20717:71:10"
															},
															"nativeSrc": "20717:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20717:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20840:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20840:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20853:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20864:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20864:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20849:3:10"
																		},
																		"nativeSrc": "20849:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20849:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nativeSrc": "20798:41:10",
																	"nodeType": "YulIdentifier",
																	"src": "20798:41:10"
																},
																"nativeSrc": "20798:70:10",
																"nodeType": "YulFunctionCall",
																"src": "20798:70:10"
															},
															"nativeSrc": "20798:70:10",
															"nodeType": "YulExpressionStatement",
															"src": "20798:70:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20922:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20922:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20935:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20935:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20946:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20946:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20931:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20931:3:10"
																		},
																		"nativeSrc": "20931:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20931:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20878:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20878:43:10"
																},
																"nativeSrc": "20878:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20878:72:10"
															},
															"nativeSrc": "20878:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20878:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21004:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21004:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21017:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21017:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21028:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21028:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21013:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21013:3:10"
																		},
																		"nativeSrc": "21013:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21013:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20960:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20960:43:10"
																},
																"nativeSrc": "20960:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20960:72:10"
															},
															"nativeSrc": "20960:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20960:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20490:549:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20618:9:10",
														"nodeType": "YulTypedName",
														"src": "20618:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20630:6:10",
														"nodeType": "YulTypedName",
														"src": "20630:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20638:6:10",
														"nodeType": "YulTypedName",
														"src": "20638:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20646:6:10",
														"nodeType": "YulTypedName",
														"src": "20646:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20654:6:10",
														"nodeType": "YulTypedName",
														"src": "20654:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20665:4:10",
														"nodeType": "YulTypedName",
														"src": "20665:4:10",
														"type": ""
													}
												],
												"src": "20490:549:10"
											},
											{
												"body": {
													"nativeSrc": "21088:190:10",
													"nodeType": "YulBlock",
													"src": "21088:190:10",
													"statements": [
														{
															"nativeSrc": "21098:33:10",
															"nodeType": "YulAssignment",
															"src": "21098:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21125:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21125:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21107:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "21107:17:10"
																},
																"nativeSrc": "21107:24:10",
																"nodeType": "YulFunctionCall",
																"src": "21107:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21098:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21098:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21221:22:10",
																"nodeType": "YulBlock",
																"src": "21221:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21223:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "21223:16:10"
																			},
																			"nativeSrc": "21223:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21223:18:10"
																		},
																		"nativeSrc": "21223:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21223:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21146:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21146:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21153:66:10",
																		"nodeType": "YulLiteral",
																		"src": "21153:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21143:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21143:2:10"
																},
																"nativeSrc": "21143:77:10",
																"nodeType": "YulFunctionCall",
																"src": "21143:77:10"
															},
															"nativeSrc": "21140:103:10",
															"nodeType": "YulIf",
															"src": "21140:103:10"
														},
														{
															"nativeSrc": "21252:20:10",
															"nodeType": "YulAssignment",
															"src": "21252:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21263:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21263:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21270:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21270:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21259:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21259:3:10"
																},
																"nativeSrc": "21259:13:10",
																"nodeType": "YulFunctionCall",
																"src": "21259:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21252:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21252:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "21045:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21074:5:10",
														"nodeType": "YulTypedName",
														"src": "21074:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21084:3:10",
														"nodeType": "YulTypedName",
														"src": "21084:3:10",
														"type": ""
													}
												],
												"src": "21045:233:10"
											},
											{
												"body": {
													"nativeSrc": "21410:206:10",
													"nodeType": "YulBlock",
													"src": "21410:206:10",
													"statements": [
														{
															"nativeSrc": "21420:26:10",
															"nodeType": "YulAssignment",
															"src": "21420:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21432:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21432:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21443:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21443:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21428:3:10"
																},
																"nativeSrc": "21428:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21428:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21420:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21500:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21500:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21509:3:10"
																		},
																		"nativeSrc": "21509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21509:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21456:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21456:43:10"
																},
																"nativeSrc": "21456:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21456:71:10"
															},
															"nativeSrc": "21456:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21456:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21581:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21581:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21594:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21594:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21605:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21605:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21590:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21590:3:10"
																		},
																		"nativeSrc": "21590:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21590:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21537:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21537:43:10"
																},
																"nativeSrc": "21537:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21537:72:10"
															},
															"nativeSrc": "21537:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21537:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21284:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21374:9:10",
														"nodeType": "YulTypedName",
														"src": "21374:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21386:6:10",
														"nodeType": "YulTypedName",
														"src": "21386:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21394:6:10",
														"nodeType": "YulTypedName",
														"src": "21394:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21405:4:10",
														"nodeType": "YulTypedName",
														"src": "21405:4:10",
														"type": ""
													}
												],
												"src": "21284:332:10"
											},
											{
												"body": {
													"nativeSrc": "21776:288:10",
													"nodeType": "YulBlock",
													"src": "21776:288:10",
													"statements": [
														{
															"nativeSrc": "21786:26:10",
															"nodeType": "YulAssignment",
															"src": "21786:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21798:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21798:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21809:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21809:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21794:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21794:3:10"
																},
																"nativeSrc": "21794:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21794:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21786:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21786:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21866:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21866:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21879:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21879:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21890:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21875:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21875:3:10"
																		},
																		"nativeSrc": "21875:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21875:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21822:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21822:43:10"
																},
																"nativeSrc": "21822:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21822:71:10"
															},
															"nativeSrc": "21822:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21822:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21947:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21947:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21960:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21960:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21971:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21971:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21956:3:10"
																		},
																		"nativeSrc": "21956:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21956:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21903:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21903:43:10"
																},
																"nativeSrc": "21903:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21903:72:10"
															},
															"nativeSrc": "21903:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21903:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22029:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22029:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22042:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22042:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22053:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22053:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22038:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22038:3:10"
																		},
																		"nativeSrc": "22038:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22038:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21985:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21985:43:10"
																},
																"nativeSrc": "21985:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21985:72:10"
															},
															"nativeSrc": "21985:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21985:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21622:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21732:9:10",
														"nodeType": "YulTypedName",
														"src": "21732:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21744:6:10",
														"nodeType": "YulTypedName",
														"src": "21744:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21752:6:10",
														"nodeType": "YulTypedName",
														"src": "21752:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21760:6:10",
														"nodeType": "YulTypedName",
														"src": "21760:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21771:4:10",
														"nodeType": "YulTypedName",
														"src": "21771:4:10",
														"type": ""
													}
												],
												"src": "21622:442:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Invalid Stake ID!\")\n\n    }\n\n    function abi_encode_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Early Withdrawal is not \")\n\n        mstore(add(memPtr, 32), \"permitted!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Nothing to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero!\")\n\n    }\n\n    function abi_encode_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Burnt tokens!\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Insufficient balance!\")\n\n    }\n\n    function abi_encode_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Total amount is 0!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Stake amount must be gre\")\n\n        mstore(add(memPtr, 32), \"ater than 0!\")\n\n    }\n\n    function abi_encode_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847(memPtr) {\n\n        mstore(add(memPtr, 0), \"ModuleX:Use longer lock_period!\")\n\n    }\n\n    function abi_encode_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint96_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"860": [
									{
										"length": 32,
										"start": 1650
									},
									{
										"length": 32,
										"start": 2185
									},
									{
										"length": 32,
										"start": 2908
									},
									{
										"length": 32,
										"start": 3874
									},
									{
										"length": 32,
										"start": 4486
									}
								],
								"863": [
									{
										"length": 32,
										"start": 1476
									},
									{
										"length": 32,
										"start": 1706
									},
									{
										"length": 32,
										"start": 2350
									},
									{
										"length": 32,
										"start": 3062
									},
									{
										"length": 32,
										"start": 3934
									},
									{
										"length": 32,
										"start": 4156
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610135575f3560e01c8063af7568dd116100b6578063ce325bf81161007a578063ce325bf8146102f3578063d2d7231f14610326578063d46149a214610356578063d6ef7af014610374578063d93c04a014610390578063f2fde38b146103c157610135565b8063af7568dd14610261578063b109beec1461027f578063b5fa91fe1461029d578063bc854352146102bb578063beceed39146102d757610135565b80637c2fdeb5116100fd5780637c2fdeb5146101cd5780638da5cb5b146101eb5780638e12c0cd146102095780638f4729b714610227578063ac00500f1461024557610135565b8063109cf39914610139578063379607f5146101575780633fa352f5146101875780636db08f25146101a5578063715018a6146101c3575b5f5ffd5b6101416103dd565b60405161014e9190611721565b60405180910390f35b610171600480360381019061016c919061176c565b6103eb565b60405161017e9190611721565b60405180910390f35b61018f61066b565b60405161019c9190611721565b60405180910390f35b6101ad610670565b6040516101ba9190611811565b60405180910390f35b6101cb610694565b005b6101d56106a7565b6040516101e2919061184a565b60405180910390f35b6101f36106ce565b604051610200919061184a565b60405180910390f35b6102116106f5565b60405161021e9190611889565b60405180910390f35b61022f6106fb565b60405161023c9190611721565b60405180910390f35b61025f600480360381019061025a91906118a2565b610701565b005b610269610926565b6040516102769190611721565b60405180910390f35b61028761092c565b6040516102949190611811565b60405180910390f35b6102a5610950565b6040516102b29190611721565b60405180910390f35b6102d560048036038101906102d09190611941565b610965565b005b6102f160048036038101906102ec919061176c565b610ba5565b005b61030d6004803603810190610308919061176c565b610c75565b60405161031d949392919061198c565b60405180910390f35b610340600480360381019061033b919061176c565b610d73565b60405161034d9190611721565b60405180910390f35b61035e610f1f565b60405161036b919061184a565b60405180910390f35b61038e600480360381019061038991906119f9565b610f46565b005b6103aa60048036038101906103a59190611a61565b6110d2565b6040516103b8929190611a9f565b60405180910390f35b6103db60048036038101906103d69190611ac6565b611393565b005b6969e10de76676d080000081565b5f815f811180156103fd575060025481105b61043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390611b4b565b60405180910390fd5b5f60015f8581526020019081526020015f209050610458611417565b73ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611bb3565b60405180910390fd5b805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1661051961141e565b6bffffffffffffffffffffffff161015610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611c41565b60405180910390fd5b5f8160020154116105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590611ca9565b60405180910390fd5b5f816002015490506106086105c1611417565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b8060045f8282546106199190611cf4565b925050819055505f82600201819055507f67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19856040516106589190611721565b60405180910390a1809350505050919050565b600b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b61069c6114a4565b6106a55f61152b565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612a3081565b60045481565b6107096114a4565b815f8111801561071a575060025481105b610759576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075090611b4b565b60405180910390fd5b5f821161079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611d97565b60405180910390fd5b5f60015f8581526020019081526020015f209050805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166107e161141e565b6bffffffffffffffffffffffff161115610830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082790611dff565b60405180910390fd5b8060010154831115610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90611e67565b60405180910390fd5b6108cd610882611417565b82600101547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b82816001015f8282546108e09190611cf4565b925050819055507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c8484604051610918929190611a9f565b60405180910390a150505050565b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60016002546109609190611cf4565b905090565b61096d6114a4565b5f5f90505f5f90505b83839050811015610b0b5760025484848381811061099757610996611e85565b5b90506020020135106109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d590611b4b565b60405180910390fd5b5f60015f8686858181106109f5576109f4611e85565b5b9050602002013581526020019081526020015f209050805f0160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16610a3d61141e565b6bffffffffffffffffffffffff161115610a8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8390611dff565b60405180910390fd5b806001015483610a9c9190611eb2565b92505f81600101819055507f03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c858584818110610adb57610ada611e85565b5b905060200201358260010154604051610af5929190611a9f565b60405180910390a1508080600101915050610976565b505f8111610b4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4590611f2f565b60405180910390fd5b610ba0610b59611417565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b505050565b5f8111610be7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bde90611d97565b60405180910390fd5b610c3b610bf2611417565b30837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115ec909392919063ffffffff16565b7fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d81604051610c6a9190611721565b60405180910390a150565b5f5f5f5f845f81118015610c8a575060025481105b610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611b4b565b60405180910390fd5b60015f8781526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f8881526020019081526020015f205f0160149054906101000a90046bffffffffffffffffffffffff1660015f8981526020019081526020015f206001015460015f8a81526020019081526020015f2060020154826bffffffffffffffffffffffff1692509450945094509450509193509193565b5f5f670de0b6b3a764000090505f83600354610d8f9190611eb2565b90505f6969e10de76676d0800000600354610daa9190611f7a565b90505f6969e10de76676d080000083610dc39190611f7a565b9050808203610def57600b82610dd99190611eb2565b86610de49190611f7a565b945050505050610f1a565b5f600b83610dfd9190611eb2565b6003546969e10de76676d0800000600186610e189190611eb2565b610e229190611faa565b610e2c9190611cf4565b86610e379190611faa565b610e419190611f7a565b90505f600b83610e519190611eb2565b6969e10de76676d080000084610e679190611faa565b86610e729190611cf4565b87610e7d9190611faa565b610e879190611f7a565b90505f5f90505f600186610e9b9190611eb2565b90505b84811015610eed57600b81610eb39190611eb2565b6969e10de76676d080000089610ec99190611faa565b610ed39190611f7a565b82610ede9190611eb2565b91508080600101915050610e9e565b5086828285610efc9190611eb2565b610f069190611eb2565b610f109190611f7a565b9750505050505050505b919050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b610f4e6114a4565b60045481610f5c9190611eb2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fb5919061184a565b602060405180830381865afa158015610fd0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff49190611fff565b1015611035576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102c90611e67565b60405180910390fd5b61108082827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166114259092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337826040516110c69190611721565b60405180910390a25050565b5f5f5f8311611116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110d9061209a565b60405180910390fd5b612a306bffffffffffffffffffffffff16846bffffffffffffffffffffffff161015611177576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116e90612102565b60405180910390fd5b6111cb611182611417565b30857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166115ec909392919063ffffffff16565b5f846111d561141e565b6111df9190612120565b90505f6111eb85610d73565b90505f60025490506040518060800160405280611206611417565b73ffffffffffffffffffffffffffffffffffffffff168152602001846bffffffffffffffffffffffff1681526020018781526020018381525060015f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555060408201518160010155606082015181600201559050508560035f8282546112f29190611eb2565b925050819055508160045f82825461130a9190611eb2565b92505081905550611319611417565b73ffffffffffffffffffffffffffffffffffffffff167f24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f4714682858986604051611364949392919061215f565b60405180910390a260025f81548092919061137e906121a2565b91905055508082945094505050509250929050565b61139b6114a4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361140b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611402919061184a565b60405180910390fd5b6114148161152b565b50565b5f33905090565b5f42905090565b61149f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016114589291906121e9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061166e565b505050565b6114ac611417565b73ffffffffffffffffffffffffffffffffffffffff166114ca6106ce565b73ffffffffffffffffffffffffffffffffffffffff1614611529576114ed611417565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611520919061184a565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611668848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161162193929190612210565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061166e565b50505050565b5f5f60205f8451602086015f885af18061168d576040513d5f823e3d81fd5b3d92505f519150505f82146116a65760018114156116c1565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561170357836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016116fa919061184a565b60405180910390fd5b50505050565b5f819050919050565b61171b81611709565b82525050565b5f6020820190506117345f830184611712565b92915050565b5f5ffd5b5f5ffd5b61174b81611709565b8114611755575f5ffd5b50565b5f8135905061176681611742565b92915050565b5f602082840312156117815761178061173a565b5b5f61178e84828501611758565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6117d96117d46117cf84611797565b6117b6565b611797565b9050919050565b5f6117ea826117bf565b9050919050565b5f6117fb826117e0565b9050919050565b61180b816117f1565b82525050565b5f6020820190506118245f830184611802565b92915050565b5f61183482611797565b9050919050565b6118448161182a565b82525050565b5f60208201905061185d5f83018461183b565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b61188381611863565b82525050565b5f60208201905061189c5f83018461187a565b92915050565b5f5f604083850312156118b8576118b761173a565b5b5f6118c585828601611758565b92505060206118d685828601611758565b9150509250929050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611901576119006118e0565b5b8235905067ffffffffffffffff81111561191e5761191d6118e4565b5b60208301915083602082028301111561193a576119396118e8565b5b9250929050565b5f5f602083850312156119575761195661173a565b5b5f83013567ffffffffffffffff8111156119745761197361173e565b5b611980858286016118ec565b92509250509250929050565b5f60808201905061199f5f83018761183b565b6119ac6020830186611712565b6119b96040830185611712565b6119c66060830184611712565b95945050505050565b6119d88161182a565b81146119e2575f5ffd5b50565b5f813590506119f3816119cf565b92915050565b5f5f60408385031215611a0f57611a0e61173a565b5b5f611a1c858286016119e5565b9250506020611a2d85828601611758565b9150509250929050565b611a4081611863565b8114611a4a575f5ffd5b50565b5f81359050611a5b81611a37565b92915050565b5f5f60408385031215611a7757611a7661173a565b5b5f611a8485828601611a4d565b9250506020611a9585828601611758565b9150509250929050565b5f604082019050611ab25f830185611712565b611abf6020830184611712565b9392505050565b5f60208284031215611adb57611ada61173a565b5b5f611ae8848285016119e5565b91505092915050565b5f82825260208201905092915050565b7f4d6f64756c65583a496e76616c6964205374616b6520494421000000000000005f82015250565b5f611b35601983611af1565b9150611b4082611b01565b602082019050919050565b5f6020820190508181035f830152611b6281611b29565b9050919050565b7f4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572005f82015250565b5f611b9d601f83611af1565b9150611ba882611b69565b602082019050919050565b5f6020820190508181035f830152611bca81611b91565b9050919050565b7f4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74205f8201527f7065726d69747465642100000000000000000000000000000000000000000000602082015250565b5f611c2b602a83611af1565b9150611c3682611bd1565b604082019050919050565b5f6020820190508181035f830152611c5881611c1f565b9050919050565b7f4d6f64756c65583a4e6f7468696e6720746f20636c61696d00000000000000005f82015250565b5f611c93601883611af1565b9150611c9e82611c5f565b602082019050919050565b5f6020820190508181035f830152611cc081611c87565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611cfe82611709565b9150611d0983611709565b9250828203905081811115611d2157611d20611cc7565b5b92915050565b7f4d6f64756c65583a616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f210000000000000000000000000000000000000000000000602082015250565b5f611d81602983611af1565b9150611d8c82611d27565b604082019050919050565b5f6020820190508181035f830152611dae81611d75565b9050919050565b7f4d6f64756c65583a4275726e7420746f6b656e732100000000000000000000005f82015250565b5f611de9601583611af1565b9150611df482611db5565b602082019050919050565b5f6020820190508181035f830152611e1681611ddd565b9050919050565b7f4d6f64756c65583a496e73756666696369656e742062616c616e6365210000005f82015250565b5f611e51601d83611af1565b9150611e5c82611e1d565b602082019050919050565b5f6020820190508181035f830152611e7e81611e45565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611ebc82611709565b9150611ec783611709565b9250828201905080821115611edf57611ede611cc7565b5b92915050565b7f4d6f64756c65583a546f74616c20616d6f756e742069732030210000000000005f82015250565b5f611f19601a83611af1565b9150611f2482611ee5565b602082019050919050565b5f6020820190508181035f830152611f4681611f0d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f8482611709565b9150611f8f83611709565b925082611f9f57611f9e611f4d565b5b828204905092915050565b5f611fb482611709565b9150611fbf83611709565b9250828202611fcd81611709565b91508282048414831517611fe457611fe3611cc7565b5b5092915050565b5f81519050611ff981611742565b92915050565b5f602082840312156120145761201361173a565b5b5f61202184828501611feb565b91505092915050565b7f4d6f64756c65583a5374616b6520616d6f756e74206d757374206265206772655f8201527f61746572207468616e2030210000000000000000000000000000000000000000602082015250565b5f612084602c83611af1565b915061208f8261202a565b604082019050919050565b5f6020820190508181035f8301526120b181612078565b9050919050565b7f4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421005f82015250565b5f6120ec601f83611af1565b91506120f7826120b8565b602082019050919050565b5f6020820190508181035f830152612119816120e0565b9050919050565b5f61212a82611863565b915061213583611863565b925082820190506bffffffffffffffffffffffff81111561215957612158611cc7565b5b92915050565b5f6080820190506121725f830187611712565b61217f602083018661187a565b61218c6040830185611712565b6121996060830184611712565b95945050505050565b5f6121ac82611709565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121de576121dd611cc7565b5b600182019050919050565b5f6040820190506121fc5f83018561183b565b6122096020830184611712565b9392505050565b5f6060820190506122235f83018661183b565b612230602083018561183b565b61223d6040830184611712565b94935050505056fea2646970667358221220db767b669f7098c30ca8f7e063cf626ddb2c456dac7743f8d6e611af584578aa64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF7568DD GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCE325BF8 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCE325BF8 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xD46149A2 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xD6EF7AF0 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xD93C04A0 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xAF7568DD EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xB109BEEC EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xB5FA91FE EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xBC854352 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xBECEED39 EQ PUSH2 0x2D7 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7C2FDEB5 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x7C2FDEB5 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8E12C0CD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x8F4729B7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xAC00500F EQ PUSH2 0x245 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x109CF399 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x3FA352F5 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x141 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x694 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0x6CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x701 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xBA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x198C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST STOP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x3FD JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x433 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH2 0x458 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x519 PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A5 SWAP1 PUSH2 0x1CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0x608 PUSH2 0x5C1 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19 DUP6 PUSH1 0x40 MLOAD PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x69C PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x6A5 PUSH0 PUSH2 0x152B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2A30 DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x709 PUSH2 0x14A4 JUMP JUMPDEST DUP2 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x71A JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x750 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7E1 PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86E SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CD PUSH2 0x882 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x960 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x96D PUSH2 0x14A4 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x2 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x9F5 JUMPI PUSH2 0x9F4 PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA3D PUSH2 0x141E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP1 PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP PUSH0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xADB JUMPI PUSH2 0xADA PUSH2 0x1E85 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xAF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x976 JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0xB4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA0 PUSH2 0xB59 PUSH2 0x1417 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDE SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3B PUSH2 0xBF2 PUSH2 0x1417 JUMP JUMPDEST ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP2 PUSH1 0x40 MLOAD PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0xC8A JUMPI POP PUSH1 0x2 SLOAD DUP2 LT JUMPDEST PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH0 DUP4 PUSH1 0x3 SLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 PUSH1 0x3 SLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH10 0x69E10DE76676D0800000 DUP4 PUSH2 0xDC3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP DUP1 DUP3 SUB PUSH2 0xDEF JUMPI PUSH1 0xB DUP3 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST DUP7 PUSH2 0xDE4 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0xF1A JUMP JUMPDEST PUSH0 PUSH1 0xB DUP4 PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH10 0x69E10DE76676D0800000 PUSH1 0x1 DUP7 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST DUP7 PUSH2 0xE37 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE41 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB DUP4 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP5 PUSH2 0xE67 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST DUP7 PUSH2 0xE72 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST DUP8 PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH1 0x1 DUP7 PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xEED JUMPI PUSH1 0xB DUP2 PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH10 0x69E10DE76676D0800000 DUP10 PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0xED3 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST DUP3 PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE9E JUMP JUMPDEST POP DUP7 DUP3 DUP3 DUP6 PUSH2 0xEFC SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xF06 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xF10 SWAP2 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF4E PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH2 0xF5C SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB5 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFD0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST LT ISZERO PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102C SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1080 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1425 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 GT PUSH2 0x1116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110D SWAP1 PUSH2 0x209A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A30 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116E SWAP1 PUSH2 0x2102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CB PUSH2 0x1182 PUSH2 0x1417 JUMP JUMPDEST ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15EC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x11D5 PUSH2 0x141E JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x11EB DUP6 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1206 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP6 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1319 PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146 DUP3 DUP6 DUP10 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1364 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x137E SWAP1 PUSH2 0x21A2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP3 SWAP5 POP SWAP5 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x139B PUSH2 0x14A4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1414 DUP2 PUSH2 0x152B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x149F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1458 SWAP3 SWAP2 SWAP1 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x14AC PUSH2 0x1417 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14CA PUSH2 0x6CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1529 JUMPI PUSH2 0x14ED PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1668 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1621 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x166E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x168D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x16A6 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x16C1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1703 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171B DUP2 PUSH2 0x1709 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1734 PUSH0 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1709 JUMP JUMPDEST DUP2 EQ PUSH2 0x1755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1766 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1781 JUMPI PUSH2 0x1780 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178E DUP5 DUP3 DUP6 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17D9 PUSH2 0x17D4 PUSH2 0x17CF DUP5 PUSH2 0x1797 JUMP JUMPDEST PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17EA DUP3 PUSH2 0x17BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB DUP3 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1824 PUSH0 DUP4 ADD DUP5 PUSH2 0x1802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1834 DUP3 PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1844 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185D PUSH0 DUP4 ADD DUP5 PUSH2 0x183B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B8 JUMPI PUSH2 0x18B7 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18D6 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1901 JUMPI PUSH2 0x1900 PUSH2 0x18E0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x191E JUMPI PUSH2 0x191D PUSH2 0x18E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH2 0x1956 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1974 JUMPI PUSH2 0x1973 PUSH2 0x173E JUMP JUMPDEST JUMPDEST PUSH2 0x1980 DUP6 DUP3 DUP7 ADD PUSH2 0x18EC JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x199F PUSH0 DUP4 ADD DUP8 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x19AC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x19B9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x19C6 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP2 EQ PUSH2 0x19E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19F3 DUP2 PUSH2 0x19CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0F JUMPI PUSH2 0x1A0E PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1C DUP6 DUP3 DUP7 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A2D DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A40 DUP2 PUSH2 0x1863 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A5B DUP2 PUSH2 0x1A37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1A76 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A84 DUP6 DUP3 DUP7 ADD PUSH2 0x1A4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A95 DUP6 DUP3 DUP7 ADD PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AB2 PUSH0 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1ABF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE8 DUP5 DUP3 DUP6 ADD PUSH2 0x19E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A496E76616C6964205374616B652049442100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B35 PUSH1 0x19 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B40 DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B62 DUP2 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B9D PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA8 DUP3 PUSH2 0x1B69 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BCA DUP2 PUSH2 0x1B91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x7065726D69747465642100000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2B PUSH1 0x2A DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C36 DUP3 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C58 DUP2 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 PUSH1 0x18 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP3 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 PUSH2 0x1C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CFE DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D09 DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F210000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D81 PUSH1 0x29 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8C DUP3 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAE DUP2 PUSH2 0x1D75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE9 PUSH1 0x15 DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF4 DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E16 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A496E73756666696369656E742062616C616E636521000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E51 PUSH1 0x1D DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5C DUP3 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E7E DUP2 PUSH2 0x1E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EBC DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC7 DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F19 PUSH1 0x1A DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F24 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F46 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F84 DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8F DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FB4 DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBF DUP4 PUSH2 0x1709 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FCD DUP2 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FE4 JUMPI PUSH2 0x1FE3 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2014 JUMPI PUSH2 0x2013 PUSH2 0x173A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2021 DUP5 DUP3 DUP6 ADD PUSH2 0x1FEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265 PUSH0 DUP3 ADD MSTORE PUSH32 0x61746572207468616E2030210000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2084 PUSH1 0x2C DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x208F DUP3 PUSH2 0x202A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B1 DUP2 PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EC PUSH1 0x1F DUP4 PUSH2 0x1AF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F7 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2119 DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x212A DUP3 PUSH2 0x1863 JUMP JUMPDEST SWAP2 POP PUSH2 0x2135 DUP4 PUSH2 0x1863 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2172 PUSH0 DUP4 ADD DUP8 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x217F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x218C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x2199 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AC DUP3 PUSH2 0x1709 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x1CC7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21FC PUSH0 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x2209 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2223 PUSH0 DUP4 ADD DUP7 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x2230 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183B JUMP JUMPDEST PUSH2 0x223D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1712 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB PUSH23 0x7B669F7098C30CA8F7E063CF626DDB2C456DAC7743F8D6 DUPN 0x11 0xAF PC GASLIMIT PUSH25 0xAA64736F6C634300081D003300000000000000000000000000 ",
							"sourceMap": "278:6624:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4410:669;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1818:105:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:45:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1018:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5087:556;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;983:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;796:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1931:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5651:712;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6371:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2040:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2554:900;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1707:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6617:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3462:940;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;616:58:8;659:15;616:58;:::o;4410:669::-;4482:4;4464:8;1440:1;1429:8;:12;:39;;;;;1456:12;;1445:8;:23;1429:39;1421:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4504:28:::1;4535:6;:16;4542:8;4535:16;;;;;;;;;;;4504:47;;4587:12;:10;:12::i;:::-;4570:29;;:7;:13;;;;;;;;;;;;:29;;;4562:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4668:7;:16;;;;;;;;;;;;4654:30;;:10;:8;:10::i;:::-;:30;;;;4646:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4775:1;4751:7;:21;;;:25;4743:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4816:18;4837:7;:21;;;4816:42;;4869:48;4889:12;:10;:12::i;:::-;4903:13;4869:6;:19;;;;:48;;;;;:::i;:::-;4953:13;4933:16;;:33;;;;;;;:::i;:::-;;;;;;;;5001:1;4977:7;:21;;:25;;;;5019:20;5030:8;5019:20;;;;;;:::i;:::-;;;;;;;;5058:13;5051:20;;;;4410:669:::0;;;;:::o;573:36::-;607:2;573:36;:::o;704:29::-;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1818:105:8:-;1868:7;1908:6;1893:22;;1818:105;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;508:45:8:-;542:11;508:45;:::o;1018:32::-;;;;:::o;5087:556::-;1531:13:0;:11;:13::i;:::-;5172:8:8::1;1440:1;1429:8;:12;:39;;;;;1456:12;;1445:8;:23;1429:39;1421:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5216:1:::2;5207:6;:10;5198:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5274:28;5305:6;:16;5312:8;5305:16;;;;;;;;;;;5274:47;;5354:7;:16;;;;;;;;;;;;5340:30;;:10;:8;:10::i;:::-;:30;;;;5332:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5426:7;:20;;;5416:6;:30;;5408:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5492:54;5511:12;:10;:12::i;:::-;5525:7;:20;;;5492:5;:18;;;;:54;;;;;:::i;:::-;5581:6;5557:7;:20;;;:30;;;;;;;:::i;:::-;;;;;;;;5603:32;5618:8;5628:6;5603:32;;;;;;;:::i;:::-;;;;;;;;5187:456;1554:1:0::1;5087:556:8::0;;:::o;983:28::-;;;;:::o;796:30::-;;;:::o;1931:101::-;1979:4;2023:1;2008:12;;:16;;;;:::i;:::-;2001:23;;1931:101;:::o;5651:712::-;1531:13:0;:11;:13::i;:::-;5741:17:8::1;5761:1;5741:21;;5777:6;5786:1;5777:10;;5773:459;5793:9;;:16;;5789:1;:20;5773:459;;;5863:12;;5848:9;;5858:1;5848:12;;;;;;;:::i;:::-;;;;;;;;:27;5840:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5920:28;5951:6;:20;5958:9;;5968:1;5958:12;;;;;;;:::i;:::-;;;;;;;;5951:20;;;;;;;;;;;5920:51;;6008:7;:16;;;;;;;;;;;;5994:30;;:10;:8;:10::i;:::-;:30;;;;5986:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6081:7;:20;;;6065:36;;;;;:::i;:::-;;;6139:1;6116:7;:20;;:24;;;;6170:50;6185:9;;6195:1;6185:12;;;;;;;:::i;:::-;;;;;;;;6199:7;:20;;;6170:50;;;;;;;:::i;:::-;;;;;;;;5825:407;5811:3;;;;;;;5773:459;;;;6265:1;6250:12;:16;6242:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;6309:46;6328:12;:10;:12::i;:::-;6342;6309:5;:18;;;;:46;;;;;:::i;:::-;5730:633;5651:712:::0;;:::o;6371:238::-;6448:1;6439:6;:10;6430:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6506:60;6530:12;:10;:12::i;:::-;6552:4;6559:6;6506;:23;;;;:60;;;;;;:::i;:::-;6582:19;6594:6;6582:19;;;;;;:::i;:::-;;;;;;;;6371:238;:::o;2040:395::-;2141:13;2165;2189:17;2217:18;2097:8;1440:1;1429:8;:12;:39;;;;;1456:12;;1445:8;:23;1429:39;1421:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2275:6:::1;:16;2282:8;2275:16;;;;;;;;;;;:22;;;;;;;;;;;;2312:6;:16;2319:8;2312:16;;;;;;;;;;;:25;;;;;;;;;;;;2352:6;:16;2359:8;2352:16;;;;;;;;;;;:29;;;2396:6;:16;2403:8;2396:16;;;;;;;;;;;:30;;;2253:174;;;;;;;;;;;;;2040:395:::0;;;;;;:::o;2554:900::-;2618:4;2641:17;2661:4;2641:24;;2676:15;2709:12;2694;;:27;;;;:::i;:::-;2676:45;;2732:10;659:15;2745:12;;:32;;;;:::i;:::-;2732:45;;2788:11;659:15;2802:10;:30;;;;:::i;:::-;2788:44;;2855:6;2846:5;:15;2843:604;;607:2;2908:5;:18;;;;:::i;:::-;2894:12;:33;;;;:::i;:::-;2887:40;;;;;;;;2843:604;2979:10;607:2;3055:5;:18;;;;:::i;:::-;3040:12;;659:15;3015:1;3007:5;:9;;;;:::i;:::-;3006:31;;;;:::i;:::-;:46;;;;:::i;:::-;2992:12;:61;;;;:::i;:::-;:82;;;;:::i;:::-;2979:95;;3089:11;607:2;3159:6;:19;;;;:::i;:::-;659:15;3130:6;:26;;;;:::i;:::-;3117:10;:39;;;;:::i;:::-;3103:12;:54;;;;:::i;:::-;:76;;;;:::i;:::-;3089:90;;3194:13;3210:1;3194:17;;3230:6;3245:1;3237:5;:9;;;;:::i;:::-;3230:16;;3226:148;3252:6;3248:1;:10;3226:148;;;607:2;3343:1;:14;;;;:::i;:::-;659:15;3309:12;:32;;;;:::i;:::-;:49;;;;:::i;:::-;3297:61;;;;;:::i;:::-;;;3260:3;;;;;;;3226:148;;;;3423:12;3415:6;3404:8;3396:5;:16;;;;:::i;:::-;:25;;;;:::i;:::-;3395:40;;;;:::i;:::-;3388:47;;;;;;;;;2554:900;;;;:::o;1707:103::-;1756:7;1796:5;1781:21;;1707:103;:::o;6617:280::-;1531:13:0;:11;:13::i;:::-;6754:16:8::1;;6745:6;:25;;;;:::i;:::-;6710:6;:16;;;6735:4;6710:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;6702:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;6815:31;6835:2;6839:6;6815;:19;;;;:31;;;;;:::i;:::-;6878:2;6862:27;;;6882:6;6862:27;;;;;;:::i;:::-;;;;;;;;6617:280:::0;;:::o;3462:940::-;3533:4;3539;3584:1;3569:12;:16;3561:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;542:11;3653:23;;:11;:23;;;;3645:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3723:65;3746:12;:10;:12::i;:::-;3768:4;3775:12;3723:5;:22;;;;:65;;;;;;:::i;:::-;3800:15;3831:11;3818:10;:8;:10::i;:::-;:24;;;;:::i;:::-;3800:42;;3853:18;3874:29;3890:12;3874:15;:29::i;:::-;3853:50;;3914:13;3930:12;;3914:28;;3972:176;;;;;;;;4007:12;:10;:12::i;:::-;3972:176;;;;;;4044:8;3972:176;;;;;;4081:12;3972:176;;;;4123:13;3972:176;;;3953:6;:16;3960:8;3953:16;;;;;;;;;;;:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4185:12;4169;;:28;;;;;;;:::i;:::-;;;;;;;;4229:13;4209:16;;:33;;;;;;;:::i;:::-;;;;;;;;4265:12;:10;:12::i;:::-;4258:69;;;4279:8;4289;4299:12;4313:13;4258:69;;;;;;;;;:::i;:::-;;;;;;;;4338:12;;:14;;;;;;;;;:::i;:::-;;;;;;4370:8;4380:13;4363:31;;;;;;;3462:940;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;2443:103:8:-;2484:6;2522:15;2508:30;;2443:103;:::o;1219:160:5:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:250::-;2273:4;2311:2;2300:9;2296:18;2288:26;;2324:85;2406:1;2395:9;2391:17;2382:6;2324:85;:::i;:::-;2166:250;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:109::-;2912:7;2952:26;2945:5;2941:38;2930:49;;2876:109;;;:::o;2991:115::-;3076:23;3093:5;3076:23;:::i;:::-;3071:3;3064:36;2991:115;;:::o;3112:218::-;3203:4;3241:2;3230:9;3226:18;3218:26;;3254:69;3320:1;3309:9;3305:17;3296:6;3254:69;:::i;:::-;3112:218;;;;:::o;3336:474::-;3404:6;3412;3461:2;3449:9;3440:7;3436:23;3432:32;3429:119;;;3467:79;;:::i;:::-;3429:119;3587:1;3612:53;3657:7;3648:6;3637:9;3633:22;3612:53;:::i;:::-;3602:63;;3558:117;3714:2;3740:53;3785:7;3776:6;3765:9;3761:22;3740:53;:::i;:::-;3730:63;;3685:118;3336:474;;;;;:::o;3816:117::-;3925:1;3922;3915:12;3939:117;4048:1;4045;4038:12;4062:117;4171:1;4168;4161:12;4202:568;4275:8;4285:6;4335:3;4328:4;4320:6;4316:17;4312:27;4302:122;;4343:79;;:::i;:::-;4302:122;4456:6;4443:20;4433:30;;4486:18;4478:6;4475:30;4472:117;;;4508:79;;:::i;:::-;4472:117;4622:4;4614:6;4610:17;4598:29;;4676:3;4668:4;4660:6;4656:17;4646:8;4642:32;4639:41;4636:128;;;4683:79;;:::i;:::-;4636:128;4202:568;;;;;:::o;4776:559::-;4862:6;4870;4919:2;4907:9;4898:7;4894:23;4890:32;4887:119;;;4925:79;;:::i;:::-;4887:119;5073:1;5062:9;5058:17;5045:31;5103:18;5095:6;5092:30;5089:117;;;5125:79;;:::i;:::-;5089:117;5238:80;5310:7;5301:6;5290:9;5286:22;5238:80;:::i;:::-;5220:98;;;;5016:312;4776:559;;;;;:::o;5341:553::-;5518:4;5556:3;5545:9;5541:19;5533:27;;5570:71;5638:1;5627:9;5623:17;5614:6;5570:71;:::i;:::-;5651:72;5719:2;5708:9;5704:18;5695:6;5651:72;:::i;:::-;5733;5801:2;5790:9;5786:18;5777:6;5733:72;:::i;:::-;5815;5883:2;5872:9;5868:18;5859:6;5815:72;:::i;:::-;5341:553;;;;;;;:::o;5900:122::-;5973:24;5991:5;5973:24;:::i;:::-;5966:5;5963:35;5953:63;;6012:1;6009;6002:12;5953:63;5900:122;:::o;6028:139::-;6074:5;6112:6;6099:20;6090:29;;6128:33;6155:5;6128:33;:::i;:::-;6028:139;;;;:::o;6173:474::-;6241:6;6249;6298:2;6286:9;6277:7;6273:23;6269:32;6266:119;;;6304:79;;:::i;:::-;6266:119;6424:1;6449:53;6494:7;6485:6;6474:9;6470:22;6449:53;:::i;:::-;6439:63;;6395:117;6551:2;6577:53;6622:7;6613:6;6602:9;6598:22;6577:53;:::i;:::-;6567:63;;6522:118;6173:474;;;;;:::o;6653:120::-;6725:23;6742:5;6725:23;:::i;:::-;6718:5;6715:34;6705:62;;6763:1;6760;6753:12;6705:62;6653:120;:::o;6779:137::-;6824:5;6862:6;6849:20;6840:29;;6878:32;6904:5;6878:32;:::i;:::-;6779:137;;;;:::o;6922:472::-;6989:6;6997;7046:2;7034:9;7025:7;7021:23;7017:32;7014:119;;;7052:79;;:::i;:::-;7014:119;7172:1;7197:52;7241:7;7232:6;7221:9;7217:22;7197:52;:::i;:::-;7187:62;;7143:116;7298:2;7324:53;7369:7;7360:6;7349:9;7345:22;7324:53;:::i;:::-;7314:63;;7269:118;6922:472;;;;;:::o;7400:332::-;7521:4;7559:2;7548:9;7544:18;7536:26;;7572:71;7640:1;7629:9;7625:17;7616:6;7572:71;:::i;:::-;7653:72;7721:2;7710:9;7706:18;7697:6;7653:72;:::i;:::-;7400:332;;;;;:::o;7738:329::-;7797:6;7846:2;7834:9;7825:7;7821:23;7817:32;7814:119;;;7852:79;;:::i;:::-;7814:119;7972:1;7997:53;8042:7;8033:6;8022:9;8018:22;7997:53;:::i;:::-;7987:63;;7943:117;7738:329;;;;:::o;8073:169::-;8157:11;8191:6;8186:3;8179:19;8231:4;8226:3;8222:14;8207:29;;8073:169;;;;:::o;8248:175::-;8388:27;8384:1;8376:6;8372:14;8365:51;8248:175;:::o;8429:366::-;8571:3;8592:67;8656:2;8651:3;8592:67;:::i;:::-;8585:74;;8668:93;8757:3;8668:93;:::i;:::-;8786:2;8781:3;8777:12;8770:19;;8429:366;;;:::o;8801:419::-;8967:4;9005:2;8994:9;8990:18;8982:26;;9054:9;9048:4;9044:20;9040:1;9029:9;9025:17;9018:47;9082:131;9208:4;9082:131;:::i;:::-;9074:139;;8801:419;;;:::o;9226:181::-;9366:33;9362:1;9354:6;9350:14;9343:57;9226:181;:::o;9413:366::-;9555:3;9576:67;9640:2;9635:3;9576:67;:::i;:::-;9569:74;;9652:93;9741:3;9652:93;:::i;:::-;9770:2;9765:3;9761:12;9754:19;;9413:366;;;:::o;9785:419::-;9951:4;9989:2;9978:9;9974:18;9966:26;;10038:9;10032:4;10028:20;10024:1;10013:9;10009:17;10002:47;10066:131;10192:4;10066:131;:::i;:::-;10058:139;;9785:419;;;:::o;10210:229::-;10350:34;10346:1;10338:6;10334:14;10327:58;10419:12;10414:2;10406:6;10402:15;10395:37;10210:229;:::o;10445:366::-;10587:3;10608:67;10672:2;10667:3;10608:67;:::i;:::-;10601:74;;10684:93;10773:3;10684:93;:::i;:::-;10802:2;10797:3;10793:12;10786:19;;10445:366;;;:::o;10817:419::-;10983:4;11021:2;11010:9;11006:18;10998:26;;11070:9;11064:4;11060:20;11056:1;11045:9;11041:17;11034:47;11098:131;11224:4;11098:131;:::i;:::-;11090:139;;10817:419;;;:::o;11242:174::-;11382:26;11378:1;11370:6;11366:14;11359:50;11242:174;:::o;11422:366::-;11564:3;11585:67;11649:2;11644:3;11585:67;:::i;:::-;11578:74;;11661:93;11750:3;11661:93;:::i;:::-;11779:2;11774:3;11770:12;11763:19;;11422:366;;;:::o;11794:419::-;11960:4;11998:2;11987:9;11983:18;11975:26;;12047:9;12041:4;12037:20;12033:1;12022:9;12018:17;12011:47;12075:131;12201:4;12075:131;:::i;:::-;12067:139;;11794:419;;;:::o;12219:180::-;12267:77;12264:1;12257:88;12364:4;12361:1;12354:15;12388:4;12385:1;12378:15;12405:194;12445:4;12465:20;12483:1;12465:20;:::i;:::-;12460:25;;12499:20;12517:1;12499:20;:::i;:::-;12494:25;;12543:1;12540;12536:9;12528:17;;12567:1;12561:4;12558:11;12555:37;;;12572:18;;:::i;:::-;12555:37;12405:194;;;;:::o;12605:228::-;12745:34;12741:1;12733:6;12729:14;12722:58;12814:11;12809:2;12801:6;12797:15;12790:36;12605:228;:::o;12839:366::-;12981:3;13002:67;13066:2;13061:3;13002:67;:::i;:::-;12995:74;;13078:93;13167:3;13078:93;:::i;:::-;13196:2;13191:3;13187:12;13180:19;;12839:366;;;:::o;13211:419::-;13377:4;13415:2;13404:9;13400:18;13392:26;;13464:9;13458:4;13454:20;13450:1;13439:9;13435:17;13428:47;13492:131;13618:4;13492:131;:::i;:::-;13484:139;;13211:419;;;:::o;13636:171::-;13776:23;13772:1;13764:6;13760:14;13753:47;13636:171;:::o;13813:366::-;13955:3;13976:67;14040:2;14035:3;13976:67;:::i;:::-;13969:74;;14052:93;14141:3;14052:93;:::i;:::-;14170:2;14165:3;14161:12;14154:19;;13813:366;;;:::o;14185:419::-;14351:4;14389:2;14378:9;14374:18;14366:26;;14438:9;14432:4;14428:20;14424:1;14413:9;14409:17;14402:47;14466:131;14592:4;14466:131;:::i;:::-;14458:139;;14185:419;;;:::o;14610:179::-;14750:31;14746:1;14738:6;14734:14;14727:55;14610:179;:::o;14795:366::-;14937:3;14958:67;15022:2;15017:3;14958:67;:::i;:::-;14951:74;;15034:93;15123:3;15034:93;:::i;:::-;15152:2;15147:3;15143:12;15136:19;;14795:366;;;:::o;15167:419::-;15333:4;15371:2;15360:9;15356:18;15348:26;;15420:9;15414:4;15410:20;15406:1;15395:9;15391:17;15384:47;15448:131;15574:4;15448:131;:::i;:::-;15440:139;;15167:419;;;:::o;15592:180::-;15640:77;15637:1;15630:88;15737:4;15734:1;15727:15;15761:4;15758:1;15751:15;15778:191;15818:3;15837:20;15855:1;15837:20;:::i;:::-;15832:25;;15871:20;15889:1;15871:20;:::i;:::-;15866:25;;15914:1;15911;15907:9;15900:16;;15935:3;15932:1;15929:10;15926:36;;;15942:18;;:::i;:::-;15926:36;15778:191;;;;:::o;15975:176::-;16115:28;16111:1;16103:6;16099:14;16092:52;15975:176;:::o;16157:366::-;16299:3;16320:67;16384:2;16379:3;16320:67;:::i;:::-;16313:74;;16396:93;16485:3;16396:93;:::i;:::-;16514:2;16509:3;16505:12;16498:19;;16157:366;;;:::o;16529:419::-;16695:4;16733:2;16722:9;16718:18;16710:26;;16782:9;16776:4;16772:20;16768:1;16757:9;16753:17;16746:47;16810:131;16936:4;16810:131;:::i;:::-;16802:139;;16529:419;;;:::o;16954:180::-;17002:77;16999:1;16992:88;17099:4;17096:1;17089:15;17123:4;17120:1;17113:15;17140:185;17180:1;17197:20;17215:1;17197:20;:::i;:::-;17192:25;;17231:20;17249:1;17231:20;:::i;:::-;17226:25;;17270:1;17260:35;;17275:18;;:::i;:::-;17260:35;17317:1;17314;17310:9;17305:14;;17140:185;;;;:::o;17331:410::-;17371:7;17394:20;17412:1;17394:20;:::i;:::-;17389:25;;17428:20;17446:1;17428:20;:::i;:::-;17423:25;;17483:1;17480;17476:9;17505:30;17523:11;17505:30;:::i;:::-;17494:41;;17684:1;17675:7;17671:15;17668:1;17665:22;17645:1;17638:9;17618:83;17595:139;;17714:18;;:::i;:::-;17595:139;17379:362;17331:410;;;;:::o;17747:143::-;17804:5;17835:6;17829:13;17820:22;;17851:33;17878:5;17851:33;:::i;:::-;17747:143;;;;:::o;17896:351::-;17966:6;18015:2;18003:9;17994:7;17990:23;17986:32;17983:119;;;18021:79;;:::i;:::-;17983:119;18141:1;18166:64;18222:7;18213:6;18202:9;18198:22;18166:64;:::i;:::-;18156:74;;18112:128;17896:351;;;;:::o;18253:231::-;18393:34;18389:1;18381:6;18377:14;18370:58;18462:14;18457:2;18449:6;18445:15;18438:39;18253:231;:::o;18490:366::-;18632:3;18653:67;18717:2;18712:3;18653:67;:::i;:::-;18646:74;;18729:93;18818:3;18729:93;:::i;:::-;18847:2;18842:3;18838:12;18831:19;;18490:366;;;:::o;18862:419::-;19028:4;19066:2;19055:9;19051:18;19043:26;;19115:9;19109:4;19105:20;19101:1;19090:9;19086:17;19079:47;19143:131;19269:4;19143:131;:::i;:::-;19135:139;;18862:419;;;:::o;19287:181::-;19427:33;19423:1;19415:6;19411:14;19404:57;19287:181;:::o;19474:366::-;19616:3;19637:67;19701:2;19696:3;19637:67;:::i;:::-;19630:74;;19713:93;19802:3;19713:93;:::i;:::-;19831:2;19826:3;19822:12;19815:19;;19474:366;;;:::o;19846:419::-;20012:4;20050:2;20039:9;20035:18;20027:26;;20099:9;20093:4;20089:20;20085:1;20074:9;20070:17;20063:47;20127:131;20253:4;20127:131;:::i;:::-;20119:139;;19846:419;;;:::o;20271:213::-;20310:3;20329:19;20346:1;20329:19;:::i;:::-;20324:24;;20362:19;20379:1;20362:19;:::i;:::-;20357:24;;20404:1;20401;20397:9;20390:16;;20427:26;20422:3;20419:35;20416:61;;;20457:18;;:::i;:::-;20416:61;20271:213;;;;:::o;20490:549::-;20665:4;20703:3;20692:9;20688:19;20680:27;;20717:71;20785:1;20774:9;20770:17;20761:6;20717:71;:::i;:::-;20798:70;20864:2;20853:9;20849:18;20840:6;20798:70;:::i;:::-;20878:72;20946:2;20935:9;20931:18;20922:6;20878:72;:::i;:::-;20960;21028:2;21017:9;21013:18;21004:6;20960:72;:::i;:::-;20490:549;;;;;;;:::o;21045:233::-;21084:3;21107:24;21125:5;21107:24;:::i;:::-;21098:33;;21153:66;21146:5;21143:77;21140:103;;21223:18;;:::i;:::-;21140:103;21270:1;21263:5;21259:13;21252:20;;21045:233;;;:::o;21284:332::-;21405:4;21443:2;21432:9;21428:18;21420:26;;21456:71;21524:1;21513:9;21509:17;21500:6;21456:71;:::i;:::-;21537:72;21605:2;21594:9;21590:18;21581:6;21537:72;:::i;:::-;21284:332;;;;;:::o;21622:442::-;21771:4;21809:2;21798:9;21794:18;21786:26;;21822:71;21890:1;21879:9;21875:17;21866:6;21822:71;:::i;:::-;21903:72;21971:2;21960:9;21956:18;21947:6;21903:72;:::i;:::-;21985;22053:2;22042:9;22038:18;22029:6;21985:72;:::i;:::-;21622:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1765400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"DIFFICULTY()": "393",
								"DIFFICULTY_INTERVAL()": "349",
								"MATURITY()": "398",
								"addRewards(uint256)": "infinite",
								"batchWithdrawCREDI(uint256[])": "infinite",
								"calculateReward(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"getCREDIAddress()": "infinite",
								"getStake(uint256)": "infinite",
								"getStakesCount()": "infinite",
								"getxCREDIAddress()": "infinite",
								"owner()": "2559",
								"pending_payments()": "2514",
								"renounceOwnership()": "infinite",
								"stake(uint96,uint256)": "infinite",
								"total_staked()": "2448",
								"transferOwnership(address)": "infinite",
								"withdrawCREDI(uint256,uint256)": "infinite",
								"withdrawRewards(address,uint256)": "infinite",
								"xCREDI()": "infinite"
							},
							"internal": {
								"time_now()": "21"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 975,
									"end": 976,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 947,
									"end": 976,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 947,
									"end": 976,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1010,
									"end": 1011,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 1011,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 983,
									"end": 1011,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1018,
									"end": 1050,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1526,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1589,
									"end": 1599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1589,
									"end": 1599,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1589,
									"end": 1599,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1601,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1635,
									"end": 1646,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1620,
									"end": 1647,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1674,
									"end": 1686,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1658,
									"end": 1687,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "863"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "860"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 278,
									"end": 6902,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db767b669f7098c30ca8f7e063cf626ddb2c456dac7743f8d6e611af584578aa64736f6c634300081d0033",
									".code": [
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "CE325BF8"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "D2D7231F"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "D46149A2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "D6EF7AF0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "D93C04A0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "AF7568DD"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "B109BEEC"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "B5FA91FE"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "BC854352"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "BECEED39"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "7C2FDEB5"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "8E12C0CD"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "8F4729B7"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "AC00500F"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "109CF399"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "3FA352F5"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "6DB08F25"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 6902,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 616,
											"end": 674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 4410,
											"end": 5079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4410,
											"end": 5079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 4410,
											"end": 5079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 573,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 573,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 704,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1818,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1818,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 508,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 508,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1018,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1018,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 5087,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5087,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 983,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 983,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 796,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1931,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1931,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 5651,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5651,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6371,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6371,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2040,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2040,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 2040,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2554,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2554,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2554,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1707,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1707,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 6617,
											"end": 6897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6617,
											"end": 6897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 3462,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3462,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 616,
											"end": 674,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 616,
											"end": 674,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4482,
											"end": 4486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1468,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1421,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4550,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4551,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4551,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4587,
											"end": 4597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4587,
											"end": 4599,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4599,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4587,
											"end": 4599,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4570,
											"end": 4599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4570,
											"end": 4583,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4570,
											"end": 4599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4599,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4562,
											"end": 4635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4562,
											"end": 4635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4668,
											"end": 4684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4654,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4654,
											"end": 4664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4654,
											"end": 4664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4684,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4646,
											"end": 4731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4646,
											"end": 4731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4775,
											"end": 4776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4751,
											"end": 4772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4776,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 4743,
											"end": 4805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4743,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4816,
											"end": 4834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4837,
											"end": 4858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4837,
											"end": 4858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4816,
											"end": 4858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4816,
											"end": 4858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4889,
											"end": 4901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4889,
											"end": 4899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4889,
											"end": 4901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4889,
											"end": 4901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 4889,
											"end": 4901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4916,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4875,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 4869,
											"end": 4888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4869,
											"end": 4888,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 4869,
											"end": 4888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 4869,
											"end": 4917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 4933,
											"end": 4966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4933,
											"end": 4966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4977,
											"end": 4998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5002,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 5002,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67BB155FCABB99400C32B640DC7704C8F18AAE4C817704C7267C5A8CD26DFC19"
										},
										{
											"begin": 5030,
											"end": 5038,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5019,
											"end": 5039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5019,
											"end": 5039,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5051,
											"end": 5071,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4410,
											"end": 5079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 573,
											"end": 609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 573,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 704,
											"end": 733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 704,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1868,
											"end": 1875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1914,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 553,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": 508,
											"end": 553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 508,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1018,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1441,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1456,
											"end": 1468,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1453,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1468,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1429,
											"end": 1468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1421,
											"end": 1498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1421,
											"end": 1498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5213,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5217,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5198,
											"end": 5263,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5198,
											"end": 5263,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5302,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5311,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5320,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5321,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5321,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5321,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5361,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5350,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5340,
											"end": 5348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5340,
											"end": 5350,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5350,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5340,
											"end": 5350,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5370,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5332,
											"end": 5396,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5332,
											"end": 5396,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5433,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5446,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5426,
											"end": 5446,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5426,
											"end": 5446,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5422,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5446,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5446,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 5408,
											"end": 5480,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5408,
											"end": 5480,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5511,
											"end": 5523,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5511,
											"end": 5521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5511,
											"end": 5523,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5511,
											"end": 5523,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 5511,
											"end": 5523,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5532,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5545,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5497,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 5492,
											"end": 5510,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5510,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 5492,
											"end": 5510,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5492,
											"end": 5546,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5581,
											"end": 5587,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5564,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5557,
											"end": 5577,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 5557,
											"end": 5587,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5557,
											"end": 5587,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 5618,
											"end": 5626,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5634,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5603,
											"end": 5635,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5603,
											"end": 5635,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5187,
											"end": 5643,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 983,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 796,
											"end": 826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 1983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2008,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2008,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5741,
											"end": 5762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5802,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5802,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5793,
											"end": 5809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5809,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 5863,
											"end": 5875,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5859,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5848,
											"end": 5860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5860,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5848,
											"end": 5875,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5840,
											"end": 5905,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5840,
											"end": 5905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5967,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5967,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5968,
											"end": 5969,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5958,
											"end": 5970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5970,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5971,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6008,
											"end": 6024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5994,
											"end": 6002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5994,
											"end": 6004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5994,
											"end": 6004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5994,
											"end": 6024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 5986,
											"end": 6050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 5986,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6081,
											"end": 6101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6101,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6065,
											"end": 6101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6116,
											"end": 6136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6140,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3A00E6132085CBC9EA18899CD135EF9CAD5D305D58506E08E7B1A9B96199A9C"
										},
										{
											"begin": 6185,
											"end": 6194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6194,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6196,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 6185,
											"end": 6197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6185,
											"end": 6197,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6206,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6199,
											"end": 6219,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6219,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6170,
											"end": 6220,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6170,
											"end": 6220,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5825,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5773,
											"end": 6232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6266,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 6242,
											"end": 6297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 6242,
											"end": 6297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6328,
											"end": 6340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6328,
											"end": 6338,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6328,
											"end": 6340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6328,
											"end": 6340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6342,
											"end": 6354,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6314,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 6309,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6309,
											"end": 6327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6309,
											"end": 6327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 6309,
											"end": 6355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 6363,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5651,
											"end": 6363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6448,
											"end": 6449,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 6430,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6530,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6530,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 6530,
											"end": 6542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6530,
											"end": 6542,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 6530,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6559,
											"end": 6565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6512,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6506,
											"end": 6529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 6506,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH",
											"source": 8,
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6582,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2105,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1441,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1453,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1445,
											"end": 1468,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1429,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1421,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1421,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2290,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2291,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2275,
											"end": 2297,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2328,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2368,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2381,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2352,
											"end": 2381,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2411,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2412,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2396,
											"end": 2426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2426,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2641,
											"end": 2665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2665,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2694,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2694,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2676,
											"end": 2721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2742,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2745,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2777,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 2802,
											"end": 2812,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2802,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2788,
											"end": 2832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2855,
											"end": 2861,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2843,
											"end": 3447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2908,
											"end": 2913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2908,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2894,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2894,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2887,
											"end": 2927,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 3447,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2843,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 2989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3055,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3007,
											"end": 3016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3006,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3006,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3006,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 3006,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2992,
											"end": 3053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2992,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2992,
											"end": 3074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2992,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 3074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2979,
											"end": 3074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3100,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3159,
											"end": 3165,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3159,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3159,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3130,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3130,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3127,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3117,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3117,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3115,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3103,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 3103,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3103,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3179,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3194,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3237,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3246,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3258,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 607,
											"end": 609,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3343,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3343,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 659,
											"end": 674,
											"name": "PUSH",
											"source": 8,
											"value": "69E10DE76676D0800000"
										},
										{
											"begin": 3309,
											"end": 3321,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 3309,
											"end": 3341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3309,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3309,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3309,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3297,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3297,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3423,
											"end": 3435,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3404,
											"end": 3412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3401,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3396,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 3396,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3396,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3395,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 3395,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 3454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1801,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 1781,
											"end": 1802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6754,
											"end": 6770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6754,
											"end": 6770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6745,
											"end": 6770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 6745,
											"end": 6770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6716,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 6710,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6726,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 6735,
											"end": 6739,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 6710,
											"end": 6741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 6710,
											"end": 6741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 6710,
											"end": 6741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6770,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6710,
											"end": 6770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 6702,
											"end": 6804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6702,
											"end": 6804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6835,
											"end": 6837,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6839,
											"end": 6845,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6821,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "863"
										},
										{
											"begin": 6815,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6815,
											"end": 6834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6815,
											"end": 6834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6815,
											"end": 6846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6878,
											"end": 6880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1D3EEE4CA001CFF39EEC6EC7615AACF2F2BD61791273830728BA00CCBD6E1337"
										},
										{
											"begin": 6882,
											"end": 6888,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6862,
											"end": 6889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6862,
											"end": 6889,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3581,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3585,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 3561,
											"end": 3634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 3561,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 542,
											"end": 553,
											"name": "PUSH",
											"source": 8,
											"value": "2A30"
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3645,
											"end": 3712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3645,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3746,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3746,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3772,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3787,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3728,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "860"
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3723,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3842,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3818,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3818,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3828,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3818,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3818,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3818,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3842,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3890,
											"end": 3902,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 3874,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3903,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3874,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3930,
											"end": 3942,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4052,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4093,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4123,
											"end": 4136,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 3968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 4148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4197,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4181,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4169,
											"end": 4181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4169,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4225,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4209,
											"end": 4225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4209,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4209,
											"end": 4242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4265,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4265,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH",
											"source": 8,
											"value": "24FE2D25C10EB2C67B5AC1E3EDBCADC94191E154ED388AD667A9480C44F47146"
										},
										{
											"begin": 4279,
											"end": 4287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4289,
											"end": 4297,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4299,
											"end": 4311,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4326,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4258,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4327,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4350,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4338,
											"end": 4350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4338,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4370,
											"end": 4378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4363,
											"end": 4394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2546,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2443,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 646,
											"end": 763,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 646,
											"end": 763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2324,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2324,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2985,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 2876,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2978,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2979,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2979,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2930,
											"end": 2979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3106,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2991,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3093,
											"end": 3098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 3076,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 3254,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 3254,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3436,
											"end": 3459,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3432,
											"end": 3464,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3548,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3429,
											"end": 3548,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 3467,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 3467,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3548,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3429,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3612,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3612,
											"end": 3665,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 3612,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3665,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3558,
											"end": 3675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3785,
											"end": 3792,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3774,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 3783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 3740,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3793,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 3740,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3803,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3816,
											"end": 3933,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 3816,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3939,
											"end": 4056,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 3939,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4050,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4062,
											"end": 4179,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4062,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4285,
											"end": 4291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4332,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4302,
											"end": 4424,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4343,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4343,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4424,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 4302,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4504,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4505,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4472,
											"end": 4589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4508,
											"end": 4587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 4508,
											"end": 4587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4587,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4508,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4589,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4472,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4622,
											"end": 4626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4673,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4654,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4680,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4764,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4636,
											"end": 4764,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4636,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4636,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4905,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4894,
											"end": 4917,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 4922,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4925,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5071,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5076,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5122,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5206,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5089,
											"end": 5206,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 5125,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5125,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5204,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 5125,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5206,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5089,
											"end": 5206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5310,
											"end": 5317,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5290,
											"end": 5299,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5238,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5318,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 5238,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5522,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5559,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5545,
											"end": 5554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5533,
											"end": 5560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5570,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5641,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5570,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5717,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5695,
											"end": 5701,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5651,
											"end": 5723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 5723,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5651,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 5801,
											"end": 5803,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5733,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5733,
											"end": 5805,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 5733,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5815,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5815,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 6022,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5900,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5991,
											"end": 5996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5973,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 5973,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5966,
											"end": 5971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5998,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5953,
											"end": 6016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6009,
											"end": 6010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6014,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 6016,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 5953,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 6022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5900,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6119,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6155,
											"end": 6160,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6128,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6161,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6128,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6241,
											"end": 6247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6300,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6286,
											"end": 6295,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6296,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6269,
											"end": 6301,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6385,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6266,
											"end": 6385,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6304,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6304,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6383,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6304,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6385,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 6266,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6424,
											"end": 6425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6449,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6494,
											"end": 6501,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6474,
											"end": 6483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6449,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6449,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6449,
											"end": 6502,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6449,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6395,
											"end": 6512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6577,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6622,
											"end": 6629,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6577,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6577,
											"end": 6630,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6577,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6567,
											"end": 6630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6173,
											"end": 6647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6653,
											"end": 6773,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6653,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6742,
											"end": 6747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 6725,
											"end": 6748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6725,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6749,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6763,
											"end": 6764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6765,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 6705,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6653,
											"end": 6773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6653,
											"end": 6773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6849,
											"end": 6869,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 6869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6840,
											"end": 6869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 6904,
											"end": 6909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6878,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6910,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 6878,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7034,
											"end": 7043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7025,
											"end": 7032,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7021,
											"end": 7044,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7017,
											"end": 7049,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7133,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7014,
											"end": 7133,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7052,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7052,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7052,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7052,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7052,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7133,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7014,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7232,
											"end": 7238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7197,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 7197,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7197,
											"end": 7249,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7197,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7249,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7143,
											"end": 7259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7369,
											"end": 7376,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7345,
											"end": 7367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 7324,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7324,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7572,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7572,
											"end": 7643,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7572,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7653,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7710,
											"end": 7719,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7706,
											"end": 7724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7653,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7653,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7653,
											"end": 7725,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 7653,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7400,
											"end": 7732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7843,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7825,
											"end": 7832,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7849,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7933,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7814,
											"end": 7933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7852,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7852,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7931,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 7852,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7933,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7814,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 8042,
											"end": 8049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8018,
											"end": 8040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 7997,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8050,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 7997,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7987,
											"end": 8050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7943,
											"end": 8060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 8248,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E76616C6964205374616B652049442100000000000000"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8372,
											"end": 8386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8365,
											"end": 8416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8795,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 8429,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8571,
											"end": 8574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 8656,
											"end": 8658,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 8651,
											"end": 8654,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 8592,
											"end": 8659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8592,
											"end": 8659,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 8592,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8585,
											"end": 8659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8757,
											"end": 8760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 8668,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8761,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8668,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8786,
											"end": 8788,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8789,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 9220,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 8801,
											"end": 9220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8967,
											"end": 8971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8994,
											"end": 9003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8982,
											"end": 9008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8982,
											"end": 9008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9044,
											"end": 9064,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9025,
											"end": 9042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 9082,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9213,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 9082,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 9220,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 9220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 9220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 9220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9407,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 9226,
											"end": 9407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9399,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A43616C6C6572206973206E6F7420746865206F776E657200"
										},
										{
											"begin": 9362,
											"end": 9363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9350,
											"end": 9364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9779,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 9413,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9635,
											"end": 9638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9576,
											"end": 9643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9576,
											"end": 9643,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 9576,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9569,
											"end": 9643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9741,
											"end": 9744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 9652,
											"end": 9745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9745,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9652,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9770,
											"end": 9772,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9754,
											"end": 9773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 10204,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 9785,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 9991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9978,
											"end": 9987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10032,
											"end": 10036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10009,
											"end": 10026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10002,
											"end": 10049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10066,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10192,
											"end": 10196,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10066,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10066,
											"end": 10197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10066,
											"end": 10197,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 10066,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 10204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 10204,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 10204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9785,
											"end": 10204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10439,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10210,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10384,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4561726C79205769746864726177616C206973206E6F7420"
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10327,
											"end": 10385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "PUSH",
											"source": 10,
											"value": "7065726D69747465642100000000000000000000000000000000000000000000"
										},
										{
											"begin": 10414,
											"end": 10416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10811,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 10445,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 10667,
											"end": 10670,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10608,
											"end": 10675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10675,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 10608,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10601,
											"end": 10675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10601,
											"end": 10675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 10773,
											"end": 10776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10684,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10777,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 10684,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10804,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10793,
											"end": 10805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10805,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10786,
											"end": 10805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 11236,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 10817,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 10987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11006,
											"end": 11024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10998,
											"end": 11024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10998,
											"end": 11024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11070,
											"end": 11079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11064,
											"end": 11068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11060,
											"end": 11080,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11041,
											"end": 11058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11034,
											"end": 11081,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11224,
											"end": 11228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 11098,
											"end": 11229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11229,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11098,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 11236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 11236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 11236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10817,
											"end": 11236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11416,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 11242,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11382,
											"end": 11408,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4E6F7468696E6720746F20636C61696D0000000000000000"
										},
										{
											"begin": 11378,
											"end": 11379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11370,
											"end": 11376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11366,
											"end": 11380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11359,
											"end": 11409,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11788,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 11422,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11564,
											"end": 11567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 11649,
											"end": 11651,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 11644,
											"end": 11647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 11585,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11652,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 11585,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11578,
											"end": 11652,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11578,
											"end": 11652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 11750,
											"end": 11753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 11661,
											"end": 11754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11754,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 11661,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 11781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11770,
											"end": 11782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11763,
											"end": 11782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 12213,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 11794,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11960,
											"end": 11964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12000,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11987,
											"end": 11996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 12001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11975,
											"end": 12001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12047,
											"end": 12056,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12057,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12022,
											"end": 12031,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12011,
											"end": 12058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12201,
											"end": 12205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 12075,
											"end": 12206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12075,
											"end": 12206,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 12075,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12067,
											"end": 12206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12067,
											"end": 12206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 12213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 12213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 12213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 12213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12219,
											"end": 12399,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12219,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12344,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12264,
											"end": 12265,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12345,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12368,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 12361,
											"end": 12362,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12354,
											"end": 12369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12392,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12378,
											"end": 12393,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12445,
											"end": 12449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12465,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12465,
											"end": 12485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12465,
											"end": 12485,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 12465,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 12485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 12485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 12517,
											"end": 12518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 12499,
											"end": 12519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 12499,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12519,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12494,
											"end": 12519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12543,
											"end": 12544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12536,
											"end": 12545,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12528,
											"end": 12545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12567,
											"end": 12568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12561,
											"end": 12565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12558,
											"end": 12569,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 12572,
											"end": 12590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 12572,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 12555,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12833,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 12605,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12745,
											"end": 12779,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 12741,
											"end": 12742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12733,
											"end": 12739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12722,
											"end": 12780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12814,
											"end": 12825,
											"name": "PUSH",
											"source": 10,
											"value": "68616E207A65726F210000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12809,
											"end": 12811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12801,
											"end": 12807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12797,
											"end": 12812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12790,
											"end": 12826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 13205,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 12839,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 12984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13002,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13061,
											"end": 13064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13002,
											"end": 13069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13069,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 13002,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12995,
											"end": 13069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 13167,
											"end": 13170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 13078,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 13078,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13196,
											"end": 13198,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13191,
											"end": 13194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13180,
											"end": 13199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13180,
											"end": 13199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 13205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 13205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 13205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12839,
											"end": 13205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13630,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 13211,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13377,
											"end": 13381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13404,
											"end": 13413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13400,
											"end": 13418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13392,
											"end": 13418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13392,
											"end": 13418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13454,
											"end": 13474,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13450,
											"end": 13451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13439,
											"end": 13448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13428,
											"end": 13475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13618,
											"end": 13622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 13492,
											"end": 13623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13623,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 13492,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13484,
											"end": 13623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13211,
											"end": 13630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13807,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13636,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 13799,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A4275726E7420746F6B656E73210000000000000000000000"
										},
										{
											"begin": 13772,
											"end": 13773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13764,
											"end": 13770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13760,
											"end": 13774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13753,
											"end": 13800,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 14179,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 13813,
											"end": 14179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13955,
											"end": 13958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13976,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 14040,
											"end": 14042,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14035,
											"end": 14038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13976,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 13976,
											"end": 14043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13976,
											"end": 14043,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 13976,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13969,
											"end": 14043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13969,
											"end": 14043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 14141,
											"end": 14144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14052,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14170,
											"end": 14172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14165,
											"end": 14168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14154,
											"end": 14173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14154,
											"end": 14173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 14179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 14179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 14179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 14179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14604,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 14185,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14351,
											"end": 14355,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14389,
											"end": 14391,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14366,
											"end": 14392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14366,
											"end": 14392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14438,
											"end": 14447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14448,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14424,
											"end": 14425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14402,
											"end": 14449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14466,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 14592,
											"end": 14596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14466,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 14466,
											"end": 14597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14466,
											"end": 14597,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 14466,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14458,
											"end": 14597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14458,
											"end": 14597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14610,
											"end": 14789,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 14610,
											"end": 14789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14781,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A496E73756666696369656E742062616C616E636521000000"
										},
										{
											"begin": 14746,
											"end": 14747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14727,
											"end": 14782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14610,
											"end": 14789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14610,
											"end": 14789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 15161,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14795,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14937,
											"end": 14940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14958,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 15022,
											"end": 15024,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 15017,
											"end": 15020,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14958,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 14958,
											"end": 15025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14958,
											"end": 15025,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 14958,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14951,
											"end": 15025,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14951,
											"end": 15025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15034,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 15123,
											"end": 15126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15034,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 15034,
											"end": 15127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15034,
											"end": 15127,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 15034,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15152,
											"end": 15154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15147,
											"end": 15150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15143,
											"end": 15155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15136,
											"end": 15155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15136,
											"end": 15155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 15161,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 15161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 15161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15586,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 15167,
											"end": 15586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15373,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15360,
											"end": 15369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15356,
											"end": 15374,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15348,
											"end": 15374,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15348,
											"end": 15374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15420,
											"end": 15429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15414,
											"end": 15418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15410,
											"end": 15430,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15395,
											"end": 15404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15391,
											"end": 15408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15384,
											"end": 15431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15448,
											"end": 15579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 15574,
											"end": 15578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15448,
											"end": 15579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 15448,
											"end": 15579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15448,
											"end": 15579,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 15448,
											"end": 15579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15592,
											"end": 15772,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 15592,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15640,
											"end": 15717,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15637,
											"end": 15638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15630,
											"end": 15718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15737,
											"end": 15741,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15734,
											"end": 15735,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15727,
											"end": 15742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15761,
											"end": 15765,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15758,
											"end": 15759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15751,
											"end": 15766,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15818,
											"end": 15821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15837,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15837,
											"end": 15857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 15857,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 15837,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15832,
											"end": 15857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15832,
											"end": 15857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15871,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 15889,
											"end": 15890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15871,
											"end": 15891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15871,
											"end": 15891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15871,
											"end": 15891,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 15871,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15891,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15911,
											"end": 15912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15907,
											"end": 15916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15900,
											"end": 15916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15900,
											"end": 15916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15935,
											"end": 15938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15929,
											"end": 15939,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 15962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 15962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 15926,
											"end": 15962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 15942,
											"end": 15960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 15942,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 15962,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 15926,
											"end": 15962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15975,
											"end": 16151,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 15975,
											"end": 16151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16115,
											"end": 16143,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A546F74616C20616D6F756E74206973203021000000000000"
										},
										{
											"begin": 16111,
											"end": 16112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16103,
											"end": 16109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16099,
											"end": 16113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16092,
											"end": 16144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15975,
											"end": 16151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15975,
											"end": 16151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16523,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 16157,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16299,
											"end": 16302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16320,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 16384,
											"end": 16386,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 16379,
											"end": 16382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 16320,
											"end": 16387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16320,
											"end": 16387,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 16320,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16313,
											"end": 16387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16313,
											"end": 16387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16396,
											"end": 16489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 16485,
											"end": 16488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16396,
											"end": 16489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 16396,
											"end": 16489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16396,
											"end": 16489,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 16396,
											"end": 16489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16514,
											"end": 16516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16509,
											"end": 16512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16505,
											"end": 16517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16157,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16948,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 16529,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16695,
											"end": 16699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16733,
											"end": 16735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16722,
											"end": 16731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16782,
											"end": 16791,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16776,
											"end": 16780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16772,
											"end": 16792,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16768,
											"end": 16769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16753,
											"end": 16770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16746,
											"end": 16793,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16810,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 16936,
											"end": 16940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16810,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 16810,
											"end": 16941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16810,
											"end": 16941,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 16810,
											"end": 16941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16802,
											"end": 16941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16802,
											"end": 16941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16529,
											"end": 16948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16954,
											"end": 17134,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 16954,
											"end": 17134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17079,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16999,
											"end": 17000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16992,
											"end": 17080,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17099,
											"end": 17103,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17096,
											"end": 17097,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17089,
											"end": 17104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17120,
											"end": 17121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17128,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17197,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17215,
											"end": 17216,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17197,
											"end": 17217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17197,
											"end": 17217,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 17197,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17217,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 17249,
											"end": 17250,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17231,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 17231,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17226,
											"end": 17251,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17226,
											"end": 17251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17260,
											"end": 17295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17260,
											"end": 17295,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17275,
											"end": 17293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 17275,
											"end": 17293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 17275,
											"end": 17293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17275,
											"end": 17293,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 17275,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17260,
											"end": 17295,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 17260,
											"end": 17295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17317,
											"end": 17318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17314,
											"end": 17315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17310,
											"end": 17319,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17305,
											"end": 17319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17140,
											"end": 17325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17371,
											"end": 17378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17394,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 17412,
											"end": 17413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17394,
											"end": 17414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17414,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 17394,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17389,
											"end": 17414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17389,
											"end": 17414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17428,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 17446,
											"end": 17447,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17428,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17428,
											"end": 17448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17428,
											"end": 17448,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 17428,
											"end": 17448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17423,
											"end": 17448,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17423,
											"end": 17448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17483,
											"end": 17484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17480,
											"end": 17481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17476,
											"end": 17485,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 17523,
											"end": 17534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17505,
											"end": 17535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17505,
											"end": 17535,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 17505,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17494,
											"end": 17535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17494,
											"end": 17535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17684,
											"end": 17685,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17671,
											"end": 17686,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17669,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17665,
											"end": 17687,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17645,
											"end": 17646,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17638,
											"end": 17647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17618,
											"end": 17701,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17595,
											"end": 17734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 17595,
											"end": 17734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 17714,
											"end": 17732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 17714,
											"end": 17732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17595,
											"end": 17734,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 17595,
											"end": 17734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17379,
											"end": 17741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17331,
											"end": 17741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17804,
											"end": 17809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17842,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17820,
											"end": 17842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17820,
											"end": 17842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17851,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 17878,
											"end": 17883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17851,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 17851,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17851,
											"end": 17884,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 17851,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17747,
											"end": 17890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 17972,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18015,
											"end": 18017,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18003,
											"end": 18012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17994,
											"end": 18001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17990,
											"end": 18013,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17986,
											"end": 18018,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 17983,
											"end": 18102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17983,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 17983,
											"end": 18102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 18021,
											"end": 18100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 18021,
											"end": 18100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18021,
											"end": 18100,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 18021,
											"end": 18100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17983,
											"end": 18102,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 17983,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18141,
											"end": 18142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18166,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 18222,
											"end": 18229,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18213,
											"end": 18219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18202,
											"end": 18211,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18198,
											"end": 18220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18166,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 18166,
											"end": 18230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18166,
											"end": 18230,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 18166,
											"end": 18230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18156,
											"end": 18230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18156,
											"end": 18230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18112,
											"end": 18240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17896,
											"end": 18247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18253,
											"end": 18484,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 18253,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18393,
											"end": 18427,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A5374616B6520616D6F756E74206D75737420626520677265"
										},
										{
											"begin": 18389,
											"end": 18390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18381,
											"end": 18387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18370,
											"end": 18428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18462,
											"end": 18476,
											"name": "PUSH",
											"source": 10,
											"value": "61746572207468616E2030210000000000000000000000000000000000000000"
										},
										{
											"begin": 18457,
											"end": 18459,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18449,
											"end": 18455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18445,
											"end": 18460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18438,
											"end": 18477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18253,
											"end": 18484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18253,
											"end": 18484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18490,
											"end": 18856,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 18490,
											"end": 18856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18632,
											"end": 18635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18653,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 18717,
											"end": 18719,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 18712,
											"end": 18715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18653,
											"end": 18720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 18653,
											"end": 18720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18653,
											"end": 18720,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 18653,
											"end": 18720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18729,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 18818,
											"end": 18821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18729,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 18729,
											"end": 18822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18729,
											"end": 18822,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 18729,
											"end": 18822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18847,
											"end": 18849,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18842,
											"end": 18845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18838,
											"end": 18850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18831,
											"end": 18850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18831,
											"end": 18850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18490,
											"end": 18856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18490,
											"end": 18856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18490,
											"end": 18856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18490,
											"end": 18856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 19281,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 18862,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19028,
											"end": 19032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19066,
											"end": 19068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19055,
											"end": 19064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19051,
											"end": 19069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19043,
											"end": 19069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19043,
											"end": 19069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19109,
											"end": 19113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19105,
											"end": 19125,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19101,
											"end": 19102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19090,
											"end": 19099,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19086,
											"end": 19103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19079,
											"end": 19126,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 19269,
											"end": 19273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 19143,
											"end": 19274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19143,
											"end": 19274,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 19143,
											"end": 19274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19135,
											"end": 19274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19135,
											"end": 19274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 19281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 19281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 19281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18862,
											"end": 19281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19287,
											"end": 19468,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 19287,
											"end": 19468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19427,
											"end": 19460,
											"name": "PUSH",
											"source": 10,
											"value": "4D6F64756C65583A557365206C6F6E676572206C6F636B5F706572696F642100"
										},
										{
											"begin": 19423,
											"end": 19424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19415,
											"end": 19421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19411,
											"end": 19425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19404,
											"end": 19461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19287,
											"end": 19468,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19287,
											"end": 19468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19616,
											"end": 19619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 19701,
											"end": 19703,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19696,
											"end": 19699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 19637,
											"end": 19704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 19637,
											"end": 19704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19630,
											"end": 19704,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19630,
											"end": 19704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 19802,
											"end": 19805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 19713,
											"end": 19806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 19713,
											"end": 19806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19831,
											"end": 19833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19826,
											"end": 19829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19822,
											"end": 19834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19815,
											"end": 19834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19815,
											"end": 19834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19474,
											"end": 19840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20012,
											"end": 20016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20050,
											"end": 20052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20039,
											"end": 20048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20035,
											"end": 20053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20027,
											"end": 20053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20027,
											"end": 20053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20099,
											"end": 20108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20093,
											"end": 20097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20089,
											"end": 20109,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20085,
											"end": 20086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20074,
											"end": 20083,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20070,
											"end": 20087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20063,
											"end": 20110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20253,
											"end": 20257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 20127,
											"end": 20258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 20127,
											"end": 20258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20119,
											"end": 20258,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20119,
											"end": 20258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19846,
											"end": 20265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19846,
											"end": 20265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20310,
											"end": 20313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20329,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 20346,
											"end": 20347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20329,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 20329,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20329,
											"end": 20348,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 20329,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20324,
											"end": 20348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20324,
											"end": 20348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 20379,
											"end": 20380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 20362,
											"end": 20381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 20362,
											"end": 20381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20357,
											"end": 20381,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20357,
											"end": 20381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20404,
											"end": 20405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20397,
											"end": 20406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20390,
											"end": 20406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20390,
											"end": 20406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20422,
											"end": 20425,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20419,
											"end": 20454,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20477,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 20416,
											"end": 20477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 20457,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 20457,
											"end": 20475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20475,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 20457,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20477,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 20416,
											"end": 20477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20271,
											"end": 20484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20665,
											"end": 20669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20703,
											"end": 20706,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 20692,
											"end": 20701,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20688,
											"end": 20707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20680,
											"end": 20707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20680,
											"end": 20707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20774,
											"end": 20783,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20770,
											"end": 20787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20761,
											"end": 20767,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 20717,
											"end": 20788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20717,
											"end": 20788,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 20717,
											"end": 20788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20798,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 20864,
											"end": 20866,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20862,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20849,
											"end": 20867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20846,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20798,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 20798,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20798,
											"end": 20868,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 20798,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 20946,
											"end": 20948,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20935,
											"end": 20944,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20931,
											"end": 20949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20922,
											"end": 20928,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 20878,
											"end": 20950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20878,
											"end": 20950,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 20878,
											"end": 20950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 21028,
											"end": 21030,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21017,
											"end": 21026,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21013,
											"end": 21031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21004,
											"end": 21010,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 21032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 20960,
											"end": 21032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20960,
											"end": 21032,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 20960,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20490,
											"end": 21039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21084,
											"end": 21087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 21125,
											"end": 21130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 21107,
											"end": 21131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 21107,
											"end": 21131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21098,
											"end": 21131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21098,
											"end": 21131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21153,
											"end": 21219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21146,
											"end": 21151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21143,
											"end": 21220,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 21223,
											"end": 21241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 21223,
											"end": 21241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 21140,
											"end": 21243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21270,
											"end": 21271,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21263,
											"end": 21268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21259,
											"end": 21272,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21252,
											"end": 21272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21252,
											"end": 21272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21405,
											"end": 21409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21443,
											"end": 21445,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21432,
											"end": 21441,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21420,
											"end": 21446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21420,
											"end": 21446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 21524,
											"end": 21525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21513,
											"end": 21522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21509,
											"end": 21526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21456,
											"end": 21527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 21456,
											"end": 21527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 21605,
											"end": 21607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21594,
											"end": 21603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21581,
											"end": 21587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 21537,
											"end": 21609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 21537,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21284,
											"end": 21616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21771,
											"end": 21775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21809,
											"end": 21811,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21798,
											"end": 21807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21786,
											"end": 21812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21786,
											"end": 21812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 21890,
											"end": 21891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21879,
											"end": 21888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21875,
											"end": 21892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21866,
											"end": 21872,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21822,
											"end": 21893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21893,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 21822,
											"end": 21893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21960,
											"end": 21969,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21956,
											"end": 21974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 21953,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21903,
											"end": 21975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21903,
											"end": 21975,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 21903,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21985,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 22053,
											"end": 22055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22042,
											"end": 22051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22038,
											"end": 22056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22029,
											"end": 22035,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21985,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 21985,
											"end": 22057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21985,
											"end": 22057,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 21985,
											"end": 22057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21622,
											"end": 22064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ModuleX.sol",
								"contracts/interface/IModuleX.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"DIFFICULTY()": "3fa352f5",
							"DIFFICULTY_INTERVAL()": "109cf399",
							"MATURITY()": "8e12c0cd",
							"addRewards(uint256)": "beceed39",
							"batchWithdrawCREDI(uint256[])": "bc854352",
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getStake(uint256)": "ce325bf8",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"owner()": "8da5cb5b",
							"pending_payments()": "8f4729b7",
							"renounceOwnership()": "715018a6",
							"stake(uint96,uint256)": "d93c04a0",
							"total_staked()": "af7568dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCREDI(uint256,uint256)": "ac00500f",
							"withdrawRewards(address,uint256)": "d6ef7af0",
							"xCREDI()": "b109beec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_credi_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xcredi_addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CREDIWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"maturity\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards_amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DIFFICULTY_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MATURITY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stake_ids\",\"type\":\"uint256[]\"}],\"name\":\"batchWithdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"getStake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pending_payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"total_staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCREDI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xCREDI\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ModuleX.sol\":\"ModuleX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ModuleX.sol\":{\"keccak256\":\"0x67d3877db061f3d1773c8c719a5293dc14dd8e862d79af89c422dad3d6b48ba0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://311b0d0fae78bc487f3ef4f02a59892f59ac80b156fa471218c2409802254c3a\",\"dweb:/ipfs/Qmf2HGFtCSuUcuSKWQDtgwxhEMX2YLpaxCFzBJ6L63eF8A\"]},\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xd1ab1c30595560209e53a1a63ceae830dfbc87c37156c2d55dfb9d7d8029a771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a529f385909f4285cd720ca7934600b38243b1c497e8641372ee9ce15d7e302\",\"dweb:/ipfs/QmQz8Nui3oG9HVFqyWyJdpkCMyHqrLK5QTquREqqycm9pK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 868,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(StakeDetails)844_storage)"
							},
							{
								"astId": 871,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "stakes_count",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 874,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "total_staked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "contracts/ModuleX.sol:ModuleX",
								"label": "pending_payments",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(StakeDetails)844_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ModuleX.StakeDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeDetails)844_storage"
							},
							"t_struct(StakeDetails)844_storage": {
								"encoding": "inplace",
								"label": "struct ModuleX.StakeDetails",
								"members": [
									{
										"astId": 837,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 839,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "maturity",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 841,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "stake_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 843,
										"contract": "contracts/ModuleX.sol:ModuleX",
										"label": "reward_amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IModuleX.sol": {
				"IModuleX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakesCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getxCREDIAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "lock_period",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stake_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "xCREDI_reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"claim(uint256)": "379607f5",
							"getCREDIAddress()": "d46149a2",
							"getStakesCount()": "b5fa91fe",
							"getxCREDIAddress()": "7c2fdeb5",
							"stake(uint96,uint256)": "d93c04a0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getxCREDIAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lock_period\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"xCREDI_reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IModuleX.sol\":\"IModuleX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IModuleX.sol\":{\"keccak256\":\"0xd1ab1c30595560209e53a1a63ceae830dfbc87c37156c2d55dfb9d7d8029a771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a529f385909f4285cd720ca7934600b38243b1c497e8641372ee9ce15d7e302\",\"dweb:/ipfs/QmQz8Nui3oG9HVFqyWyJdpkCMyHqrLK5QTquREqqycm9pK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 821,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"contracts/ModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/ModuleX.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"IModuleX": [
							1570
						],
						"ModuleX": [
							1527
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 316,
							"src": "115:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 780,
							"src": "173:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IModuleX.sol",
							"file": "./interface/IModuleX.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 1571,
							"src": "240:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 828,
										"name": "IModuleX",
										"nameLocations": [
											"298:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1570,
										"src": "298:8:8"
									},
									"id": 829,
									"nodeType": "InheritanceSpecifier",
									"src": "298:8:8"
								},
								{
									"baseName": {
										"id": 830,
										"name": "Ownable",
										"nameLocations": [
											"308:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "308:7:8"
									},
									"id": 831,
									"nodeType": "InheritanceSpecifier",
									"src": "308:7:8"
								}
							],
							"canonicalName": "ModuleX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1527,
							"linearizedBaseContracts": [
								1527,
								147,
								809,
								1570
							],
							"name": "ModuleX",
							"nameLocation": "287:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 835,
									"libraryName": {
										"id": 832,
										"name": "SafeERC20",
										"nameLocations": [
											"331:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "331:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "325:27:8",
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"345:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "345:6:8"
										},
										"referencedDeclaration": 315,
										"src": "345:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "ModuleX.StakeDetails",
									"id": 844,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "404:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "396:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "396:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "maturity",
											"nameLocation": "427:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "420:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 838,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "stake_amount",
											"nameLocation": "451:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "446:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "446:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "reward_amount",
											"nameLocation": "479:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 844,
											"src": "474:18:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeDetails",
									"nameLocation": "367:12:8",
									"nodeType": "StructDefinition",
									"scope": 1527,
									"src": "360:140:8",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8e12c0cd",
									"id": 847,
									"mutability": "constant",
									"name": "MATURITY",
									"nameLocation": "531:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "508:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 845,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "508:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "542:11:8",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10800_by_1",
											"typeString": "int_const 10800"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3fa352f5",
									"id": 850,
									"mutability": "constant",
									"name": "DIFFICULTY",
									"nameLocation": "594:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "573:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 848,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "573:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3131",
										"id": 849,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "607:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_11_by_1",
											"typeString": "int_const 11"
										},
										"value": "11"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "109cf399",
									"id": 857,
									"mutability": "constant",
									"name": "DIFFICULTY_INTERVAL",
									"nameLocation": "637:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "616:58:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "616:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 856,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030",
											"id": 852,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "659:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 855,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 853,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "668:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 854,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "672:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "668:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "659:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 860,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "728:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "704:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 859,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 858,
											"name": "IERC20",
											"nameLocations": [
												"704:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "704:6:8"
										},
										"referencedDeclaration": 315,
										"src": "704:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b109beec",
									"id": 863,
									"mutability": "immutable",
									"name": "xCREDI",
									"nameLocation": "820:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "796:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 861,
											"name": "IERC20",
											"nameLocations": [
												"796:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "796:6:8"
										},
										"referencedDeclaration": 315,
										"src": "796:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 868,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "934:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "895:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
										"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
									},
									"typeName": {
										"id": 867,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 864,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "904:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "895:30:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
											"typeString": "mapping(uint256 => struct ModuleX.StakeDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 866,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 865,
												"name": "StakeDetails",
												"nameLocations": [
													"912:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 844,
												"src": "912:12:8"
											},
											"referencedDeclaration": 844,
											"src": "912:12:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
												"typeString": "struct ModuleX.StakeDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 871,
									"mutability": "mutable",
									"name": "stakes_count",
									"nameLocation": "960:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "947:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 869,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "947:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 870,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "975:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "af7568dd",
									"id": 874,
									"mutability": "mutable",
									"name": "total_staked",
									"nameLocation": "995:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "983:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 872,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "983:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 873,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1010:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f4729b7",
									"id": 877,
									"mutability": "mutable",
									"name": "pending_payments",
									"nameLocation": "1030:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1527,
									"src": "1018:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 875,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1018:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 876,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1049:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "de88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d",
									"id": 881,
									"name": "RewardAdded",
									"nameLocation": "1065:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1082:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1077:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:13:8"
									},
									"src": "1059:31:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337",
									"id": 887,
									"name": "RewardWithdrawn",
									"nameLocation": "1102:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1134:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1118:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1143:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1138:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1138:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:33:8"
									},
									"src": "1096:55:8"
								},
								{
									"anonymous": false,
									"eventSelector": "24fe2d25c10eb2c67b5ac1e3edbcadc94191e154ed388ad667a9480c44f47146",
									"id": 899,
									"name": "Staked",
									"nameLocation": "1163:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1186:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1170:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1197:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1192:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1192:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": false,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "1214:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1207:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 892,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1207:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "1229:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1224:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1224:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards_amount",
												"nameLocation": "1248:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1243:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1243:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:94:8"
									},
									"src": "1157:107:8"
								},
								{
									"anonymous": false,
									"eventSelector": "03a00e6132085cbc9ea18899cd135ef9cad5d305d58506e08e7b1a9b96199a9c",
									"id": 905,
									"name": "CREDIWithdrawn",
									"nameLocation": "1276:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1296:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1291:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1311:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1306:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:28:8"
									},
									"src": "1270:49:8"
								},
								{
									"anonymous": false,
									"eventSelector": "67bb155fcabb99400c32b640dc7704c8f18aae4c817704c7267c5a8cd26dfc19",
									"id": 909,
									"name": "RewardPaid",
									"nameLocation": "1331:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1347:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1342:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:8"
									},
									"src": "1325:32:8"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "1410:108:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 914,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1429:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1440:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1429:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "1445:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 918,
																	"name": "stakes_count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1456:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1445:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1429:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1470:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															},
															"value": "ModuleX:Invalid Stake ID!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1421:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1421:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1421:77:8"
											},
											{
												"id": 924,
												"nodeType": "PlaceholderStatement",
												"src": "1509:1:8"
											}
										]
									},
									"id": 926,
									"name": "validate_stake",
									"nameLocation": "1374:14:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "1394:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1389:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1388:15:8"
									},
									"src": "1365:153:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "1608:87:8",
										"statements": [
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "1620:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 939,
																"name": "_credi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "1635:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 938,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1628:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1620:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1620:27:8"
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "xCREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1658:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 945,
																"name": "_xcredi_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "1674:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 944,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1667:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1667:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "1658:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "1658:29:8"
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 933,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1589:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 935,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 932,
												"name": "Ownable",
												"nameLocations": [
													"1581:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1581:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1581:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_credi_addr",
												"nameLocation": "1546:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1538:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_xcredi_addr",
												"nameLocation": "1567:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1559:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:43:8"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1608:0:8"
									},
									"scope": 1527,
									"src": "1526:169:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1534
									],
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1770:40:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "1796:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1788:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 955,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1788:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 954,
												"id": 959,
												"nodeType": "Return",
												"src": "1781:21:8"
											}
										]
									},
									"functionSelector": "d46149a2",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "1716:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1731:2:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1756:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:8"
									},
									"scope": 1527,
									"src": "1707:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1882:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "1908:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														],
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1900:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 966,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1900:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1900:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "1893:22:8"
											}
										]
									},
									"functionSelector": "7c2fdeb5",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "1827:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1843:2:8"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1868:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:9:8"
									},
									"scope": 1527,
									"src": "1818:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1544
									],
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1990:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "2008:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2023:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2008:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "2001:23:8"
											}
										]
									},
									"functionSelector": "b5fa91fe",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "1940:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:2:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1979:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1979:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:6:8"
									},
									"scope": 1527,
									"src": "1931:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "2242:193:8",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 998,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2275:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1000,
																"indexExpression": {
																	"id": 999,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2282:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2275:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2292:5:8",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 837,
															"src": "2275:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1002,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2312:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1004,
																"indexExpression": {
																	"id": 1003,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2319:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2312:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2329:8:8",
															"memberName": "maturity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "2312:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1006,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2352:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1008,
																"indexExpression": {
																	"id": 1007,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2359:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2352:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2369:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "2352:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1010,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "2396:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1012,
																"indexExpression": {
																	"id": 1011,
																	"name": "stake_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "2403:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2396:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2413:13:8",
															"memberName": "reward_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "2396:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1014,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2260:167:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint96_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint96,uint256,uint256)"
													}
												},
												"functionReturnParameters": 997,
												"id": 1015,
												"nodeType": "Return",
												"src": "2253:174:8"
											}
										]
									},
									"functionSelector": "ce325bf8",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 987,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 984,
													"src": "2097:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "validate_stake",
												"nameLocations": [
													"2082:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "2082:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2082:24:8"
										}
									],
									"name": "getStake",
									"nameLocation": "2049:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "2063:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2058:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2058:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:15:8"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2149:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2141:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "maturity",
												"nameLocation": "2170:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2165:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2165:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2194:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2189:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "reward_amount",
												"nameLocation": "2222:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2217:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:106:8"
									},
									"scope": 1527,
									"src": "2040:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "2497:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1024,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2522:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2528:9:8",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2522:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2515:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1022,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "2515:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2515:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1027,
												"nodeType": "Return",
												"src": "2508:30:8"
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "time_now",
									"nameLocation": "2452:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:2:8"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "2484:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1019,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2484:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:8:8"
									},
									"scope": 1527,
									"src": "2443:103:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1551
									],
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "2629:825:8",
										"statements": [
											{
												"assignments": [
													1037
												],
												"declarations": [
													{
														"constant": false,
														"id": 1037,
														"mutability": "mutable",
														"name": "SCALE_FACTOR",
														"nameLocation": "2646:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2641:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1036,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2641:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"hexValue": "31653138",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2661:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2641:24:8"
											},
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "curr_total",
														"nameLocation": "2681:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2676:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2676:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2694:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1043,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "2709:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2694:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2676:45:8"
											},
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "low_d",
														"nameLocation": "2737:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2732:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1046,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1048,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2745:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1049,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2758:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2745:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:45:8"
											},
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "high_d",
														"nameLocation": "2793:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "2788:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2788:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1057,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "curr_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "2802:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1055,
														"name": "DIFFICULTY_INTERVAL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2813:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2802:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2788:44:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1058,
														"name": "low_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "2846:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1059,
														"name": "high_d",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "2855:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2846:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "2964:483:8",
													"statements": [
														{
															"assignments": [
																1070
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1070,
																	"mutability": "mutable",
																	"name": "low_r",
																	"nameLocation": "2984:5:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "2979:10:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1069,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2979:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1087,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1071,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "2992:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1074,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1072,
																									"name": "low_d",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1047,
																									"src": "3007:5:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1073,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3015:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3007:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1075,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3006:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1076,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3018:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3006:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1078,
																					"name": "total_staked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 874,
																					"src": "3040:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3006:46:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1080,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3005:48:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2992:61:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1082,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "3055:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1083,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3063:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3055:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1085,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3054:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2992:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2979:95:8"
														},
														{
															"assignments": [
																1089
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1089,
																	"mutability": "mutable",
																	"name": "high_r",
																	"nameLocation": "3094:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "3089:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1088,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3089:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1103,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1090,
																		"name": "SCALE_FACTOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3103:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1091,
																					"name": "curr_total",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "3117:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1092,
																						"name": "high_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1053,
																						"src": "3130:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1093,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3137:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3130:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3117:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1096,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3116:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3103:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1098,
																				"name": "high_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "3159:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1099,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3168:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3159:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3158:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3103:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3089:90:8"
														},
														{
															"assignments": [
																1105
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1105,
																	"mutability": "mutable",
																	"name": "middle_r",
																	"nameLocation": "3199:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1142,
																	"src": "3194:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1104,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3194:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1107,
															"initialValue": {
																"hexValue": "30",
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3210:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3194:17:8"
														},
														{
															"body": {
																"id": 1131,
																"nodeType": "Block",
																"src": "3278:96:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1120,
																				"name": "middle_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1105,
																				"src": "3297:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1121,
																						"name": "SCALE_FACTOR",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1037,
																						"src": "3309:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1122,
																						"name": "DIFFICULTY_INTERVAL",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "3322:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3309:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1126,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1124,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1109,
																								"src": "3343:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1125,
																								"name": "DIFFICULTY",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 850,
																								"src": "3347:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3343:14:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1127,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3342:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3309:49:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3297:61:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1130,
																		"nodeType": "ExpressionStatement",
																		"src": "3297:61:8"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "3248:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1115,
																	"name": "high_d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3252:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3248:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1132,
															"initializationExpression": {
																"assignments": [
																	1109
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1109,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3235:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1132,
																		"src": "3230:6:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1108,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "3230:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1113,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1110,
																		"name": "low_d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "3237:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3245:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3237:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3230:16:8"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3260:3:8",
																	"subExpression": {
																		"id": 1117,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "3260:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1119,
																"nodeType": "ExpressionStatement",
																"src": "3260:3:8"
															},
															"nodeType": "ForStatement",
															"src": "3226:148:8"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1133,
																					"name": "low_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "3396:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1134,
																					"name": "middle_r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "3404:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3396:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1136,
																				"name": "high_r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "3415:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3396:25:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1138,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3395:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1139,
																	"name": "SCALE_FACTOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "3423:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3395:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1035,
															"id": 1141,
															"nodeType": "Return",
															"src": "3388:47:8"
														}
													]
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "2843:604:8",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "2872:67:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "stake_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "2894:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1062,
																				"name": "low_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "2908:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1063,
																				"name": "DIFFICULTY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "2916:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2908:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1065,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2907:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2894:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1035,
															"id": 1067,
															"nodeType": "Return",
															"src": "2887:40:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "2563:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "2584:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2579:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2579:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:19:8"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "2618:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2618:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2617:6:8"
									},
									"scope": 1527,
									"src": "2554:900:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1562
									],
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "3550:852:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "3569:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3584:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3569:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a5374616b6520616d6f756e74206d7573742062652067726561746572207468616e203021",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3587:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															},
															"value": "ModuleX:Stake amount must be greater than 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c24b0ff0c552bf87f2b4298683d5b4874071468c5bb96aa4e03ab0bf1d3efe09",
																"typeString": "literal_string \"ModuleX:Stake amount must be greater than 0!\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3561:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3561:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "3561:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "lock_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3653:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1165,
																"name": "MATURITY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3668:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "3653:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a557365206c6f6e676572206c6f636b5f706572696f6421",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3678:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															},
															"value": "ModuleX:Use longer lock_period!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07242fa6b7f291ba2ee319963638509157926e4f34181e82317c543c8c768847",
																"typeString": "literal_string \"ModuleX:Use longer lock_period!\""
															}
														],
														"id": 1163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3645:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3645:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "3645:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1173,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "3746:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3746:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1177,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3768:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1527",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1527",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3760:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1175,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3760:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3760:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3775:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1170,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3723:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3729:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "3723:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3723:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "3723:65:8"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "maturity",
														"nameLocation": "3807:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "3800:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 1182,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "3800:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1184,
															"name": "time_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "3818:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																"typeString": "function () view returns (uint96)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3818:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1186,
														"name": "lock_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "3831:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "3818:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3800:42:8"
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "3858:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "3853:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1189,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3853:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "3890:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1191,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3874:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3853:50:8"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "stake_id",
														"nameLocation": "3919:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "3914:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1198,
												"initialValue": {
													"id": 1197,
													"name": "stakes_count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 871,
													"src": "3930:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3914:28:8"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1199,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "3953:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1200,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3960:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3953:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
															"typeString": "struct ModuleX.StakeDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1203,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4007:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4007:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1205,
																"name": "maturity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "4044:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 1206,
																"name": "stake_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "4081:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1207,
																"name": "reward_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "4123:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1202,
															"name": "StakeDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3972:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_StakeDetails_$844_storage_ptr_$",
																"typeString": "type(struct ModuleX.StakeDetails storage pointer)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4000:5:8",
															"4034:8:8",
															"4067:12:8",
															"4108:13:8"
														],
														"names": [
															"owner",
															"maturity",
															"stake_amount",
															"reward_amount"
														],
														"nodeType": "FunctionCall",
														"src": "3972:176:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_memory_ptr",
															"typeString": "struct ModuleX.StakeDetails memory"
														}
													},
													"src": "3953:195:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3953:195:8"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "total_staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4169:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1212,
														"name": "stake_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "4185:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4169:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "4169:28:8"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4209:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1216,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "4229:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4209:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "4209:33:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1220,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4265:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4265:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "4279:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1223,
															"name": "maturity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "4289:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 1224,
															"name": "stake_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4299:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1225,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4313:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1219,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "4258:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint96,uint256,uint256)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "EmitStatement",
												"src": "4253:74:8"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4338:14:8",
													"subExpression": {
														"id": 1228,
														"name": "stakes_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "4338:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "4338:14:8"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1231,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "4370:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1232,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4380:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1233,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4369:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1234,
												"nodeType": "Return",
												"src": "4363:31:8"
											}
										]
									},
									"functionSelector": "d93c04a0",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3471:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "3484:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3477:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1146,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3477:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "3502:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3497:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3497:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:39:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3533:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3533:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3539:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3539:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:12:8"
									},
									"scope": 1527,
									"src": "3462:940:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "4493:586:8",
										"statements": [
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "4525:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "4504:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1247,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1246,
																"name": "StakeDetails",
																"nameLocations": [
																	"4504:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "4504:12:8"
															},
															"referencedDeclaration": 844,
															"src": "4504:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"baseExpression": {
														"id": 1249,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "4535:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1251,
													"indexExpression": {
														"id": 1250,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4542:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4535:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4504:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1254,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "4570:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4578:5:8",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 837,
																"src": "4570:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1256,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "4587:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4587:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4570:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4601:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															},
															"value": "ModuleX:Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5afdb4b06de9a33ff66bfa1873c59b0f67f15b54ea3c06325c00f83428cebdf9",
																"typeString": "literal_string \"ModuleX:Caller is not the owner\""
															}
														],
														"id": 1253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4562:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "4562:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1263,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "4654:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1265,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "4668:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4676:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4668:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "4654:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4561726c79205769746864726177616c206973206e6f74207065726d697474656421",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4686:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															},
															"value": "ModuleX:Early Withdrawal is not permitted!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad85797b0957f555113bb671fff50ac7893c5a8e9cfbfa1768bbc7104b2e3818",
																"typeString": "literal_string \"ModuleX:Early Withdrawal is not permitted!\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4646:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "4646:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1272,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "4751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4759:13:8",
																"memberName": "reward_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "4751:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4775:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4751:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4e6f7468696e6720746f20636c61696d",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4778:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															},
															"value": "ModuleX:Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd05ba593ac8f323e1f40eca70be72799a80a3e1a6c8aeaed4ef33f39c554763",
																"typeString": "literal_string \"ModuleX:Nothing to claim\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4743:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4743:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "4743:62:8"
											},
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "reward_amount",
														"nameLocation": "4821:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1308,
														"src": "4816:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4816:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"expression": {
														"id": 1281,
														"name": "details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "4837:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails storage pointer"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4845:13:8",
													"memberName": "reward_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 843,
													"src": "4837:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4816:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1287,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "4889:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "reward_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "4903:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1284,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "4869:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4876:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "4869:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4869:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "4869:48:8"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "pending_payments",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4933:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1293,
														"name": "reward_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "4953:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4933:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "4933:33:8"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1296,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4977:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4985:13:8",
														"memberName": "reward_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "4977:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5001:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4977:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "4977:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1303,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "5030:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1302,
														"name": "RewardPaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5019:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5019:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "EmitStatement",
												"src": "5014:25:8"
											},
											{
												"expression": {
													"id": 1306,
													"name": "reward_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1280,
													"src": "5058:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1307,
												"nodeType": "Return",
												"src": "5051:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1241,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1238,
													"src": "4464:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1240,
												"name": "validate_stake",
												"nameLocations": [
													"4449:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "4449:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4449:24:8"
										}
									],
									"name": "claim",
									"nameLocation": "4419:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "4430:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4425:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4425:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:15:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4482:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:6:8"
									},
									"scope": 1527,
									"src": "4410:669:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "5187:456:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "5207:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5216:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5207:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5219:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5198:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5198:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "5198:65:8"
											},
											{
												"assignments": [
													1330
												],
												"declarations": [
													{
														"constant": false,
														"id": 1330,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5295:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1372,
														"src": "5274:28:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
															"typeString": "struct ModuleX.StakeDetails"
														},
														"typeName": {
															"id": 1329,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1328,
																"name": "StakeDetails",
																"nameLocations": [
																	"5274:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 844,
																"src": "5274:12:8"
															},
															"referencedDeclaration": 844,
															"src": "5274:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1334,
												"initialValue": {
													"baseExpression": {
														"id": 1331,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "5305:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
															"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
														}
													},
													"id": 1333,
													"indexExpression": {
														"id": 1332,
														"name": "stake_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "5312:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5305:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
														"typeString": "struct ModuleX.StakeDetails storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5274:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1336,
																	"name": "time_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5340:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																		"typeString": "function () view returns (uint96)"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5340:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1338,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "5354:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5362:8:8",
																"memberName": "maturity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "5354:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "5340:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5372:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															},
															"value": "ModuleX:Burnt tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																"typeString": "literal_string \"ModuleX:Burnt tokens!\""
															}
														],
														"id": 1335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5332:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5332:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "5332:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "5416:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1346,
																	"name": "details",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "5426:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails storage pointer"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5434:12:8",
																"memberName": "stake_amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "5426:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5416:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5448:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5408:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "5408:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1355,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "5511:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5511:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1357,
																"name": "details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "5525:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																	"typeString": "struct ModuleX.StakeDetails storage pointer"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5533:12:8",
															"memberName": "stake_amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 841,
															"src": "5525:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1352,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5492:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5498:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "5492:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "5492:54:8"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1361,
															"name": "details",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "5557:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																"typeString": "struct ModuleX.StakeDetails storage pointer"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5565:12:8",
														"memberName": "stake_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 841,
														"src": "5557:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1364,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "5581:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5557:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "5557:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1368,
															"name": "stake_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "5618:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1369,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "5628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "CREDIWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "5603:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5603:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "EmitStatement",
												"src": "5598:37:8"
											}
										]
									},
									"functionSelector": "ac00500f",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1315,
												"name": "onlyOwner",
												"nameLocations": [
													"5147:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5147:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5147:9:8"
										},
										{
											"arguments": [
												{
													"id": 1318,
													"name": "stake_id",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1311,
													"src": "5172:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1317,
												"name": "validate_stake",
												"nameLocations": [
													"5157:14:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 926,
												"src": "5157:14:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5157:24:8"
										}
									],
									"name": "withdrawCREDI",
									"nameLocation": "5096:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "5115:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "5110:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5130:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "5125:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5125:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:28:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5187:0:8"
									},
									"scope": 1527,
									"src": "5087:556:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "5730:633:8",
										"statements": [
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "total_amount",
														"nameLocation": "5746:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1459,
														"src": "5741:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5741:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"hexValue": "30",
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5761:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5741:21:8"
											},
											{
												"body": {
													"id": 1442,
													"nodeType": "Block",
													"src": "5825:407:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1397,
																				"name": "stake_ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1376,
																				"src": "5848:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1399,
																			"indexExpression": {
																				"id": 1398,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1386,
																				"src": "5858:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5848:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1400,
																			"name": "stakes_count",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "5863:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5848:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a496e76616c6964205374616b6520494421",
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5877:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		},
																		"value": "ModuleX:Invalid Stake ID!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_acba789187d03c17346e38da54a23b3c45abc82ea94604f6b8abf28f74b5774a",
																			"typeString": "literal_string \"ModuleX:Invalid Stake ID!\""
																		}
																	],
																	"id": 1396,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5840:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5840:65:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "5840:65:8"
														},
														{
															"assignments": [
																1407
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1407,
																	"mutability": "mutable",
																	"name": "details",
																	"nameLocation": "5941:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1442,
																	"src": "5920:28:8",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																		"typeString": "struct ModuleX.StakeDetails"
																	},
																	"typeName": {
																		"id": 1406,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1405,
																			"name": "StakeDetails",
																			"nameLocations": [
																				"5920:12:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 844,
																			"src": "5920:12:8"
																		},
																		"referencedDeclaration": 844,
																		"src": "5920:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1413,
															"initialValue": {
																"baseExpression": {
																	"id": 1408,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "5951:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeDetails_$844_storage_$",
																		"typeString": "mapping(uint256 => struct ModuleX.StakeDetails storage ref)"
																	}
																},
																"id": 1412,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1409,
																		"name": "stake_ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "5958:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1411,
																	"indexExpression": {
																		"id": 1410,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "5968:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5958:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5951:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeDetails_$844_storage",
																	"typeString": "struct ModuleX.StakeDetails storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5920:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1415,
																				"name": "time_now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "5994:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint96_$",
																					"typeString": "function () view returns (uint96)"
																				}
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5994:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"expression": {
																				"id": 1417,
																				"name": "details",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "6008:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																					"typeString": "struct ModuleX.StakeDetails storage pointer"
																				}
																			},
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6016:8:8",
																			"memberName": "maturity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 839,
																			"src": "6008:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "5994:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6f64756c65583a4275726e7420746f6b656e7321",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6026:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		},
																		"value": "ModuleX:Burnt tokens!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd29feb79ff2517a824da08235a4b0d393361f29b4f2677e0b75b26aad582cd6",
																			"typeString": "literal_string \"ModuleX:Burnt tokens!\""
																		}
																	],
																	"id": 1414,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5986:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5986:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "5986:64:8"
														},
														{
															"expression": {
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1423,
																	"name": "total_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "6065:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1424,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "6081:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6089:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6081:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6065:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1427,
															"nodeType": "ExpressionStatement",
															"src": "6065:36:8"
														},
														{
															"expression": {
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1428,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "6116:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																			"typeString": "struct ModuleX.StakeDetails storage pointer"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6124:12:8",
																	"memberName": "stake_amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "6116:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6139:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6116:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "6116:24:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1435,
																			"name": "stake_ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1376,
																			"src": "6185:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1437,
																		"indexExpression": {
																			"id": 1436,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "6195:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6185:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1438,
																			"name": "details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "6199:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeDetails_$844_storage_ptr",
																				"typeString": "struct ModuleX.StakeDetails storage pointer"
																			}
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6207:12:8",
																		"memberName": "stake_amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "6199:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1434,
																	"name": "CREDIWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "6170:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6170:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "EmitStatement",
															"src": "6165:55:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1389,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "5789:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1390,
															"name": "stake_ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "5793:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5803:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5793:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5789:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"initializationExpression": {
													"assignments": [
														1386
													],
													"declarations": [
														{
															"constant": false,
															"id": 1386,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5782:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1443,
															"src": "5777:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1385,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5777:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1388,
													"initialValue": {
														"hexValue": "30",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5786:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5777:10:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5811:3:8",
														"subExpression": {
															"id": 1393,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "5811:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1395,
													"nodeType": "ExpressionStatement",
													"src": "5811:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5773:459:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "total_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "6250:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6250:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a546f74616c20616d6f756e74206973203021",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6268:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															},
															"value": "ModuleX:Total amount is 0!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddcca1cfe4cebd41d8609c14a8d0c05032765e0249790e1aa2485d5250520881",
																"typeString": "literal_string \"ModuleX:Total amount is 0!\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6242:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6242:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "6242:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1454,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6328:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6328:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "total_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "6342:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1451,
															"name": "CREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "6309:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6315:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6309:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6309:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "6309:46:8"
											}
										]
									},
									"functionSelector": "bc854352",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1378,
												"name": "onlyOwner",
												"nameLocations": [
													"5715:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5715:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5715:9:8"
										}
									],
									"name": "batchWithdrawCREDI",
									"nameLocation": "5660:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "stake_ids",
												"nameLocation": "5695:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "5679:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1374,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5679:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1375,
													"nodeType": "ArrayTypeName",
													"src": "5679:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:27:8"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5730:0:8"
									},
									"scope": 1527,
									"src": "5651:712:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "6419:190:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "6439:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6448:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6439:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a616d6f756e74206d7573742062652067726561746572207468616e207a65726f21",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6451:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															},
															"value": "ModuleX:amount must be greater than zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dcaf849fbe361f465b330e5d23070f6bedac6e1845bfd6362dc6ded08804524",
																"typeString": "literal_string \"ModuleX:amount must be greater than zero!\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6430:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "6430:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1475,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6530:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6530:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1479,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6552:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ModuleX_$1527",
																		"typeString": "contract ModuleX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ModuleX_$1527",
																		"typeString": "contract ModuleX"
																	}
																],
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6544:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6544:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6544:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1481,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "6559:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1472,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6506:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6513:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "6506:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "6506:60:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "6594:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6582:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6582:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "EmitStatement",
												"src": "6577:24:8"
											}
										]
									},
									"functionSelector": "beceed39",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addRewards",
									"nameLocation": "6380:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6396:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "6391:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6390:13:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6419:0:8"
									},
									"scope": 1527,
									"src": "6371:238:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "6691:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1503,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6735:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ModuleX_$1527",
																					"typeString": "contract ModuleX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ModuleX_$1527",
																					"typeString": "contract ModuleX"
																				}
																			],
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6727:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1501,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6727:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6727:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1499,
																		"name": "xCREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "6710:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6717:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "6710:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6710:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "6745:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1507,
																	"name": "pending_payments",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "6754:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6745:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6710:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6f64756c65583a496e73756666696369656e742062616c616e636521",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6772:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															},
															"value": "ModuleX:Insufficient balance!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413ac2baa8870288e9188088c98e08d88268d0be0f47efcc4cdddd7b61bbb7e6",
																"typeString": "literal_string \"ModuleX:Insufficient balance!\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6702:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6702:102:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "6702:102:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1516,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6835:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "6839:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1513,
															"name": "xCREDI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6815:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6822:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "6815:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6815:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "6815:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6878:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "6882:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1520,
														"name": "RewardWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "6862:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6862:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "EmitStatement",
												"src": "6857:32:8"
											}
										]
									},
									"functionSelector": "d6ef7af0",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1496,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1495,
												"name": "onlyOwner",
												"nameLocations": [
													"6676:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6676:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6676:9:8"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6626:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6650:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6642:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6642:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6659:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "6654:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6654:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6641:25:8"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:8"
									},
									"scope": 1527,
									"src": "6617:280:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1528,
							"src": "278:6624:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								881,
								887,
								899,
								905,
								909
							]
						}
					],
					"src": "33:6871:8"
				},
				"id": 8
			},
			"contracts/interface/IModuleX.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IModuleX.sol",
					"exportedSymbols": {
						"IModuleX": [
							1570
						]
					},
					"id": 1571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1529,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IModuleX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1570,
							"linearizedBaseContracts": [
								1570
							],
							"name": "IModuleX",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46149a2",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCREDIAddress",
									"nameLocation": "97:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:9"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "137:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:9:9"
									},
									"scope": 1570,
									"src": "88:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7c2fdeb5",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getxCREDIAddress",
									"nameLocation": "163:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:9"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "204:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:9"
									},
									"scope": 1570,
									"src": "154:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b5fa91fe",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStakesCount",
									"nameLocation": "230:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:9"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "269:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:9"
									},
									"scope": 1570,
									"src": "221:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d2d7231f",
									"id": 1551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "296:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "stake_amount",
												"nameLocation": "317:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "312:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:19:9"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "348:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:6:9"
									},
									"scope": 1570,
									"src": "287:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d93c04a0",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "371:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "lock_period",
												"nameLocation": "384:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "377:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1552,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "377:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "402:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "397:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "397:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:33:9"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "432:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "427:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "427:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "447:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "442:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:35:9"
									},
									"scope": 1570,
									"src": "362:100:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "379607f5",
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "479:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "stake_id",
												"nameLocation": "490:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "485:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:15:9"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "xCREDI_reward",
												"nameLocation": "522:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "517:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "517:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:20:9"
									},
									"scope": 1570,
									"src": "470:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1571,
							"src": "61:481:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:511:9"
				},
				"id": 9
			}
		}
	}
}