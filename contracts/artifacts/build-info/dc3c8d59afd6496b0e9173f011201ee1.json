{
	"id": "dc3c8d59afd6496b0e9173f011201ee1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CREDIWhale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./interface/IERC20_Decimals.sol\";\r\nimport \"./interface/ICREDIWhale.sol\";\r\n\r\ncontract CREDIWhale is Ownable, ICREDIWhale  \r\n{\r\n    address immutable public CREDI;\r\n    uint private _whaleThreshold = 500000;\r\n\r\n    constructor(address _CREDI) Ownable(_msgSender())\r\n    { \r\n        CREDI = _CREDI;\r\n        _whaleThreshold = _whaleThreshold*10**IERC20_Decimals(CREDI).decimals();\r\n    }\r\n\r\n    function isWhale(address user_address) external view returns (bool)\r\n    {\r\n        return IERC20(CREDI).balanceOf(user_address) >= _whaleThreshold;\r\n    }\r\n\r\n    function setWhaleThreshold(uint new_threshold) external onlyOwner\r\n    {\r\n        _whaleThreshold = new_threshold*10**IERC20_Decimals(CREDI).decimals();\r\n    }\r\n\r\n    function whaleThreshold() external view returns (uint)\r\n    {\r\n        return _whaleThreshold;\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/interface/ICREDIWhale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ICREDIWhale \r\n{\r\n    function isWhale(address user_address) external view returns (bool);\r\n    function whaleThreshold() external view returns (uint); \r\n}"
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC20_Decimals \r\n{\r\n    function decimals() external view returns (uint8);   \r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CREDIWhale.sol": {
				"CREDIWhale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_CREDI",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CREDI",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								}
							],
							"name": "isWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "new_threshold",
									"type": "uint256"
								}
							],
							"name": "setWhaleThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whaleThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/CREDIWhale.sol\":378:384  500000 */\n  0x07a120\n    /* \"contracts/CREDIWhale.sol\":347:384  uint private _whaleThreshold = 500000 */\n  0x01\n  sstore\n    /* \"contracts/CREDIWhale.sol\":393:564  constructor(address _CREDI) Ownable(_msgSender())... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CREDIWhale.sol\":429:441  _msgSender() */\n  tag_5\n    /* \"contracts/CREDIWhale.sol\":429:439  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/CREDIWhale.sol\":429:441  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/CREDIWhale.sol\":468:474  _CREDI */\n  dup1\n    /* \"contracts/CREDIWhale.sol\":460:474  CREDI = _CREDI */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/CREDIWhale.sol\":539:544  CREDI */\n  mload(0x80)\n    /* \"contracts/CREDIWhale.sol\":523:554  IERC20_Decimals(CREDI).decimals */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x313ce567\n    /* \"contracts/CREDIWhale.sol\":523:556  IERC20_Decimals(CREDI).decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_16\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_16:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"contracts/CREDIWhale.sol\":519:521  10 */\n  0x0a\n    /* \"contracts/CREDIWhale.sol\":519:556  10**IERC20_Decimals(CREDI).decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/CREDIWhale.sol\":503:518  _whaleThreshold */\n  sload(0x01)\n    /* \"contracts/CREDIWhale.sol\":503:556  _whaleThreshold*10**IERC20_Decimals(CREDI).decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/CREDIWhale.sol\":485:500  _whaleThreshold */\n  0x01\n    /* \"contracts/CREDIWhale.sol\":485:556  _whaleThreshold = _whaleThreshold*10**IERC20_Decimals(CREDI).decimals() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CREDIWhale.sol\":393:564  constructor(address _CREDI) Ownable(_msgSender())... */\n  pop\n    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_27:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_29:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_30:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_48\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_29\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_31:\n    /* \"#utility.yul\":641:665   */\n  tag_50\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_30\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_51:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_32:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_53\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_31\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_56\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":932:1051   */\ntag_55:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_57\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_32\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_33:\n    /* \"#utility.yul\":1289:1313   */\n  tag_59\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_11:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_61\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_33\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1640   */\ntag_34:\n    /* \"#utility.yul\":1589:1596   */\n  0x00\n    /* \"#utility.yul\":1629:1633   */\n  0xff\n    /* \"#utility.yul\":1622:1627   */\n  dup3\n    /* \"#utility.yul\":1618:1634   */\n  and\n    /* \"#utility.yul\":1607:1634   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1640   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:1764   */\ntag_35:\n    /* \"#utility.yul\":1717:1739   */\n  tag_64\n    /* \"#utility.yul\":1733:1738   */\n  dup2\n    /* \"#utility.yul\":1717:1739   */\n  tag_34\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1710:1715   */\n  dup2\n    /* \"#utility.yul\":1707:1740   */\n  eq\n    /* \"#utility.yul\":1697:1758   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1754:1755   */\n  0x00\n    /* \"#utility.yul\":1751:1752   */\n  0x00\n    /* \"#utility.yul\":1744:1756   */\n  revert\n    /* \"#utility.yul\":1697:1758   */\ntag_65:\n    /* \"#utility.yul\":1646:1764   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1770:1909   */\ntag_36:\n    /* \"#utility.yul\":1825:1830   */\n  0x00\n    /* \"#utility.yul\":1856:1862   */\n  dup2\n    /* \"#utility.yul\":1850:1863   */\n  mload\n    /* \"#utility.yul\":1841:1863   */\n  swap1\n  pop\n    /* \"#utility.yul\":1872:1903   */\n  tag_67\n    /* \"#utility.yul\":1897:1902   */\n  dup2\n    /* \"#utility.yul\":1872:1903   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1770:1909   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1915:2262   */\ntag_18:\n    /* \"#utility.yul\":1983:1989   */\n  0x00\n    /* \"#utility.yul\":2032:2034   */\n  0x20\n    /* \"#utility.yul\":2020:2029   */\n  dup3\n    /* \"#utility.yul\":2011:2018   */\n  dup5\n    /* \"#utility.yul\":2007:2030   */\n  sub\n    /* \"#utility.yul\":2003:2035   */\n  slt\n    /* \"#utility.yul\":2000:2119   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2038:2117   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2000:2119   */\ntag_69:\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2183:2245   */\n  tag_71\n    /* \"#utility.yul\":2237:2244   */\n  dup5\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2217:2226   */\n  dup6\n    /* \"#utility.yul\":2213:2235   */\n  add\n    /* \"#utility.yul\":2183:2245   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2173:2245   */\n  swap2\n  pop\n    /* \"#utility.yul\":2129:2255   */\n  pop\n    /* \"#utility.yul\":1915:2262   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2268:2448   */\ntag_37:\n    /* \"#utility.yul\":2316:2393   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2313:2314   */\n  0x00\n    /* \"#utility.yul\":2306:2394   */\n  mstore\n    /* \"#utility.yul\":2413:2417   */\n  0x11\n    /* \"#utility.yul\":2410:2411   */\n  0x04\n    /* \"#utility.yul\":2403:2418   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x24\n    /* \"#utility.yul\":2434:2435   */\n  0x00\n    /* \"#utility.yul\":2427:2442   */\n  revert\n    /* \"#utility.yul\":2454:2556   */\ntag_38:\n    /* \"#utility.yul\":2496:2504   */\n  0x00\n    /* \"#utility.yul\":2543:2548   */\n  dup2\n    /* \"#utility.yul\":2540:2541   */\n  0x01\n    /* \"#utility.yul\":2536:2549   */\n  shr\n    /* \"#utility.yul\":2515:2549   */\n  swap1\n  pop\n    /* \"#utility.yul\":2454:2556   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2562:3410   */\ntag_39:\n    /* \"#utility.yul\":2623:2628   */\n  0x00\n    /* \"#utility.yul\":2630:2634   */\n  0x00\n    /* \"#utility.yul\":2654:2660   */\n  dup3\n    /* \"#utility.yul\":2645:2660   */\n  swap2\n  pop\n    /* \"#utility.yul\":2678:2683   */\n  dup4\n    /* \"#utility.yul\":2669:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2692:3404   */\ntag_75:\n    /* \"#utility.yul\":2713:2714   */\n  0x01\n    /* \"#utility.yul\":2703:2711   */\n  dup6\n    /* \"#utility.yul\":2700:2715   */\n  gt\n    /* \"#utility.yul\":2692:3404   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2808:2812   */\n  dup1\n    /* \"#utility.yul\":2803:2806   */\n  dup7\n    /* \"#utility.yul\":2799:2813   */\n  div\n    /* \"#utility.yul\":2793:2797   */\n  dup2\n    /* \"#utility.yul\":2790:2814   */\n  gt\n    /* \"#utility.yul\":2787:2837   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2817:2835   */\n  tag_79\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2787:2837   */\ntag_78:\n    /* \"#utility.yul\":2867:2868   */\n  0x01\n    /* \"#utility.yul\":2857:2865   */\n  dup6\n    /* \"#utility.yul\":2853:2869   */\n  and\n    /* \"#utility.yul\":2850:3301   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3282:3286   */\n  dup1\n    /* \"#utility.yul\":3275:3280   */\n  dup3\n    /* \"#utility.yul\":3271:3287   */\n  mul\n    /* \"#utility.yul\":3262:3287   */\n  swap2\n  pop\n    /* \"#utility.yul\":2850:3301   */\ntag_80:\n    /* \"#utility.yul\":3332:3336   */\n  dup1\n    /* \"#utility.yul\":3326:3330   */\n  dup2\n    /* \"#utility.yul\":3322:3337   */\n  mul\n    /* \"#utility.yul\":3314:3337   */\n  swap1\n  pop\n    /* \"#utility.yul\":3362:3394   */\n  tag_81\n    /* \"#utility.yul\":3385:3393   */\n  dup6\n    /* \"#utility.yul\":3362:3394   */\n  tag_38\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3350:3394   */\n  swap5\n  pop\n    /* \"#utility.yul\":2692:3404   */\n  jump(tag_75)\ntag_77:\n    /* \"#utility.yul\":2562:3410   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:4489   */\ntag_40:\n    /* \"#utility.yul\":3470:3475   */\n  0x00\n    /* \"#utility.yul\":3661:3669   */\n  dup3\n    /* \"#utility.yul\":3651:3691   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3682:3683   */\n  0x01\n    /* \"#utility.yul\":3673:3683   */\n  swap1\n  pop\n    /* \"#utility.yul\":3684:3689   */\n  jump(tag_82)\n    /* \"#utility.yul\":3651:3691   */\ntag_83:\n    /* \"#utility.yul\":3710:3714   */\n  dup2\n    /* \"#utility.yul\":3700:3736   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3727:3728   */\n  0x00\n    /* \"#utility.yul\":3718:3728   */\n  swap1\n  pop\n    /* \"#utility.yul\":3729:3734   */\n  jump(tag_82)\n    /* \"#utility.yul\":3700:3736   */\ntag_84:\n    /* \"#utility.yul\":3796:3800   */\n  dup2\n    /* \"#utility.yul\":3844:3845   */\n  0x01\n    /* \"#utility.yul\":3839:3866   */\n  dup2\n  eq\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3880:3881   */\n  0x02\n    /* \"#utility.yul\":3875:4066   */\n  dup2\n  eq\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3789:4066   */\n  jump(tag_85)\n    /* \"#utility.yul\":3839:3866   */\ntag_86:\n    /* \"#utility.yul\":3857:3858   */\n  0x01\n    /* \"#utility.yul\":3848:3858   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3864   */\n  pop\n  jump(tag_82)\n    /* \"#utility.yul\":3875:4066   */\ntag_87:\n    /* \"#utility.yul\":3920:3923   */\n  0xff\n    /* \"#utility.yul\":3910:3918   */\n  dup5\n    /* \"#utility.yul\":3907:3924   */\n  gt\n    /* \"#utility.yul\":3904:3947   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3927:3945   */\n  tag_89\n  tag_37\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3904:3947   */\ntag_88:\n    /* \"#utility.yul\":3976:3984   */\n  dup4\n    /* \"#utility.yul\":3973:3974   */\n  0x02\n    /* \"#utility.yul\":3969:3985   */\n  exp\n    /* \"#utility.yul\":3960:3985   */\n  swap2\n  pop\n    /* \"#utility.yul\":4011:4014   */\n  dup5\n    /* \"#utility.yul\":4004:4009   */\n  dup3\n    /* \"#utility.yul\":4001:4015   */\n  gt\n    /* \"#utility.yul\":3998:4038   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4018:4036   */\n  tag_91\n  tag_37\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3998:4038   */\ntag_90:\n    /* \"#utility.yul\":4051:4056   */\n  pop\n  jump(tag_82)\n    /* \"#utility.yul\":3789:4066   */\ntag_85:\n  pop\n    /* \"#utility.yul\":4175:4177   */\n  0x20\n    /* \"#utility.yul\":4165:4173   */\n  dup4\n    /* \"#utility.yul\":4162:4178   */\n  lt\n    /* \"#utility.yul\":4156:4159   */\n  0x0133\n    /* \"#utility.yul\":4150:4154   */\n  dup4\n    /* \"#utility.yul\":4147:4160   */\n  lt\n    /* \"#utility.yul\":4143:4179   */\n  and\n    /* \"#utility.yul\":4125:4127   */\n  0x4e\n    /* \"#utility.yul\":4115:4123   */\n  dup5\n    /* \"#utility.yul\":4112:4128   */\n  lt\n    /* \"#utility.yul\":4107:4109   */\n  0x0b\n    /* \"#utility.yul\":4101:4105   */\n  dup5\n    /* \"#utility.yul\":4098:4110   */\n  lt\n    /* \"#utility.yul\":4094:4129   */\n  and\n    /* \"#utility.yul\":4078:4189   */\n  or\n    /* \"#utility.yul\":4075:4321   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4231:4239   */\n  dup3\n    /* \"#utility.yul\":4225:4229   */\n  dup3\n    /* \"#utility.yul\":4221:4240   */\n  exp\n    /* \"#utility.yul\":4212:4240   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4269   */\n  dup4\n    /* \"#utility.yul\":4259:4264   */\n  dup2\n    /* \"#utility.yul\":4256:4270   */\n  gt\n    /* \"#utility.yul\":4253:4293   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4273:4291   */\n  tag_94\n  tag_37\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4253:4293   */\ntag_93:\n    /* \"#utility.yul\":4306:4311   */\n  jump(tag_82)\n    /* \"#utility.yul\":4075:4321   */\ntag_92:\n    /* \"#utility.yul\":4346:4388   */\n  tag_95\n    /* \"#utility.yul\":4384:4387   */\n  dup5\n    /* \"#utility.yul\":4374:4382   */\n  dup5\n    /* \"#utility.yul\":4368:4372   */\n  dup5\n    /* \"#utility.yul\":4365:4366   */\n  0x01\n    /* \"#utility.yul\":4346:4388   */\n  tag_39\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4331:4388   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":4420:4424   */\n  dup2\n    /* \"#utility.yul\":4415:4418   */\n  dup5\n    /* \"#utility.yul\":4411:4425   */\n  div\n    /* \"#utility.yul\":4404:4409   */\n  dup2\n    /* \"#utility.yul\":4401:4426   */\n  gt\n    /* \"#utility.yul\":4398:4449   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4429:4447   */\n  tag_97\n  tag_37\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4398:4449   */\ntag_96:\n    /* \"#utility.yul\":4478:4482   */\n  dup2\n    /* \"#utility.yul\":4471:4476   */\n  dup2\n    /* \"#utility.yul\":4467:4483   */\n  mul\n    /* \"#utility.yul\":4458:4483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:4489   */\ntag_82:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4495:4572   */\ntag_41:\n    /* \"#utility.yul\":4532:4539   */\n  0x00\n    /* \"#utility.yul\":4561:4566   */\n  dup2\n    /* \"#utility.yul\":4550:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4495:4572   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4578:4859   */\ntag_20:\n    /* \"#utility.yul\":4636:4641   */\n  0x00\n    /* \"#utility.yul\":4660:4683   */\n  tag_100\n    /* \"#utility.yul\":4678:4682   */\n  dup3\n    /* \"#utility.yul\":4660:4683   */\n  tag_41\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4652:4683   */\n  swap2\n  pop\n    /* \"#utility.yul\":4704:4729   */\n  tag_101\n    /* \"#utility.yul\":4720:4728   */\n  dup4\n    /* \"#utility.yul\":4704:4729   */\n  tag_34\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4692:4729   */\n  swap3\n  pop\n    /* \"#utility.yul\":4748:4852   */\n  tag_102\n    /* \"#utility.yul\":4785:4851   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4775:4783   */\n  dup5\n    /* \"#utility.yul\":4769:4773   */\n  dup5\n    /* \"#utility.yul\":4748:4852   */\n  tag_40\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4739:4852   */\n  swap1\n  pop\n    /* \"#utility.yul\":4578:4859   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4865:5275   */\ntag_22:\n    /* \"#utility.yul\":4905:4912   */\n  0x00\n    /* \"#utility.yul\":4928:4948   */\n  tag_104\n    /* \"#utility.yul\":4946:4947   */\n  dup3\n    /* \"#utility.yul\":4928:4948   */\n  tag_41\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4923:4948   */\n  swap2\n  pop\n    /* \"#utility.yul\":4962:4982   */\n  tag_105\n    /* \"#utility.yul\":4980:4981   */\n  dup4\n    /* \"#utility.yul\":4962:4982   */\n  tag_41\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4957:4982   */\n  swap3\n  pop\n    /* \"#utility.yul\":5017:5018   */\n  dup3\n    /* \"#utility.yul\":5014:5015   */\n  dup3\n    /* \"#utility.yul\":5010:5019   */\n  mul\n    /* \"#utility.yul\":5039:5069   */\n  tag_106\n    /* \"#utility.yul\":5057:5068   */\n  dup2\n    /* \"#utility.yul\":5039:5069   */\n  tag_41\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5028:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":5218:5219   */\n  dup3\n    /* \"#utility.yul\":5209:5216   */\n  dup3\n    /* \"#utility.yul\":5205:5220   */\n  div\n    /* \"#utility.yul\":5202:5203   */\n  dup5\n    /* \"#utility.yul\":5199:5221   */\n  eq\n    /* \"#utility.yul\":5179:5180   */\n  dup4\n    /* \"#utility.yul\":5172:5181   */\n  iszero\n    /* \"#utility.yul\":5152:5235   */\n  or\n    /* \"#utility.yul\":5129:5268   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":5248:5266   */\n  tag_108\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5129:5268   */\ntag_107:\n    /* \"#utility.yul\":4913:5275   */\n  pop\n    /* \"#utility.yul\":4865:5275   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\ntag_23:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CREDIWhale.sol\":256:1008  contract CREDIWhale is Ownable, ICREDIWhale  ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8ef1e259\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8ef1e259\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9a3bfdf5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xffdd60f9\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x6db08f25\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/CREDIWhale.sol\":310:340  address immutable public CREDI */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/CREDIWhale.sol\":310:340  address immutable public CREDI */\n    tag_12:\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n    tag_23:\n        /* \"contracts/CREDIWhale.sol\":634:638  bool */\n      0x00\n        /* \"contracts/CREDIWhale.sol\":704:719  _whaleThreshold */\n      sload(0x01)\n        /* \"contracts/CREDIWhale.sol\":670:675  CREDI */\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n        /* \"contracts/CREDIWhale.sol\":663:686  IERC20(CREDI).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/CREDIWhale.sol\":687:699  user_address */\n      dup5\n        /* \"contracts/CREDIWhale.sol\":663:700  IERC20(CREDI).balanceOf(user_address) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/CREDIWhale.sol\":663:719  IERC20(CREDI).balanceOf(user_address) >= _whaleThreshold */\n      lt\n      iszero\n        /* \"contracts/CREDIWhale.sol\":656:719  return IERC20(CREDI).balanceOf(user_address) >= _whaleThreshold */\n      swap1\n      pop\n        /* \"contracts/CREDIWhale.sol\":572:727  function isWhale(address user_address) external view returns (bool)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n    tag_27:\n        /* \"contracts/CREDIWhale.sol\":951:955  uint */\n      0x00\n        /* \"contracts/CREDIWhale.sol\":980:995  _whaleThreshold */\n      sload(0x01)\n        /* \"contracts/CREDIWhale.sol\":973:995  return _whaleThreshold */\n      swap1\n      pop\n        /* \"contracts/CREDIWhale.sol\":902:1003  function whaleThreshold() external view returns (uint)... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/CREDIWhale.sol\":869:874  CREDI */\n      immutable(\"0x7d94b1fd5befe75fac04677148728067a5c7750c4535d59cf8d692301dae078c\")\n        /* \"contracts/CREDIWhale.sol\":853:884  IERC20_Decimals(CREDI).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/CREDIWhale.sol\":853:886  IERC20_Decimals(CREDI).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/CREDIWhale.sol\":849:851  10 */\n      0x0a\n        /* \"contracts/CREDIWhale.sol\":849:886  10**IERC20_Decimals(CREDI).decimals() */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/CREDIWhale.sol\":835:848  new_threshold */\n      dup2\n        /* \"contracts/CREDIWhale.sol\":835:886  new_threshold*10**IERC20_Decimals(CREDI).decimals() */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/CREDIWhale.sol\":817:832  _whaleThreshold */\n      0x01\n        /* \"contracts/CREDIWhale.sol\":817:886  _whaleThreshold = new_threshold*10**IERC20_Decimals(CREDI).decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CREDIWhale.sol\":735:894  function setWhaleThreshold(uint new_threshold) external onlyOwner... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_72\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_77:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_78:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_102\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_77\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_79:\n        /* \"#utility.yul\":328:352   */\n      tag_104\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_106\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_79\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_81:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      0x00\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_83:\n        /* \"#utility.yul\":993:1017   */\n      tag_111\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_112:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_84:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_114\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_83\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_22:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_117\n      tag_81\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1269:1388   */\n    tag_116:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_118\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_84\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_85:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_86:\n        /* \"#utility.yul\":1705:1726   */\n      tag_121\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_25:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_123\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_86\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2032   */\n    tag_87:\n        /* \"#utility.yul\":1992:1999   */\n      0x00\n        /* \"#utility.yul\":2021:2026   */\n      dup2\n        /* \"#utility.yul\":2010:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2156   */\n    tag_88:\n        /* \"#utility.yul\":2125:2149   */\n      tag_126\n        /* \"#utility.yul\":2143:2148   */\n      dup2\n        /* \"#utility.yul\":2125:2149   */\n      tag_87\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2120:2123   */\n      dup3\n        /* \"#utility.yul\":2113:2150   */\n      mstore\n        /* \"#utility.yul\":2038:2156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2162:2384   */\n    tag_29:\n        /* \"#utility.yul\":2255:2259   */\n      0x00\n        /* \"#utility.yul\":2293:2295   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2278:2296   */\n      add\n        /* \"#utility.yul\":2270:2296   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2377   */\n      tag_128\n        /* \"#utility.yul\":2374:2375   */\n      0x00\n        /* \"#utility.yul\":2363:2372   */\n      dup4\n        /* \"#utility.yul\":2359:2376   */\n      add\n        /* \"#utility.yul\":2350:2356   */\n      dup5\n        /* \"#utility.yul\":2306:2377   */\n      tag_88\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2162:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_89:\n        /* \"#utility.yul\":2463:2487   */\n      tag_130\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      0x00\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_131:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_90:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_133\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_35:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_136\n      tag_81\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2739:2858   */\n    tag_135:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_137\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_90\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3141   */\n    tag_91:\n        /* \"#utility.yul\":3055:3060   */\n      0x00\n        /* \"#utility.yul\":3086:3092   */\n      dup2\n        /* \"#utility.yul\":3080:3093   */\n      mload\n        /* \"#utility.yul\":3071:3093   */\n      swap1\n      pop\n        /* \"#utility.yul\":3102:3135   */\n      tag_139\n        /* \"#utility.yul\":3129:3134   */\n      dup2\n        /* \"#utility.yul\":3102:3135   */\n      tag_89\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2998:3141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3147:3498   */\n    tag_49:\n        /* \"#utility.yul\":3217:3223   */\n      0x00\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3254:3263   */\n      dup3\n        /* \"#utility.yul\":3245:3252   */\n      dup5\n        /* \"#utility.yul\":3241:3264   */\n      sub\n        /* \"#utility.yul\":3237:3269   */\n      slt\n        /* \"#utility.yul\":3234:3353   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3272:3351   */\n      tag_142\n      tag_81\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3234:3353   */\n    tag_141:\n        /* \"#utility.yul\":3392:3393   */\n      0x00\n        /* \"#utility.yul\":3417:3481   */\n      tag_143\n        /* \"#utility.yul\":3473:3480   */\n      dup5\n        /* \"#utility.yul\":3464:3470   */\n      dup3\n        /* \"#utility.yul\":3453:3462   */\n      dup6\n        /* \"#utility.yul\":3449:3471   */\n      add\n        /* \"#utility.yul\":3417:3481   */\n      tag_91\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3407:3481   */\n      swap2\n      pop\n        /* \"#utility.yul\":3363:3491   */\n      pop\n        /* \"#utility.yul\":3147:3498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3504:3590   */\n    tag_92:\n        /* \"#utility.yul\":3539:3546   */\n      0x00\n        /* \"#utility.yul\":3579:3583   */\n      0xff\n        /* \"#utility.yul\":3572:3577   */\n      dup3\n        /* \"#utility.yul\":3568:3584   */\n      and\n        /* \"#utility.yul\":3557:3584   */\n      swap1\n      pop\n        /* \"#utility.yul\":3504:3590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3714   */\n    tag_93:\n        /* \"#utility.yul\":3667:3689   */\n      tag_146\n        /* \"#utility.yul\":3683:3688   */\n      dup2\n        /* \"#utility.yul\":3667:3689   */\n      tag_92\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3660:3665   */\n      dup2\n        /* \"#utility.yul\":3657:3690   */\n      eq\n        /* \"#utility.yul\":3647:3708   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":3704:3705   */\n      0x00\n        /* \"#utility.yul\":3701:3702   */\n      0x00\n        /* \"#utility.yul\":3694:3706   */\n      revert\n        /* \"#utility.yul\":3647:3708   */\n    tag_147:\n        /* \"#utility.yul\":3596:3714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3720:3859   */\n    tag_94:\n        /* \"#utility.yul\":3775:3780   */\n      0x00\n        /* \"#utility.yul\":3806:3812   */\n      dup2\n        /* \"#utility.yul\":3800:3813   */\n      mload\n        /* \"#utility.yul\":3791:3813   */\n      swap1\n      pop\n        /* \"#utility.yul\":3822:3853   */\n      tag_149\n        /* \"#utility.yul\":3847:3852   */\n      dup2\n        /* \"#utility.yul\":3822:3853   */\n      tag_93\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3720:3859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3865:4212   */\n    tag_63:\n        /* \"#utility.yul\":3933:3939   */\n      0x00\n        /* \"#utility.yul\":3982:3984   */\n      0x20\n        /* \"#utility.yul\":3970:3979   */\n      dup3\n        /* \"#utility.yul\":3961:3968   */\n      dup5\n        /* \"#utility.yul\":3957:3980   */\n      sub\n        /* \"#utility.yul\":3953:3985   */\n      slt\n        /* \"#utility.yul\":3950:4069   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3988:4067   */\n      tag_152\n      tag_81\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3950:4069   */\n    tag_151:\n        /* \"#utility.yul\":4108:4109   */\n      0x00\n        /* \"#utility.yul\":4133:4195   */\n      tag_153\n        /* \"#utility.yul\":4187:4194   */\n      dup5\n        /* \"#utility.yul\":4178:4184   */\n      dup3\n        /* \"#utility.yul\":4167:4176   */\n      dup6\n        /* \"#utility.yul\":4163:4185   */\n      add\n        /* \"#utility.yul\":4133:4195   */\n      tag_94\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4123:4195   */\n      swap2\n      pop\n        /* \"#utility.yul\":4079:4205   */\n      pop\n        /* \"#utility.yul\":3865:4212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4398   */\n    tag_95:\n        /* \"#utility.yul\":4266:4343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4263:4264   */\n      0x00\n        /* \"#utility.yul\":4256:4344   */\n      mstore\n        /* \"#utility.yul\":4363:4367   */\n      0x11\n        /* \"#utility.yul\":4360:4361   */\n      0x04\n        /* \"#utility.yul\":4353:4368   */\n      mstore\n        /* \"#utility.yul\":4387:4391   */\n      0x24\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4377:4392   */\n      revert\n        /* \"#utility.yul\":4404:4506   */\n    tag_96:\n        /* \"#utility.yul\":4446:4454   */\n      0x00\n        /* \"#utility.yul\":4493:4498   */\n      dup2\n        /* \"#utility.yul\":4490:4491   */\n      0x01\n        /* \"#utility.yul\":4486:4499   */\n      shr\n        /* \"#utility.yul\":4465:4499   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4512:5360   */\n    tag_97:\n        /* \"#utility.yul\":4573:4578   */\n      0x00\n        /* \"#utility.yul\":4580:4584   */\n      0x00\n        /* \"#utility.yul\":4604:4610   */\n      dup3\n        /* \"#utility.yul\":4595:4610   */\n      swap2\n      pop\n        /* \"#utility.yul\":4628:4633   */\n      dup4\n        /* \"#utility.yul\":4619:4633   */\n      swap1\n      pop\n        /* \"#utility.yul\":4642:5354   */\n    tag_157:\n        /* \"#utility.yul\":4663:4664   */\n      0x01\n        /* \"#utility.yul\":4653:4661   */\n      dup6\n        /* \"#utility.yul\":4650:4665   */\n      gt\n        /* \"#utility.yul\":4642:5354   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":4758:4762   */\n      dup1\n        /* \"#utility.yul\":4753:4756   */\n      dup7\n        /* \"#utility.yul\":4749:4763   */\n      div\n        /* \"#utility.yul\":4743:4747   */\n      dup2\n        /* \"#utility.yul\":4740:4764   */\n      gt\n        /* \"#utility.yul\":4737:4787   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4767:4785   */\n      tag_161\n      tag_95\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4737:4787   */\n    tag_160:\n        /* \"#utility.yul\":4817:4818   */\n      0x01\n        /* \"#utility.yul\":4807:4815   */\n      dup6\n        /* \"#utility.yul\":4803:4819   */\n      and\n        /* \"#utility.yul\":4800:5251   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5232:5236   */\n      dup1\n        /* \"#utility.yul\":5225:5230   */\n      dup3\n        /* \"#utility.yul\":5221:5237   */\n      mul\n        /* \"#utility.yul\":5212:5237   */\n      swap2\n      pop\n        /* \"#utility.yul\":4800:5251   */\n    tag_162:\n        /* \"#utility.yul\":5282:5286   */\n      dup1\n        /* \"#utility.yul\":5276:5280   */\n      dup2\n        /* \"#utility.yul\":5272:5287   */\n      mul\n        /* \"#utility.yul\":5264:5287   */\n      swap1\n      pop\n        /* \"#utility.yul\":5312:5344   */\n      tag_163\n        /* \"#utility.yul\":5335:5343   */\n      dup6\n        /* \"#utility.yul\":5312:5344   */\n      tag_96\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5300:5344   */\n      swap5\n      pop\n        /* \"#utility.yul\":4642:5354   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":4512:5360   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5366:6439   */\n    tag_98:\n        /* \"#utility.yul\":5420:5425   */\n      0x00\n        /* \"#utility.yul\":5611:5619   */\n      dup3\n        /* \"#utility.yul\":5601:5641   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5632:5633   */\n      0x01\n        /* \"#utility.yul\":5623:5633   */\n      swap1\n      pop\n        /* \"#utility.yul\":5634:5639   */\n      jump(tag_164)\n        /* \"#utility.yul\":5601:5641   */\n    tag_165:\n        /* \"#utility.yul\":5660:5664   */\n      dup2\n        /* \"#utility.yul\":5650:5686   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":5677:5678   */\n      0x00\n        /* \"#utility.yul\":5668:5678   */\n      swap1\n      pop\n        /* \"#utility.yul\":5679:5684   */\n      jump(tag_164)\n        /* \"#utility.yul\":5650:5686   */\n    tag_166:\n        /* \"#utility.yul\":5746:5750   */\n      dup2\n        /* \"#utility.yul\":5794:5795   */\n      0x01\n        /* \"#utility.yul\":5789:5816   */\n      dup2\n      eq\n      tag_168\n      jumpi\n        /* \"#utility.yul\":5830:5831   */\n      0x02\n        /* \"#utility.yul\":5825:6016   */\n      dup2\n      eq\n      tag_169\n      jumpi\n        /* \"#utility.yul\":5739:6016   */\n      jump(tag_167)\n        /* \"#utility.yul\":5789:5816   */\n    tag_168:\n        /* \"#utility.yul\":5807:5808   */\n      0x01\n        /* \"#utility.yul\":5798:5808   */\n      swap2\n      pop\n        /* \"#utility.yul\":5809:5814   */\n      pop\n      jump(tag_164)\n        /* \"#utility.yul\":5825:6016   */\n    tag_169:\n        /* \"#utility.yul\":5870:5873   */\n      0xff\n        /* \"#utility.yul\":5860:5868   */\n      dup5\n        /* \"#utility.yul\":5857:5874   */\n      gt\n        /* \"#utility.yul\":5854:5897   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":5877:5895   */\n      tag_171\n      tag_95\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5854:5897   */\n    tag_170:\n        /* \"#utility.yul\":5926:5934   */\n      dup4\n        /* \"#utility.yul\":5923:5924   */\n      0x02\n        /* \"#utility.yul\":5919:5935   */\n      exp\n        /* \"#utility.yul\":5910:5935   */\n      swap2\n      pop\n        /* \"#utility.yul\":5961:5964   */\n      dup5\n        /* \"#utility.yul\":5954:5959   */\n      dup3\n        /* \"#utility.yul\":5951:5965   */\n      gt\n        /* \"#utility.yul\":5948:5988   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":5968:5986   */\n      tag_173\n      tag_95\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5948:5988   */\n    tag_172:\n        /* \"#utility.yul\":6001:6006   */\n      pop\n      jump(tag_164)\n        /* \"#utility.yul\":5739:6016   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":6125:6127   */\n      0x20\n        /* \"#utility.yul\":6115:6123   */\n      dup4\n        /* \"#utility.yul\":6112:6128   */\n      lt\n        /* \"#utility.yul\":6106:6109   */\n      0x0133\n        /* \"#utility.yul\":6100:6104   */\n      dup4\n        /* \"#utility.yul\":6097:6110   */\n      lt\n        /* \"#utility.yul\":6093:6129   */\n      and\n        /* \"#utility.yul\":6075:6077   */\n      0x4e\n        /* \"#utility.yul\":6065:6073   */\n      dup5\n        /* \"#utility.yul\":6062:6078   */\n      lt\n        /* \"#utility.yul\":6057:6059   */\n      0x0b\n        /* \"#utility.yul\":6051:6055   */\n      dup5\n        /* \"#utility.yul\":6048:6060   */\n      lt\n        /* \"#utility.yul\":6044:6079   */\n      and\n        /* \"#utility.yul\":6028:6139   */\n      or\n        /* \"#utility.yul\":6025:6271   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":6181:6189   */\n      dup3\n        /* \"#utility.yul\":6175:6179   */\n      dup3\n        /* \"#utility.yul\":6171:6190   */\n      exp\n        /* \"#utility.yul\":6162:6190   */\n      swap1\n      pop\n        /* \"#utility.yul\":6216:6219   */\n      dup4\n        /* \"#utility.yul\":6209:6214   */\n      dup2\n        /* \"#utility.yul\":6206:6220   */\n      gt\n        /* \"#utility.yul\":6203:6243   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":6223:6241   */\n      tag_176\n      tag_95\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6203:6243   */\n    tag_175:\n        /* \"#utility.yul\":6256:6261   */\n      jump(tag_164)\n        /* \"#utility.yul\":6025:6271   */\n    tag_174:\n        /* \"#utility.yul\":6296:6338   */\n      tag_177\n        /* \"#utility.yul\":6334:6337   */\n      dup5\n        /* \"#utility.yul\":6324:6332   */\n      dup5\n        /* \"#utility.yul\":6318:6322   */\n      dup5\n        /* \"#utility.yul\":6315:6316   */\n      0x01\n        /* \"#utility.yul\":6296:6338   */\n      tag_97\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6281:6338   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":6370:6374   */\n      dup2\n        /* \"#utility.yul\":6365:6368   */\n      dup5\n        /* \"#utility.yul\":6361:6375   */\n      div\n        /* \"#utility.yul\":6354:6359   */\n      dup2\n        /* \"#utility.yul\":6351:6376   */\n      gt\n        /* \"#utility.yul\":6348:6399   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":6379:6397   */\n      tag_179\n      tag_95\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6348:6399   */\n    tag_178:\n        /* \"#utility.yul\":6428:6432   */\n      dup2\n        /* \"#utility.yul\":6421:6426   */\n      dup2\n        /* \"#utility.yul\":6417:6433   */\n      mul\n        /* \"#utility.yul\":6408:6433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5366:6439   */\n    tag_164:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6445:6726   */\n    tag_65:\n        /* \"#utility.yul\":6503:6508   */\n      0x00\n        /* \"#utility.yul\":6527:6550   */\n      tag_181\n        /* \"#utility.yul\":6545:6549   */\n      dup3\n        /* \"#utility.yul\":6527:6550   */\n      tag_87\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6519:6550   */\n      swap2\n      pop\n        /* \"#utility.yul\":6571:6596   */\n      tag_182\n        /* \"#utility.yul\":6587:6595   */\n      dup4\n        /* \"#utility.yul\":6571:6596   */\n      tag_92\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6559:6596   */\n      swap3\n      pop\n        /* \"#utility.yul\":6615:6719   */\n      tag_183\n        /* \"#utility.yul\":6652:6718   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6642:6650   */\n      dup5\n        /* \"#utility.yul\":6636:6640   */\n      dup5\n        /* \"#utility.yul\":6615:6719   */\n      tag_98\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6606:6719   */\n      swap1\n      pop\n        /* \"#utility.yul\":6445:6726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:7142   */\n    tag_67:\n        /* \"#utility.yul\":6772:6779   */\n      0x00\n        /* \"#utility.yul\":6795:6815   */\n      tag_185\n        /* \"#utility.yul\":6813:6814   */\n      dup3\n        /* \"#utility.yul\":6795:6815   */\n      tag_87\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6790:6815   */\n      swap2\n      pop\n        /* \"#utility.yul\":6829:6849   */\n      tag_186\n        /* \"#utility.yul\":6847:6848   */\n      dup4\n        /* \"#utility.yul\":6829:6849   */\n      tag_87\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6824:6849   */\n      swap3\n      pop\n        /* \"#utility.yul\":6884:6885   */\n      dup3\n        /* \"#utility.yul\":6881:6882   */\n      dup3\n        /* \"#utility.yul\":6877:6886   */\n      mul\n        /* \"#utility.yul\":6906:6936   */\n      tag_187\n        /* \"#utility.yul\":6924:6935   */\n      dup2\n        /* \"#utility.yul\":6906:6936   */\n      tag_87\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6895:6936   */\n      swap2\n      pop\n        /* \"#utility.yul\":7085:7086   */\n      dup3\n        /* \"#utility.yul\":7076:7083   */\n      dup3\n        /* \"#utility.yul\":7072:7087   */\n      div\n        /* \"#utility.yul\":7069:7070   */\n      dup5\n        /* \"#utility.yul\":7066:7088   */\n      eq\n        /* \"#utility.yul\":7046:7047   */\n      dup4\n        /* \"#utility.yul\":7039:7048   */\n      iszero\n        /* \"#utility.yul\":7019:7102   */\n      or\n        /* \"#utility.yul\":6996:7135   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":7115:7133   */\n      tag_189\n      tag_95\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6996:7135   */\n    tag_188:\n        /* \"#utility.yul\":6780:7142   */\n      pop\n        /* \"#utility.yul\":6732:7142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cb7b3b85fdb55e1748176087a1bb8412d91e06209a1009810a786a0c927b8bea64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_296": {
									"entryPoint": null,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 398,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 405,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5278:6",
										"nodeType": "YulBlock",
										"src": "0:5278:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											},
											{
												"body": {
													"nativeSrc": "1267:53:6",
													"nodeType": "YulBlock",
													"src": "1267:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:6"
																		},
																		"nativeSrc": "1289:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:6"
																},
																"nativeSrc": "1277:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:6"
															},
															"nativeSrc": "1277:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:6",
														"nodeType": "YulTypedName",
														"src": "1255:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:6",
														"nodeType": "YulTypedName",
														"src": "1262:3:6",
														"type": ""
													}
												],
												"src": "1202:118:6"
											},
											{
												"body": {
													"nativeSrc": "1424:124:6",
													"nodeType": "YulBlock",
													"src": "1424:124:6",
													"statements": [
														{
															"nativeSrc": "1434:26:6",
															"nodeType": "YulAssignment",
															"src": "1434:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:6"
																},
																"nativeSrc": "1442:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:6"
																		},
																		"nativeSrc": "1523:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:6"
																},
																"nativeSrc": "1470:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:6"
															},
															"nativeSrc": "1470:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:6",
														"nodeType": "YulTypedName",
														"src": "1396:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:6",
														"nodeType": "YulTypedName",
														"src": "1408:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:6",
														"nodeType": "YulTypedName",
														"src": "1419:4:6",
														"type": ""
													}
												],
												"src": "1326:222:6"
											},
											{
												"body": {
													"nativeSrc": "1597:43:6",
													"nodeType": "YulBlock",
													"src": "1597:43:6",
													"statements": [
														{
															"nativeSrc": "1607:27:6",
															"nodeType": "YulAssignment",
															"src": "1607:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1622:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1622:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1629:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1618:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1618:3:6"
																},
																"nativeSrc": "1618:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1618:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1607:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1607:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1554:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1579:5:6",
														"nodeType": "YulTypedName",
														"src": "1579:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1589:7:6",
														"nodeType": "YulTypedName",
														"src": "1589:7:6",
														"type": ""
													}
												],
												"src": "1554:86:6"
											},
											{
												"body": {
													"nativeSrc": "1687:77:6",
													"nodeType": "YulBlock",
													"src": "1687:77:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1742:16:6",
																"nodeType": "YulBlock",
																"src": "1742:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1751:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1751:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1754:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1754:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1744:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:6"
																			},
																			"nativeSrc": "1744:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1744:12:6"
																		},
																		"nativeSrc": "1744:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1744:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1710:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1710:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1733:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1733:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "1717:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "1717:15:6"
																				},
																				"nativeSrc": "1717:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1717:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1707:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1707:2:6"
																		},
																		"nativeSrc": "1707:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1700:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:6"
																},
																"nativeSrc": "1700:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1700:41:6"
															},
															"nativeSrc": "1697:61:6",
															"nodeType": "YulIf",
															"src": "1697:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1646:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1680:5:6",
														"nodeType": "YulTypedName",
														"src": "1680:5:6",
														"type": ""
													}
												],
												"src": "1646:118:6"
											},
											{
												"body": {
													"nativeSrc": "1831:78:6",
													"nodeType": "YulBlock",
													"src": "1831:78:6",
													"statements": [
														{
															"nativeSrc": "1841:22:6",
															"nodeType": "YulAssignment",
															"src": "1841:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1856:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1850:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:5:6"
																},
																"nativeSrc": "1850:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1841:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1841:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1897:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1897:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "1872:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "1872:24:6"
																},
																"nativeSrc": "1872:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1872:31:6"
															},
															"nativeSrc": "1872:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1872:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "1770:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1809:6:6",
														"nodeType": "YulTypedName",
														"src": "1809:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1817:3:6",
														"nodeType": "YulTypedName",
														"src": "1817:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1825:5:6",
														"nodeType": "YulTypedName",
														"src": "1825:5:6",
														"type": ""
													}
												],
												"src": "1770:139:6"
											},
											{
												"body": {
													"nativeSrc": "1990:272:6",
													"nodeType": "YulBlock",
													"src": "1990:272:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2036:83:6",
																"nodeType": "YulBlock",
																"src": "2036:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2038:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2038:77:6"
																			},
																			"nativeSrc": "2038:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2038:79:6"
																		},
																		"nativeSrc": "2038:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2011:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2020:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2007:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:6"
																		},
																		"nativeSrc": "2007:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2032:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2003:3:6"
																},
																"nativeSrc": "2003:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2003:32:6"
															},
															"nativeSrc": "2000:119:6",
															"nodeType": "YulIf",
															"src": "2000:119:6"
														},
														{
															"nativeSrc": "2129:126:6",
															"nodeType": "YulBlock",
															"src": "2129:126:6",
															"statements": [
																{
																	"nativeSrc": "2144:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2144:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2158:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2158:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2148:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2148:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2173:72:6",
																	"nodeType": "YulAssignment",
																	"src": "2173:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2217:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2217:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2228:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2228:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2213:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2213:3:6"
																				},
																				"nativeSrc": "2213:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2213:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2237:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2237:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "2183:29:6",
																			"nodeType": "YulIdentifier",
																			"src": "2183:29:6"
																		},
																		"nativeSrc": "2183:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2183:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2173:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2173:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "1915:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1960:9:6",
														"nodeType": "YulTypedName",
														"src": "1960:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1971:7:6",
														"nodeType": "YulTypedName",
														"src": "1971:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1983:6:6",
														"nodeType": "YulTypedName",
														"src": "1983:6:6",
														"type": ""
													}
												],
												"src": "1915:347:6"
											},
											{
												"body": {
													"nativeSrc": "2296:152:6",
													"nodeType": "YulBlock",
													"src": "2296:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2313:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2313:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2316:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2316:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:6"
																},
																"nativeSrc": "2306:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2306:88:6"
															},
															"nativeSrc": "2306:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2306:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2410:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2410:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2413:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:6"
																},
																"nativeSrc": "2403:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2403:15:6"
															},
															"nativeSrc": "2403:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2403:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2434:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2434:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:6"
																},
																"nativeSrc": "2427:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2427:15:6"
															},
															"nativeSrc": "2427:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2427:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2268:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2268:180:6"
											},
											{
												"body": {
													"nativeSrc": "2505:51:6",
													"nodeType": "YulBlock",
													"src": "2505:51:6",
													"statements": [
														{
															"nativeSrc": "2515:34:6",
															"nodeType": "YulAssignment",
															"src": "2515:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2540:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2540:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2543:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2543:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2536:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:6"
																},
																"nativeSrc": "2536:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2536:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2515:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2515:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "2454:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2486:5:6",
														"nodeType": "YulTypedName",
														"src": "2486:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2496:8:6",
														"nodeType": "YulTypedName",
														"src": "2496:8:6",
														"type": ""
													}
												],
												"src": "2454:102:6"
											},
											{
												"body": {
													"nativeSrc": "2635:775:6",
													"nodeType": "YulBlock",
													"src": "2635:775:6",
													"statements": [
														{
															"nativeSrc": "2645:15:6",
															"nodeType": "YulAssignment",
															"src": "2645:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "2654:6:6",
																"nodeType": "YulIdentifier",
																"src": "2654:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2645:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2645:5:6"
																}
															]
														},
														{
															"nativeSrc": "2669:14:6",
															"nodeType": "YulAssignment",
															"src": "2669:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "2678:5:6",
																"nodeType": "YulIdentifier",
																"src": "2678:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2669:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2727:677:6",
																"nodeType": "YulBlock",
																"src": "2727:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "2815:22:6",
																			"nodeType": "YulBlock",
																			"src": "2815:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2817:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "2817:16:6"
																						},
																						"nativeSrc": "2817:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2817:18:6"
																					},
																					"nativeSrc": "2817:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2817:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "2793:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2793:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "2803:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2803:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "2808:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2808:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "2799:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2799:3:6"
																					},
																					"nativeSrc": "2799:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2799:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "2790:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2790:2:6"
																			},
																			"nativeSrc": "2790:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2790:24:6"
																		},
																		"nativeSrc": "2787:50:6",
																		"nodeType": "YulIf",
																		"src": "2787:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "2882:419:6",
																			"nodeType": "YulBlock",
																			"src": "2882:419:6",
																			"statements": [
																				{
																					"nativeSrc": "3262:25:6",
																					"nodeType": "YulAssignment",
																					"src": "3262:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3275:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3275:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3282:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "3282:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3271:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3271:3:6"
																						},
																						"nativeSrc": "3271:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3271:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3262:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "3262:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "2857:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2867:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2853:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2853:3:6"
																			},
																			"nativeSrc": "2853:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2853:16:6"
																		},
																		"nativeSrc": "2850:451:6",
																		"nodeType": "YulIf",
																		"src": "2850:451:6"
																	},
																	{
																		"nativeSrc": "3314:23:6",
																		"nodeType": "YulAssignment",
																		"src": "3314:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3326:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3326:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3332:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3332:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3322:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3322:3:6"
																			},
																			"nativeSrc": "3322:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3322:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3314:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3314:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3350:44:6",
																		"nodeType": "YulAssignment",
																		"src": "3350:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3385:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3385:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "3362:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "3362:22:6"
																			},
																			"nativeSrc": "3362:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3362:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3350:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3350:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2703:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2703:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2713:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2713:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2700:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2700:2:6"
																},
																"nativeSrc": "2700:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2700:15:6"
															},
															"nativeSrc": "2692:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2716:2:6",
																"nodeType": "YulBlock",
																"src": "2716:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2696:3:6",
																"nodeType": "YulBlock",
																"src": "2696:3:6",
																"statements": []
															},
															"src": "2692:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2562:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "2590:6:6",
														"nodeType": "YulTypedName",
														"src": "2590:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "2598:5:6",
														"nodeType": "YulTypedName",
														"src": "2598:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2605:8:6",
														"nodeType": "YulTypedName",
														"src": "2605:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "2615:3:6",
														"nodeType": "YulTypedName",
														"src": "2615:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2623:5:6",
														"nodeType": "YulTypedName",
														"src": "2623:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2630:4:6",
														"nodeType": "YulTypedName",
														"src": "2630:4:6",
														"type": ""
													}
												],
												"src": "2562:848:6"
											},
											{
												"body": {
													"nativeSrc": "3476:1013:6",
													"nodeType": "YulBlock",
													"src": "3476:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3671:20:6",
																"nodeType": "YulBlock",
																"src": "3671:20:6",
																"statements": [
																	{
																		"nativeSrc": "3673:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3673:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3682:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3682:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3673:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3673:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3684:5:6",
																		"nodeType": "YulLeave",
																		"src": "3684:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3661:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3661:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3654:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:6"
																},
																"nativeSrc": "3654:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3654:16:6"
															},
															"nativeSrc": "3651:40:6",
															"nodeType": "YulIf",
															"src": "3651:40:6"
														},
														{
															"body": {
																"nativeSrc": "3716:20:6",
																"nodeType": "YulBlock",
																"src": "3716:20:6",
																"statements": [
																	{
																		"nativeSrc": "3718:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3718:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3727:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3727:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3718:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3718:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3729:5:6",
																		"nodeType": "YulLeave",
																		"src": "3729:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3710:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3710:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3703:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:6"
																},
																"nativeSrc": "3703:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3703:12:6"
															},
															"nativeSrc": "3700:36:6",
															"nodeType": "YulIf",
															"src": "3700:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3846:20:6",
																		"nodeType": "YulBlock",
																		"src": "3846:20:6",
																		"statements": [
																			{
																				"nativeSrc": "3848:10:6",
																				"nodeType": "YulAssignment",
																				"src": "3848:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3857:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3857:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3848:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3848:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3859:5:6",
																				"nodeType": "YulLeave",
																				"src": "3859:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3839:27:6",
																	"nodeType": "YulCase",
																	"src": "3839:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3844:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3844:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3890:176:6",
																		"nodeType": "YulBlock",
																		"src": "3890:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3925:22:6",
																					"nodeType": "YulBlock",
																					"src": "3925:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3927:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "3927:16:6"
																								},
																								"nativeSrc": "3927:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3927:18:6"
																							},
																							"nativeSrc": "3927:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3927:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3910:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3910:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3920:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3920:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3907:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3907:2:6"
																					},
																					"nativeSrc": "3907:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3907:17:6"
																				},
																				"nativeSrc": "3904:43:6",
																				"nodeType": "YulIf",
																				"src": "3904:43:6"
																			},
																			{
																				"nativeSrc": "3960:25:6",
																				"nodeType": "YulAssignment",
																				"src": "3960:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3973:1:6",
																							"nodeType": "YulLiteral",
																							"src": "3973:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "3976:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3976:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "3969:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3969:3:6"
																					},
																					"nativeSrc": "3969:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3969:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3960:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3960:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4016:22:6",
																					"nodeType": "YulBlock",
																					"src": "4016:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4018:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "4018:16:6"
																								},
																								"nativeSrc": "4018:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4018:18:6"
																							},
																							"nativeSrc": "4018:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4018:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "4004:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "4004:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "4011:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4011:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4001:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4001:2:6"
																					},
																					"nativeSrc": "4001:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4001:14:6"
																				},
																				"nativeSrc": "3998:40:6",
																				"nodeType": "YulIf",
																				"src": "3998:40:6"
																			},
																			{
																				"nativeSrc": "4051:5:6",
																				"nodeType": "YulLeave",
																				"src": "4051:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3875:191:6",
																	"nodeType": "YulCase",
																	"src": "3875:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3880:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3880:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3796:4:6",
																"nodeType": "YulIdentifier",
																"src": "3796:4:6"
															},
															"nativeSrc": "3789:277:6",
															"nodeType": "YulSwitch",
															"src": "3789:277:6"
														},
														{
															"body": {
																"nativeSrc": "4198:123:6",
																"nodeType": "YulBlock",
																"src": "4198:123:6",
																"statements": [
																	{
																		"nativeSrc": "4212:28:6",
																		"nodeType": "YulAssignment",
																		"src": "4212:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4225:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4225:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4231:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4231:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4221:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4221:3:6"
																			},
																			"nativeSrc": "4221:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4221:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4212:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4212:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4271:22:6",
																			"nodeType": "YulBlock",
																			"src": "4271:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4273:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "4273:16:6"
																						},
																						"nativeSrc": "4273:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4273:18:6"
																					},
																					"nativeSrc": "4273:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "4273:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "4259:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4259:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "4266:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4266:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4256:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4256:2:6"
																			},
																			"nativeSrc": "4256:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4256:14:6"
																		},
																		"nativeSrc": "4253:40:6",
																		"nodeType": "YulIf",
																		"src": "4253:40:6"
																	},
																	{
																		"nativeSrc": "4306:5:6",
																		"nodeType": "YulLeave",
																		"src": "4306:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4101:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "4101:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4107:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4107:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4098:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4098:2:6"
																				},
																				"nativeSrc": "4098:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4098:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4115:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4115:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4125:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4125:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4112:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:2:6"
																				},
																				"nativeSrc": "4112:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4094:3:6"
																		},
																		"nativeSrc": "4094:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4094:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4150:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "4150:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4156:3:6",
																						"nodeType": "YulLiteral",
																						"src": "4156:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4147:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4147:2:6"
																				},
																				"nativeSrc": "4147:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4147:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4165:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4165:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4175:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4175:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4162:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4162:2:6"
																				},
																				"nativeSrc": "4162:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4162:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4143:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:6"
																		},
																		"nativeSrc": "4143:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4078:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4078:2:6"
																},
																"nativeSrc": "4078:111:6",
																"nodeType": "YulFunctionCall",
																"src": "4078:111:6"
															},
															"nativeSrc": "4075:246:6",
															"nodeType": "YulIf",
															"src": "4075:246:6"
														},
														{
															"nativeSrc": "4331:57:6",
															"nodeType": "YulAssignment",
															"src": "4331:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4365:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "4368:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4368:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4374:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4374:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "4384:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4346:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4346:18:6"
																},
																"nativeSrc": "4346:42:6",
																"nodeType": "YulFunctionCall",
																"src": "4346:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4331:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4331:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "4338:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4338:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4427:22:6",
																"nodeType": "YulBlock",
																"src": "4427:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4429:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4429:16:6"
																			},
																			"nativeSrc": "4429:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:18:6"
																		},
																		"nativeSrc": "4429:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4429:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "4404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4404:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "4415:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4415:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "4420:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4420:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:6"
																		},
																		"nativeSrc": "4411:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4401:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4401:2:6"
																},
																"nativeSrc": "4401:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4401:25:6"
															},
															"nativeSrc": "4398:51:6",
															"nodeType": "YulIf",
															"src": "4398:51:6"
														},
														{
															"nativeSrc": "4458:25:6",
															"nodeType": "YulAssignment",
															"src": "4458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "4471:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4471:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "4478:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4467:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4467:3:6"
																},
																"nativeSrc": "4467:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4467:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4458:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4458:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3416:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3446:4:6",
														"nodeType": "YulTypedName",
														"src": "3446:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3452:8:6",
														"nodeType": "YulTypedName",
														"src": "3452:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "3462:3:6",
														"nodeType": "YulTypedName",
														"src": "3462:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3470:5:6",
														"nodeType": "YulTypedName",
														"src": "3470:5:6",
														"type": ""
													}
												],
												"src": "3416:1073:6"
											},
											{
												"body": {
													"nativeSrc": "4540:32:6",
													"nodeType": "YulBlock",
													"src": "4540:32:6",
													"statements": [
														{
															"nativeSrc": "4550:16:6",
															"nodeType": "YulAssignment",
															"src": "4550:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "4561:5:6",
																"nodeType": "YulIdentifier",
																"src": "4561:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4550:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4550:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4495:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4522:5:6",
														"nodeType": "YulTypedName",
														"src": "4522:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4532:7:6",
														"nodeType": "YulTypedName",
														"src": "4532:7:6",
														"type": ""
													}
												],
												"src": "4495:77:6"
											},
											{
												"body": {
													"nativeSrc": "4642:217:6",
													"nodeType": "YulBlock",
													"src": "4642:217:6",
													"statements": [
														{
															"nativeSrc": "4652:31:6",
															"nodeType": "YulAssignment",
															"src": "4652:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4678:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4678:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4660:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4660:17:6"
																},
																"nativeSrc": "4660:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4660:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4652:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4652:4:6"
																}
															]
														},
														{
															"nativeSrc": "4692:37:6",
															"nodeType": "YulAssignment",
															"src": "4692:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4720:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4720:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "4704:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "4704:15:6"
																},
																"nativeSrc": "4704:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4704:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "4692:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4692:8:6"
																}
															]
														},
														{
															"nativeSrc": "4739:113:6",
															"nodeType": "YulAssignment",
															"src": "4739:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4769:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4769:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4775:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4775:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:66:6",
																		"nodeType": "YulLiteral",
																		"src": "4785:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4748:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "4748:20:6"
																},
																"nativeSrc": "4748:104:6",
																"nodeType": "YulFunctionCall",
																"src": "4748:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4739:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4739:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4578:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4617:4:6",
														"nodeType": "YulTypedName",
														"src": "4617:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4623:8:6",
														"nodeType": "YulTypedName",
														"src": "4623:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4636:5:6",
														"nodeType": "YulTypedName",
														"src": "4636:5:6",
														"type": ""
													}
												],
												"src": "4578:281:6"
											},
											{
												"body": {
													"nativeSrc": "4913:362:6",
													"nodeType": "YulBlock",
													"src": "4913:362:6",
													"statements": [
														{
															"nativeSrc": "4923:25:6",
															"nodeType": "YulAssignment",
															"src": "4923:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4946:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4946:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4928:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4928:17:6"
																},
																"nativeSrc": "4928:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4928:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4923:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4923:1:6"
																}
															]
														},
														{
															"nativeSrc": "4957:25:6",
															"nodeType": "YulAssignment",
															"src": "4957:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4980:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4962:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4962:17:6"
																},
																"nativeSrc": "4962:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4962:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4957:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4957:1:6"
																}
															]
														},
														{
															"nativeSrc": "4991:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4991:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5014:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5014:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5017:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5017:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5010:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:6"
																},
																"nativeSrc": "5010:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5010:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4995:11:6",
																	"nodeType": "YulTypedName",
																	"src": "4995:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5028:41:6",
															"nodeType": "YulAssignment",
															"src": "5028:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5057:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "5057:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5039:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5039:17:6"
																},
																"nativeSrc": "5039:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5039:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5028:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5246:22:6",
																"nodeType": "YulBlock",
																"src": "5246:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5248:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5248:16:6"
																			},
																			"nativeSrc": "5248:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5248:18:6"
																		},
																		"nativeSrc": "5248:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5248:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5179:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5179:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5172:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5172:6:6"
																				},
																				"nativeSrc": "5172:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5202:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "5202:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5209:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "5209:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5218:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "5218:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5205:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5205:3:6"
																						},
																						"nativeSrc": "5205:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5205:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5199:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "5199:2:6"
																				},
																				"nativeSrc": "5199:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5199:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5152:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5152:2:6"
																		},
																		"nativeSrc": "5152:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5152:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:6"
																},
																"nativeSrc": "5132:113:6",
																"nodeType": "YulFunctionCall",
																"src": "5132:113:6"
															},
															"nativeSrc": "5129:139:6",
															"nodeType": "YulIf",
															"src": "5129:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4865:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4896:1:6",
														"nodeType": "YulTypedName",
														"src": "4896:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4899:1:6",
														"nodeType": "YulTypedName",
														"src": "4899:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4905:7:6",
														"nodeType": "YulTypedName",
														"src": "4905:7:6",
														"type": ""
													}
												],
												"src": "4865:410:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526207a120600155348015610016575f5ffd5b50604051610e84380380610e84833981810160405281019061003891906102b4565b61004661018e60201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100ad91906102ee565b60405180910390fd5b6100c58161019560201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610145573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610169919061033d565b600a61017591906104cd565b6001546101829190610517565b60018190555050610558565b5f33905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102838261025a565b9050919050565b61029381610279565b811461029d575f5ffd5b50565b5f815190506102ae8161028a565b92915050565b5f602082840312156102c9576102c8610256565b5b5f6102d6848285016102a0565b91505092915050565b6102e881610279565b82525050565b5f6020820190506103015f8301846102df565b92915050565b5f60ff82169050919050565b61031c81610307565b8114610326575f5ffd5b50565b5f8151905061033781610313565b92915050565b5f6020828403121561035257610351610256565b5b5f61035f84828501610329565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156103ea578086048111156103c6576103c5610368565b5b60018516156103d55780820291505b80810290506103e385610395565b94506103aa565b94509492505050565b5f8261040257600190506104bd565b8161040f575f90506104bd565b8160018114610425576002811461042f5761045e565b60019150506104bd565b60ff84111561044157610440610368565b5b8360020a91508482111561045857610457610368565b5b506104bd565b5060208310610133831016604e8410600b84101617156104935782820a90508381111561048e5761048d610368565b5b6104bd565b6104a084848460016103a1565b925090508184048111156104b7576104b6610368565b5b81810290505b9392505050565b5f819050919050565b5f6104d7826104c4565b91506104e283610307565b925061050f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846103f3565b905092915050565b5f610521826104c4565b915061052c836104c4565b925082820261053a816104c4565b9150828204841483151761055157610550610368565b5b5092915050565b60805161090661057e5f395f818161014d015281816101af01526102e501526109065ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80638ef1e259116100595780638ef1e259146100c55780639a3bfdf5146100f5578063f2fde38b14610113578063ffdd60f91461012f5761007b565b80636db08f251461007f578063715018a61461009d5780638da5cb5b146100a7575b5f5ffd5b61008761014b565b604051610094919061051e565b60405180910390f35b6100a561016f565b005b6100af610182565b6040516100bc919061051e565b60405180910390f35b6100df60048036038101906100da9190610565565b6101a9565b6040516100ec91906105aa565b60405180910390f35b6100fd61024e565b60405161010a91906105db565b60405180910390f35b61012d60048036038101906101289190610565565b610257565b005b6101496004803603810190610144919061061e565b6102db565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b610177610390565b6101805f610417565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610206919061051e565b602060405180830381865afa158015610221573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610245919061065d565b10159050919050565b5f600154905090565b61025f610390565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102cf575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102c6919061051e565b60405180910390fd5b6102d881610417565b50565b6102e3610390565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037091906106be565b600a61037c9190610845565b81610387919061088f565b60018190555050565b6103986104d8565b73ffffffffffffffffffffffffffffffffffffffff166103b6610182565b73ffffffffffffffffffffffffffffffffffffffff1614610415576103d96104d8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161040c919061051e565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610508826104df565b9050919050565b610518816104fe565b82525050565b5f6020820190506105315f83018461050f565b92915050565b5f5ffd5b610544816104fe565b811461054e575f5ffd5b50565b5f8135905061055f8161053b565b92915050565b5f6020828403121561057a57610579610537565b5b5f61058784828501610551565b91505092915050565b5f8115159050919050565b6105a481610590565b82525050565b5f6020820190506105bd5f83018461059b565b92915050565b5f819050919050565b6105d5816105c3565b82525050565b5f6020820190506105ee5f8301846105cc565b92915050565b6105fd816105c3565b8114610607575f5ffd5b50565b5f81359050610618816105f4565b92915050565b5f6020828403121561063357610632610537565b5b5f6106408482850161060a565b91505092915050565b5f81519050610657816105f4565b92915050565b5f6020828403121561067257610671610537565b5b5f61067f84828501610649565b91505092915050565b5f60ff82169050919050565b61069d81610688565b81146106a7575f5ffd5b50565b5f815190506106b881610694565b92915050565b5f602082840312156106d3576106d2610537565b5b5f6106e0848285016106aa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b600185111561076b57808604811115610747576107466106e9565b5b60018516156107565780820291505b808102905061076485610716565b945061072b565b94509492505050565b5f82610783576001905061083e565b81610790575f905061083e565b81600181146107a657600281146107b0576107df565b600191505061083e565b60ff8411156107c2576107c16106e9565b5b8360020a9150848211156107d9576107d86106e9565b5b5061083e565b5060208310610133831016604e8410600b84101617156108145782820a90508381111561080f5761080e6106e9565b5b61083e565b6108218484846001610722565b92509050818404811115610838576108376106e9565b5b81810290505b9392505050565b5f61084f826105c3565b915061085a83610688565b92506108877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610774565b905092915050565b5f610899826105c3565b91506108a4836105c3565b92508282026108b2816105c3565b915082820484148315176108c9576108c86106e9565b5b509291505056fea2646970667358221220cb7b3b85fdb55e1748176087a1bb8412d91e06209a1009810a786a0c927b8bea64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH3 0x7A120 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE84 CODESIZE SUB DUP1 PUSH2 0xE84 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x46 PUSH2 0x18E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x195 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x33D JUMP JUMPDEST PUSH1 0xA PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x558 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x283 DUP3 PUSH2 0x25A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x293 DUP2 PUSH2 0x279 JUMP JUMPDEST DUP2 EQ PUSH2 0x29D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AE DUP2 PUSH2 0x28A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x2C8 PUSH2 0x256 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D6 DUP5 DUP3 DUP6 ADD PUSH2 0x2A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E8 DUP2 PUSH2 0x279 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x301 PUSH0 DUP4 ADD DUP5 PUSH2 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31C DUP2 PUSH2 0x307 JUMP JUMPDEST DUP2 EQ PUSH2 0x326 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x337 DUP2 PUSH2 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x256 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x35F DUP5 DUP3 DUP6 ADD PUSH2 0x329 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x3EA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH2 0x3C5 PUSH2 0x368 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x3D5 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3E3 DUP6 PUSH2 0x395 JUMP JUMPDEST SWAP5 POP PUSH2 0x3AA JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x402 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4BD JUMP JUMPDEST DUP2 PUSH2 0x40F JUMPI PUSH0 SWAP1 POP PUSH2 0x4BD JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x425 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x42F JUMPI PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4BD JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x441 JUMPI PUSH2 0x440 PUSH2 0x368 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x458 JUMPI PUSH2 0x457 PUSH2 0x368 JUMP JUMPDEST JUMPDEST POP PUSH2 0x4BD JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x493 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x48E JUMPI PUSH2 0x48D PUSH2 0x368 JUMP JUMPDEST JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x4A0 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3A1 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0x368 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x4C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E2 DUP4 PUSH2 0x307 JUMP JUMPDEST SWAP3 POP PUSH2 0x50F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x3F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x521 DUP3 PUSH2 0x4C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x52C DUP4 PUSH2 0x4C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x53A DUP2 PUSH2 0x4C4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x551 JUMPI PUSH2 0x550 PUSH2 0x368 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x906 PUSH2 0x57E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x14D ADD MSTORE DUP2 DUP2 PUSH2 0x1AF ADD MSTORE PUSH2 0x2E5 ADD MSTORE PUSH2 0x906 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EF1E259 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8EF1E259 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9A3BFDF5 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xFFDD60F9 EQ PUSH2 0x12F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x180 PUSH0 PUSH2 0x417 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x65D JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x390 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x390 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0xA PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x845 JUMP JUMPDEST DUP2 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x398 PUSH2 0x4D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B6 PUSH2 0x182 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH2 0x3D9 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x508 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH0 DUP4 ADD DUP5 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x544 DUP2 PUSH2 0x4FE JUMP JUMPDEST DUP2 EQ PUSH2 0x54E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55F DUP2 PUSH2 0x53B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x587 DUP5 DUP3 DUP6 ADD PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x590 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH0 DUP4 ADD DUP5 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EE PUSH0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FD DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x607 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x618 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP3 DUP6 ADD PUSH2 0x60A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x657 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x672 JUMPI PUSH2 0x671 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x67F DUP5 DUP3 DUP6 ADD PUSH2 0x649 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69D DUP2 PUSH2 0x688 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B8 DUP2 PUSH2 0x694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E0 DUP5 DUP3 DUP6 ADD PUSH2 0x6AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x76B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x747 JUMPI PUSH2 0x746 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x756 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x764 DUP6 PUSH2 0x716 JUMP JUMPDEST SWAP5 POP PUSH2 0x72B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x783 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x83E JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH0 SWAP1 POP PUSH2 0x83E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7A6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7B0 JUMPI PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x83E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST POP PUSH2 0x83E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x814 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH2 0x821 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x722 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84F DUP3 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x85A DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP3 POP PUSH2 0x887 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x899 DUP3 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x8B2 DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH28 0x3B85FDB55E1748176087A1BB8412D91E06209A1009810A786A0C927B DUP12 0xEA PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "256:752:3:-:0;;;378:6;347:37;;393:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;429:12;:10;;;:12;;:::i;:::-;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;468:6:3::1;460:14;;;;;;;;::::0;::::1;539:5;;523:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;519:2;:37;;;;:::i;:::-;503:15;;:53;;;;:::i;:::-;485:15;:71;;;;393:171:::0;256:752;;656:96:2;709:7;735:10;728:17;;656:96;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:86::-;1589:7;1629:4;1622:5;1618:16;1607:27;;1554:86;;;:::o;1646:118::-;1717:22;1733:5;1717:22;:::i;:::-;1710:5;1707:33;1697:61;;1754:1;1751;1744:12;1697:61;1646:118;:::o;1770:139::-;1825:5;1856:6;1850:13;1841:22;;1872:31;1897:5;1872:31;:::i;:::-;1770:139;;;;:::o;1915:347::-;1983:6;2032:2;2020:9;2011:7;2007:23;2003:32;2000:119;;;2038:79;;:::i;:::-;2000:119;2158:1;2183:62;2237:7;2228:6;2217:9;2213:22;2183:62;:::i;:::-;2173:72;;2129:126;1915:347;;;;:::o;2268:180::-;2316:77;2313:1;2306:88;2413:4;2410:1;2403:15;2437:4;2434:1;2427:15;2454:102;2496:8;2543:5;2540:1;2536:13;2515:34;;2454:102;;;:::o;2562:848::-;2623:5;2630:4;2654:6;2645:15;;2678:5;2669:14;;2692:712;2713:1;2703:8;2700:15;2692:712;;;2808:4;2803:3;2799:14;2793:4;2790:24;2787:50;;;2817:18;;:::i;:::-;2787:50;2867:1;2857:8;2853:16;2850:451;;;3282:4;3275:5;3271:16;3262:25;;2850:451;3332:4;3326;3322:15;3314:23;;3362:32;3385:8;3362:32;:::i;:::-;3350:44;;2692:712;;;2562:848;;;;;;;:::o;3416:1073::-;3470:5;3661:8;3651:40;;3682:1;3673:10;;3684:5;;3651:40;3710:4;3700:36;;3727:1;3718:10;;3729:5;;3700:36;3796:4;3844:1;3839:27;;;;3880:1;3875:191;;;;3789:277;;3839:27;3857:1;3848:10;;3859:5;;;3875:191;3920:3;3910:8;3907:17;3904:43;;;3927:18;;:::i;:::-;3904:43;3976:8;3973:1;3969:16;3960:25;;4011:3;4004:5;4001:14;3998:40;;;4018:18;;:::i;:::-;3998:40;4051:5;;;3789:277;;4175:2;4165:8;4162:16;4156:3;4150:4;4147:13;4143:36;4125:2;4115:8;4112:16;4107:2;4101:4;4098:12;4094:35;4078:111;4075:246;;;4231:8;4225:4;4221:19;4212:28;;4266:3;4259:5;4256:14;4253:40;;;4273:18;;:::i;:::-;4253:40;4306:5;;4075:246;4346:42;4384:3;4374:8;4368:4;4365:1;4346:42;:::i;:::-;4331:57;;;;4420:4;4415:3;4411:14;4404:5;4401:25;4398:51;;;4429:18;;:::i;:::-;4398:51;4478:4;4471:5;4467:16;4458:25;;3416:1073;;;;;;:::o;4495:77::-;4532:7;4561:5;4550:16;;4495:77;;;:::o;4578:281::-;4636:5;4660:23;4678:4;4660:23;:::i;:::-;4652:31;;4704:25;4720:8;4704:25;:::i;:::-;4692:37;;4748:104;4785:66;4775:8;4769:4;4748:104;:::i;:::-;4739:113;;4578:281;;;;:::o;4865:410::-;4905:7;4928:20;4946:1;4928:20;:::i;:::-;4923:25;;4962:20;4980:1;4962:20;:::i;:::-;4957:25;;5017:1;5014;5010:9;5039:30;5057:11;5039:30;:::i;:::-;5028:41;;5218:1;5209:7;5205:15;5202:1;5199:22;5179:1;5172:9;5152:83;5129:139;;5248:18;;:::i;:::-;5129:139;4913:362;4865:410;;;;:::o;256:752:3:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CREDI_267": {
									"entryPoint": 331,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 912,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 1240,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1047,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isWhale_313": {
									"entryPoint": 425,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 386,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 367,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setWhaleThreshold_333": {
									"entryPoint": 731,
									"id": 333,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 599,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whaleThreshold_341": {
									"entryPoint": 590,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7145:6",
										"nodeType": "YulBlock",
										"src": "0:7145:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "633:35:6",
													"nodeType": "YulBlock",
													"src": "633:35:6",
													"statements": [
														{
															"nativeSrc": "643:19:6",
															"nodeType": "YulAssignment",
															"src": "643:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:6"
																},
																"nativeSrc": "653:9:6",
																"nodeType": "YulFunctionCall",
																"src": "653:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:6",
														"nodeType": "YulTypedName",
														"src": "626:6:6",
														"type": ""
													}
												],
												"src": "593:75:6"
											},
											{
												"body": {
													"nativeSrc": "763:28:6",
													"nodeType": "YulBlock",
													"src": "763:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:6",
																		"nodeType": "YulLiteral",
																		"src": "780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:6",
																		"nodeType": "YulLiteral",
																		"src": "783:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:6"
																},
																"nativeSrc": "773:12:6",
																"nodeType": "YulFunctionCall",
																"src": "773:12:6"
															},
															"nativeSrc": "773:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:6"
											},
											{
												"body": {
													"nativeSrc": "886:28:6",
													"nodeType": "YulBlock",
													"src": "886:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:6",
																		"nodeType": "YulLiteral",
																		"src": "903:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:6",
																		"nodeType": "YulLiteral",
																		"src": "906:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:6"
																},
																"nativeSrc": "896:12:6",
																"nodeType": "YulFunctionCall",
																"src": "896:12:6"
															},
															"nativeSrc": "896:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:6"
											},
											{
												"body": {
													"nativeSrc": "963:79:6",
													"nodeType": "YulBlock",
													"src": "963:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:6",
																"nodeType": "YulBlock",
																"src": "1020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:6"
																			},
																			"nativeSrc": "1022:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:6"
																		},
																		"nativeSrc": "1022:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:6"
																				},
																				"nativeSrc": "993:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:6"
																		},
																		"nativeSrc": "983:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:6"
																},
																"nativeSrc": "976:43:6",
																"nodeType": "YulFunctionCall",
																"src": "976:43:6"
															},
															"nativeSrc": "973:63:6",
															"nodeType": "YulIf",
															"src": "973:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:6",
														"nodeType": "YulTypedName",
														"src": "956:5:6",
														"type": ""
													}
												],
												"src": "920:122:6"
											},
											{
												"body": {
													"nativeSrc": "1100:87:6",
													"nodeType": "YulBlock",
													"src": "1100:87:6",
													"statements": [
														{
															"nativeSrc": "1110:29:6",
															"nodeType": "YulAssignment",
															"src": "1110:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:6"
																},
																"nativeSrc": "1119:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:6"
																},
																"nativeSrc": "1148:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:6"
															},
															"nativeSrc": "1148:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:6",
														"nodeType": "YulTypedName",
														"src": "1078:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:6",
														"nodeType": "YulTypedName",
														"src": "1086:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:6",
														"nodeType": "YulTypedName",
														"src": "1094:5:6",
														"type": ""
													}
												],
												"src": "1048:139:6"
											},
											{
												"body": {
													"nativeSrc": "1259:263:6",
													"nodeType": "YulBlock",
													"src": "1259:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:6",
																"nodeType": "YulBlock",
																"src": "1305:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:6"
																			},
																			"nativeSrc": "1307:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:6"
																		},
																		"nativeSrc": "1307:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:6"
																		},
																		"nativeSrc": "1276:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:6"
															},
															"nativeSrc": "1269:119:6",
															"nodeType": "YulIf",
															"src": "1269:119:6"
														},
														{
															"nativeSrc": "1398:117:6",
															"nodeType": "YulBlock",
															"src": "1398:117:6",
															"statements": [
																{
																	"nativeSrc": "1413:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:6"
																				},
																				"nativeSrc": "1473:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:6"
																		},
																		"nativeSrc": "1452:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:6",
														"nodeType": "YulTypedName",
														"src": "1229:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:6",
														"nodeType": "YulTypedName",
														"src": "1240:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:6",
														"nodeType": "YulTypedName",
														"src": "1252:6:6",
														"type": ""
													}
												],
												"src": "1193:329:6"
											},
											{
												"body": {
													"nativeSrc": "1570:48:6",
													"nodeType": "YulBlock",
													"src": "1570:48:6",
													"statements": [
														{
															"nativeSrc": "1580:32:6",
															"nodeType": "YulAssignment",
															"src": "1580:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1605:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1598:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:6"
																		},
																		"nativeSrc": "1598:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1591:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:6"
																},
																"nativeSrc": "1591:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1591:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1580:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1528:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1552:5:6",
														"nodeType": "YulTypedName",
														"src": "1552:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1562:7:6",
														"nodeType": "YulTypedName",
														"src": "1562:7:6",
														"type": ""
													}
												],
												"src": "1528:90:6"
											},
											{
												"body": {
													"nativeSrc": "1683:50:6",
													"nodeType": "YulBlock",
													"src": "1683:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1700:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1720:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1705:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:6"
																		},
																		"nativeSrc": "1705:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:6"
																},
																"nativeSrc": "1693:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1693:34:6"
															},
															"nativeSrc": "1693:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1624:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1671:5:6",
														"nodeType": "YulTypedName",
														"src": "1671:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1678:3:6",
														"nodeType": "YulTypedName",
														"src": "1678:3:6",
														"type": ""
													}
												],
												"src": "1624:109:6"
											},
											{
												"body": {
													"nativeSrc": "1831:118:6",
													"nodeType": "YulBlock",
													"src": "1831:118:6",
													"statements": [
														{
															"nativeSrc": "1841:26:6",
															"nodeType": "YulAssignment",
															"src": "1841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:6"
																},
																"nativeSrc": "1849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:6"
																		},
																		"nativeSrc": "1924:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1877:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:6"
																},
																"nativeSrc": "1877:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1877:65:6"
															},
															"nativeSrc": "1877:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1739:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1803:9:6",
														"nodeType": "YulTypedName",
														"src": "1803:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1815:6:6",
														"nodeType": "YulTypedName",
														"src": "1815:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1826:4:6",
														"nodeType": "YulTypedName",
														"src": "1826:4:6",
														"type": ""
													}
												],
												"src": "1739:210:6"
											},
											{
												"body": {
													"nativeSrc": "2000:32:6",
													"nodeType": "YulBlock",
													"src": "2000:32:6",
													"statements": [
														{
															"nativeSrc": "2010:16:6",
															"nodeType": "YulAssignment",
															"src": "2010:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2021:5:6",
																"nodeType": "YulIdentifier",
																"src": "2021:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2010:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1955:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1982:5:6",
														"nodeType": "YulTypedName",
														"src": "1982:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1992:7:6",
														"nodeType": "YulTypedName",
														"src": "1992:7:6",
														"type": ""
													}
												],
												"src": "1955:77:6"
											},
											{
												"body": {
													"nativeSrc": "2103:53:6",
													"nodeType": "YulBlock",
													"src": "2103:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2143:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2143:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2125:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2125:17:6"
																		},
																		"nativeSrc": "2125:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:6"
																},
																"nativeSrc": "2113:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2113:37:6"
															},
															"nativeSrc": "2113:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2113:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2038:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:6",
														"nodeType": "YulTypedName",
														"src": "2091:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2098:3:6",
														"nodeType": "YulTypedName",
														"src": "2098:3:6",
														"type": ""
													}
												],
												"src": "2038:118:6"
											},
											{
												"body": {
													"nativeSrc": "2260:124:6",
													"nodeType": "YulBlock",
													"src": "2260:124:6",
													"statements": [
														{
															"nativeSrc": "2270:26:6",
															"nodeType": "YulAssignment",
															"src": "2270:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:6"
																},
																"nativeSrc": "2278:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2278:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2350:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2350:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2374:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2374:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2359:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:6"
																		},
																		"nativeSrc": "2359:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2306:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2306:43:6"
																},
																"nativeSrc": "2306:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2306:71:6"
															},
															"nativeSrc": "2306:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2306:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2162:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:6",
														"nodeType": "YulTypedName",
														"src": "2232:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2244:6:6",
														"nodeType": "YulTypedName",
														"src": "2244:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2255:4:6",
														"nodeType": "YulTypedName",
														"src": "2255:4:6",
														"type": ""
													}
												],
												"src": "2162:222:6"
											},
											{
												"body": {
													"nativeSrc": "2433:79:6",
													"nodeType": "YulBlock",
													"src": "2433:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2490:16:6",
																"nodeType": "YulBlock",
																"src": "2490:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2499:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2502:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2492:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:6"
																			},
																			"nativeSrc": "2492:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:6"
																		},
																		"nativeSrc": "2492:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2456:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2481:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2463:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:6"
																				},
																				"nativeSrc": "2463:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2453:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:6"
																		},
																		"nativeSrc": "2453:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2446:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:6"
																},
																"nativeSrc": "2446:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2446:43:6"
															},
															"nativeSrc": "2443:63:6",
															"nodeType": "YulIf",
															"src": "2443:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2390:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2426:5:6",
														"nodeType": "YulTypedName",
														"src": "2426:5:6",
														"type": ""
													}
												],
												"src": "2390:122:6"
											},
											{
												"body": {
													"nativeSrc": "2570:87:6",
													"nodeType": "YulBlock",
													"src": "2570:87:6",
													"statements": [
														{
															"nativeSrc": "2580:29:6",
															"nodeType": "YulAssignment",
															"src": "2580:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2602:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2589:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:6"
																},
																"nativeSrc": "2589:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2589:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2580:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2645:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2618:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:6"
																},
																"nativeSrc": "2618:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2618:33:6"
															},
															"nativeSrc": "2618:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2518:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2548:6:6",
														"nodeType": "YulTypedName",
														"src": "2548:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2556:3:6",
														"nodeType": "YulTypedName",
														"src": "2556:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2564:5:6",
														"nodeType": "YulTypedName",
														"src": "2564:5:6",
														"type": ""
													}
												],
												"src": "2518:139:6"
											},
											{
												"body": {
													"nativeSrc": "2729:263:6",
													"nodeType": "YulBlock",
													"src": "2729:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2775:83:6",
																"nodeType": "YulBlock",
																"src": "2775:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2777:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:6"
																			},
																			"nativeSrc": "2777:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:6"
																		},
																		"nativeSrc": "2777:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2746:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:6"
																		},
																		"nativeSrc": "2746:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2771:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:6"
																},
																"nativeSrc": "2742:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:6"
															},
															"nativeSrc": "2739:119:6",
															"nodeType": "YulIf",
															"src": "2739:119:6"
														},
														{
															"nativeSrc": "2868:117:6",
															"nodeType": "YulBlock",
															"src": "2868:117:6",
															"statements": [
																{
																	"nativeSrc": "2883:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2897:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2887:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2912:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2912:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2947:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2958:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2943:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:6"
																				},
																				"nativeSrc": "2943:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2967:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2922:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:6"
																		},
																		"nativeSrc": "2922:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2912:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2663:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2699:9:6",
														"nodeType": "YulTypedName",
														"src": "2699:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2710:7:6",
														"nodeType": "YulTypedName",
														"src": "2710:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2722:6:6",
														"nodeType": "YulTypedName",
														"src": "2722:6:6",
														"type": ""
													}
												],
												"src": "2663:329:6"
											},
											{
												"body": {
													"nativeSrc": "3061:80:6",
													"nodeType": "YulBlock",
													"src": "3061:80:6",
													"statements": [
														{
															"nativeSrc": "3071:22:6",
															"nodeType": "YulAssignment",
															"src": "3071:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3086:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3080:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3080:5:6"
																},
																"nativeSrc": "3080:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3080:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3071:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3071:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3129:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3129:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3102:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3102:26:6"
																},
																"nativeSrc": "3102:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3102:33:6"
															},
															"nativeSrc": "3102:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3102:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2998:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3039:6:6",
														"nodeType": "YulTypedName",
														"src": "3039:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3047:3:6",
														"nodeType": "YulTypedName",
														"src": "3047:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													}
												],
												"src": "2998:143:6"
											},
											{
												"body": {
													"nativeSrc": "3224:274:6",
													"nodeType": "YulBlock",
													"src": "3224:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3270:83:6",
																"nodeType": "YulBlock",
																"src": "3270:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3272:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3272:77:6"
																			},
																			"nativeSrc": "3272:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3272:79:6"
																		},
																		"nativeSrc": "3272:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3272:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3245:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3245:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3254:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3241:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:6"
																		},
																		"nativeSrc": "3241:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3241:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3237:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:6"
																},
																"nativeSrc": "3237:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3237:32:6"
															},
															"nativeSrc": "3234:119:6",
															"nodeType": "YulIf",
															"src": "3234:119:6"
														},
														{
															"nativeSrc": "3363:128:6",
															"nodeType": "YulBlock",
															"src": "3363:128:6",
															"statements": [
																{
																	"nativeSrc": "3378:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3378:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3392:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3392:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3382:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3382:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3407:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3407:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:6"
																				},
																				"nativeSrc": "3449:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3417:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:31:6"
																		},
																		"nativeSrc": "3417:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3407:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3407:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3147:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3194:9:6",
														"nodeType": "YulTypedName",
														"src": "3194:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3205:7:6",
														"nodeType": "YulTypedName",
														"src": "3205:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3217:6:6",
														"nodeType": "YulTypedName",
														"src": "3217:6:6",
														"type": ""
													}
												],
												"src": "3147:351:6"
											},
											{
												"body": {
													"nativeSrc": "3547:43:6",
													"nodeType": "YulBlock",
													"src": "3547:43:6",
													"statements": [
														{
															"nativeSrc": "3557:27:6",
															"nodeType": "YulAssignment",
															"src": "3557:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3572:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3572:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3579:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3579:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3568:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:6"
																},
																"nativeSrc": "3568:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3568:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3557:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3557:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3504:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3529:5:6",
														"nodeType": "YulTypedName",
														"src": "3529:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3539:7:6",
														"nodeType": "YulTypedName",
														"src": "3539:7:6",
														"type": ""
													}
												],
												"src": "3504:86:6"
											},
											{
												"body": {
													"nativeSrc": "3637:77:6",
													"nodeType": "YulBlock",
													"src": "3637:77:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3692:16:6",
																"nodeType": "YulBlock",
																"src": "3692:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3701:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3701:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3704:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3704:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3694:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3694:6:6"
																			},
																			"nativeSrc": "3694:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3694:12:6"
																		},
																		"nativeSrc": "3694:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3694:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3660:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3660:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3683:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3683:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "3667:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "3667:15:6"
																				},
																				"nativeSrc": "3667:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3667:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3657:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3657:2:6"
																		},
																		"nativeSrc": "3657:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3657:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3650:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3650:6:6"
																},
																"nativeSrc": "3650:41:6",
																"nodeType": "YulFunctionCall",
																"src": "3650:41:6"
															},
															"nativeSrc": "3647:61:6",
															"nodeType": "YulIf",
															"src": "3647:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "3596:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3630:5:6",
														"nodeType": "YulTypedName",
														"src": "3630:5:6",
														"type": ""
													}
												],
												"src": "3596:118:6"
											},
											{
												"body": {
													"nativeSrc": "3781:78:6",
													"nodeType": "YulBlock",
													"src": "3781:78:6",
													"statements": [
														{
															"nativeSrc": "3791:22:6",
															"nodeType": "YulAssignment",
															"src": "3791:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3806:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3800:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3800:5:6"
																},
																"nativeSrc": "3800:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3800:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3791:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3791:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3847:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3847:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "3822:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "3822:24:6"
																},
																"nativeSrc": "3822:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3822:31:6"
															},
															"nativeSrc": "3822:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3822:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "3720:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3759:6:6",
														"nodeType": "YulTypedName",
														"src": "3759:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3767:3:6",
														"nodeType": "YulTypedName",
														"src": "3767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3775:5:6",
														"nodeType": "YulTypedName",
														"src": "3775:5:6",
														"type": ""
													}
												],
												"src": "3720:139:6"
											},
											{
												"body": {
													"nativeSrc": "3940:272:6",
													"nodeType": "YulBlock",
													"src": "3940:272:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3986:83:6",
																"nodeType": "YulBlock",
																"src": "3986:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3988:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3988:77:6"
																			},
																			"nativeSrc": "3988:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3988:79:6"
																		},
																		"nativeSrc": "3988:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3988:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3961:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3961:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3970:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3970:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3957:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:6"
																		},
																		"nativeSrc": "3957:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3953:3:6"
																},
																"nativeSrc": "3953:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3953:32:6"
															},
															"nativeSrc": "3950:119:6",
															"nodeType": "YulIf",
															"src": "3950:119:6"
														},
														{
															"nativeSrc": "4079:126:6",
															"nodeType": "YulBlock",
															"src": "4079:126:6",
															"statements": [
																{
																	"nativeSrc": "4094:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4094:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4108:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4108:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4098:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4098:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4123:72:6",
																	"nodeType": "YulAssignment",
																	"src": "4123:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4167:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4167:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4178:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4178:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4163:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4163:3:6"
																				},
																				"nativeSrc": "4163:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4163:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4187:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4187:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4133:29:6",
																			"nodeType": "YulIdentifier",
																			"src": "4133:29:6"
																		},
																		"nativeSrc": "4133:62:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4133:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4123:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4123:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "3865:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3910:9:6",
														"nodeType": "YulTypedName",
														"src": "3910:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3921:7:6",
														"nodeType": "YulTypedName",
														"src": "3921:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3933:6:6",
														"nodeType": "YulTypedName",
														"src": "3933:6:6",
														"type": ""
													}
												],
												"src": "3865:347:6"
											},
											{
												"body": {
													"nativeSrc": "4246:152:6",
													"nodeType": "YulBlock",
													"src": "4246:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4263:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4263:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4266:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4266:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:6"
																},
																"nativeSrc": "4256:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4256:88:6"
															},
															"nativeSrc": "4256:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4256:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4360:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4360:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4363:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4363:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4353:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:6"
																},
																"nativeSrc": "4353:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4353:15:6"
															},
															"nativeSrc": "4353:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4353:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4384:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4384:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4387:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4387:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4377:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:6"
																},
																"nativeSrc": "4377:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4377:15:6"
															},
															"nativeSrc": "4377:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4377:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4218:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4218:180:6"
											},
											{
												"body": {
													"nativeSrc": "4455:51:6",
													"nodeType": "YulBlock",
													"src": "4455:51:6",
													"statements": [
														{
															"nativeSrc": "4465:34:6",
															"nodeType": "YulAssignment",
															"src": "4465:34:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4490:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4490:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:6"
																},
																"nativeSrc": "4486:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4486:13:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4465:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4465:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "4404:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4436:5:6",
														"nodeType": "YulTypedName",
														"src": "4436:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4446:8:6",
														"nodeType": "YulTypedName",
														"src": "4446:8:6",
														"type": ""
													}
												],
												"src": "4404:102:6"
											},
											{
												"body": {
													"nativeSrc": "4585:775:6",
													"nodeType": "YulBlock",
													"src": "4585:775:6",
													"statements": [
														{
															"nativeSrc": "4595:15:6",
															"nodeType": "YulAssignment",
															"src": "4595:15:6",
															"value": {
																"name": "_power",
																"nativeSrc": "4604:6:6",
																"nodeType": "YulIdentifier",
																"src": "4604:6:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4595:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4595:5:6"
																}
															]
														},
														{
															"nativeSrc": "4619:14:6",
															"nodeType": "YulAssignment",
															"src": "4619:14:6",
															"value": {
																"name": "_base",
																"nativeSrc": "4628:5:6",
																"nodeType": "YulIdentifier",
																"src": "4628:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4619:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4619:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4677:677:6",
																"nodeType": "YulBlock",
																"src": "4677:677:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4765:22:6",
																			"nodeType": "YulBlock",
																			"src": "4765:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4767:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "4767:16:6"
																						},
																						"nativeSrc": "4767:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4767:18:6"
																					},
																					"nativeSrc": "4767:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "4767:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4743:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "4743:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4753:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4753:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4758:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4758:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4749:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4749:3:6"
																					},
																					"nativeSrc": "4749:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4749:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4740:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4740:2:6"
																			},
																			"nativeSrc": "4740:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4740:24:6"
																		},
																		"nativeSrc": "4737:50:6",
																		"nodeType": "YulIf",
																		"src": "4737:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "4832:419:6",
																			"nodeType": "YulBlock",
																			"src": "4832:419:6",
																			"statements": [
																				{
																					"nativeSrc": "5212:25:6",
																					"nodeType": "YulAssignment",
																					"src": "5212:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "5225:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "5225:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "5232:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "5232:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "5221:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5221:3:6"
																						},
																						"nativeSrc": "5221:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5221:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5212:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "5212:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4807:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4807:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4817:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4817:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4803:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4803:3:6"
																			},
																			"nativeSrc": "4803:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4803:16:6"
																		},
																		"nativeSrc": "4800:451:6",
																		"nodeType": "YulIf",
																		"src": "4800:451:6"
																	},
																	{
																		"nativeSrc": "5264:23:6",
																		"nodeType": "YulAssignment",
																		"src": "5264:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5276:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5276:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "5282:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "5282:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "5272:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5272:3:6"
																			},
																			"nativeSrc": "5272:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5272:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "5264:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5264:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5300:44:6",
																		"nodeType": "YulAssignment",
																		"src": "5300:44:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5335:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "5335:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "5312:22:6",
																				"nodeType": "YulIdentifier",
																				"src": "5312:22:6"
																			},
																			"nativeSrc": "5312:32:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5312:32:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5300:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5300:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4653:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "4653:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4663:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4663:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4650:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4650:2:6"
																},
																"nativeSrc": "4650:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4650:15:6"
															},
															"nativeSrc": "4642:712:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4666:2:6",
																"nodeType": "YulBlock",
																"src": "4666:2:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4646:3:6",
																"nodeType": "YulBlock",
																"src": "4646:3:6",
																"statements": []
															},
															"src": "4642:712:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4512:848:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "4540:6:6",
														"nodeType": "YulTypedName",
														"src": "4540:6:6",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "4548:5:6",
														"nodeType": "YulTypedName",
														"src": "4548:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4555:8:6",
														"nodeType": "YulTypedName",
														"src": "4555:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "4565:3:6",
														"nodeType": "YulTypedName",
														"src": "4565:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4573:5:6",
														"nodeType": "YulTypedName",
														"src": "4573:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4580:4:6",
														"nodeType": "YulTypedName",
														"src": "4580:4:6",
														"type": ""
													}
												],
												"src": "4512:848:6"
											},
											{
												"body": {
													"nativeSrc": "5426:1013:6",
													"nodeType": "YulBlock",
													"src": "5426:1013:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5621:20:6",
																"nodeType": "YulBlock",
																"src": "5621:20:6",
																"statements": [
																	{
																		"nativeSrc": "5623:10:6",
																		"nodeType": "YulAssignment",
																		"src": "5623:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5632:1:6",
																			"nodeType": "YulLiteral",
																			"src": "5632:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5623:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5623:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5634:5:6",
																		"nodeType": "YulLeave",
																		"src": "5634:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5611:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5611:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5604:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:6"
																},
																"nativeSrc": "5604:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5604:16:6"
															},
															"nativeSrc": "5601:40:6",
															"nodeType": "YulIf",
															"src": "5601:40:6"
														},
														{
															"body": {
																"nativeSrc": "5666:20:6",
																"nodeType": "YulBlock",
																"src": "5666:20:6",
																"statements": [
																	{
																		"nativeSrc": "5668:10:6",
																		"nodeType": "YulAssignment",
																		"src": "5668:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5677:1:6",
																			"nodeType": "YulLiteral",
																			"src": "5677:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5668:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5668:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5679:5:6",
																		"nodeType": "YulLeave",
																		"src": "5679:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5660:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5660:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5653:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:6"
																},
																"nativeSrc": "5653:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5653:12:6"
															},
															"nativeSrc": "5650:36:6",
															"nodeType": "YulIf",
															"src": "5650:36:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5796:20:6",
																		"nodeType": "YulBlock",
																		"src": "5796:20:6",
																		"statements": [
																			{
																				"nativeSrc": "5798:10:6",
																				"nodeType": "YulAssignment",
																				"src": "5798:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5807:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5807:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5798:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5798:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5809:5:6",
																				"nodeType": "YulLeave",
																				"src": "5809:5:6"
																			}
																		]
																	},
																	"nativeSrc": "5789:27:6",
																	"nodeType": "YulCase",
																	"src": "5789:27:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5794:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5794:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5840:176:6",
																		"nodeType": "YulBlock",
																		"src": "5840:176:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "5875:22:6",
																					"nodeType": "YulBlock",
																					"src": "5875:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "5877:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "5877:16:6"
																								},
																								"nativeSrc": "5877:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5877:18:6"
																							},
																							"nativeSrc": "5877:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5877:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "5860:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5860:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5870:3:6",
																							"nodeType": "YulLiteral",
																							"src": "5870:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "5857:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5857:2:6"
																					},
																					"nativeSrc": "5857:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5857:17:6"
																				},
																				"nativeSrc": "5854:43:6",
																				"nodeType": "YulIf",
																				"src": "5854:43:6"
																			},
																			{
																				"nativeSrc": "5910:25:6",
																				"nodeType": "YulAssignment",
																				"src": "5910:25:6",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5923:1:6",
																							"nodeType": "YulLiteral",
																							"src": "5923:1:6",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "5926:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5926:8:6"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "5919:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5919:3:6"
																					},
																					"nativeSrc": "5919:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5919:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "5910:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5910:5:6"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5966:22:6",
																					"nodeType": "YulBlock",
																					"src": "5966:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "5968:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "5968:16:6"
																								},
																								"nativeSrc": "5968:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5968:18:6"
																							},
																							"nativeSrc": "5968:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5968:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "5954:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "5954:5:6"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "5961:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5961:3:6"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "5951:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5951:2:6"
																					},
																					"nativeSrc": "5951:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5951:14:6"
																				},
																				"nativeSrc": "5948:40:6",
																				"nodeType": "YulIf",
																				"src": "5948:40:6"
																			},
																			{
																				"nativeSrc": "6001:5:6",
																				"nodeType": "YulLeave",
																				"src": "6001:5:6"
																			}
																		]
																	},
																	"nativeSrc": "5825:191:6",
																	"nodeType": "YulCase",
																	"src": "5825:191:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5830:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "5746:4:6",
																"nodeType": "YulIdentifier",
																"src": "5746:4:6"
															},
															"nativeSrc": "5739:277:6",
															"nodeType": "YulSwitch",
															"src": "5739:277:6"
														},
														{
															"body": {
																"nativeSrc": "6148:123:6",
																"nodeType": "YulBlock",
																"src": "6148:123:6",
																"statements": [
																	{
																		"nativeSrc": "6162:28:6",
																		"nodeType": "YulAssignment",
																		"src": "6162:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6175:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "6175:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6181:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6181:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "6171:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6171:3:6"
																			},
																			"nativeSrc": "6171:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6171:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6162:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6162:5:6"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6221:22:6",
																			"nodeType": "YulBlock",
																			"src": "6221:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6223:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "6223:16:6"
																						},
																						"nativeSrc": "6223:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6223:18:6"
																					},
																					"nativeSrc": "6223:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "6223:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "6209:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6209:5:6"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "6216:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6216:3:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6206:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6206:2:6"
																			},
																			"nativeSrc": "6206:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6206:14:6"
																		},
																		"nativeSrc": "6203:40:6",
																		"nodeType": "YulIf",
																		"src": "6203:40:6"
																	},
																	{
																		"nativeSrc": "6256:5:6",
																		"nodeType": "YulLeave",
																		"src": "6256:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6051:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6051:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6057:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6057:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6048:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6048:2:6"
																				},
																				"nativeSrc": "6048:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6065:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6065:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6075:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6075:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6062:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6062:2:6"
																				},
																				"nativeSrc": "6062:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6062:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6044:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6044:3:6"
																		},
																		"nativeSrc": "6044:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6100:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6100:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6106:3:6",
																						"nodeType": "YulLiteral",
																						"src": "6106:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6097:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6097:2:6"
																				},
																				"nativeSrc": "6097:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6097:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6115:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6115:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6125:2:6",
																						"nodeType": "YulLiteral",
																						"src": "6125:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6112:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6112:2:6"
																				},
																				"nativeSrc": "6112:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6112:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:6"
																		},
																		"nativeSrc": "6093:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6093:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6028:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6028:2:6"
																},
																"nativeSrc": "6028:111:6",
																"nodeType": "YulFunctionCall",
																"src": "6028:111:6"
															},
															"nativeSrc": "6025:246:6",
															"nodeType": "YulIf",
															"src": "6025:246:6"
														},
														{
															"nativeSrc": "6281:57:6",
															"nodeType": "YulAssignment",
															"src": "6281:57:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6315:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6315:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6318:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6318:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6324:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6324:8:6"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "6334:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6334:3:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "6296:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6296:18:6"
																},
																"nativeSrc": "6296:42:6",
																"nodeType": "YulFunctionCall",
																"src": "6296:42:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6281:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6281:5:6"
																},
																{
																	"name": "base",
																	"nativeSrc": "6288:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6288:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6377:22:6",
																"nodeType": "YulBlock",
																"src": "6377:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6379:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6379:16:6"
																			},
																			"nativeSrc": "6379:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6379:18:6"
																		},
																		"nativeSrc": "6379:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "6354:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6354:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "6365:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6365:3:6"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "6370:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6370:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6361:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6361:3:6"
																		},
																		"nativeSrc": "6361:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:14:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6351:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6351:2:6"
																},
																"nativeSrc": "6351:25:6",
																"nodeType": "YulFunctionCall",
																"src": "6351:25:6"
															},
															"nativeSrc": "6348:51:6",
															"nodeType": "YulIf",
															"src": "6348:51:6"
														},
														{
															"nativeSrc": "6408:25:6",
															"nodeType": "YulAssignment",
															"src": "6408:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "6421:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6421:5:6"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6428:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6428:4:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6417:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:6"
																},
																"nativeSrc": "6417:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6417:16:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6408:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6408:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "5366:1073:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5396:4:6",
														"nodeType": "YulTypedName",
														"src": "5396:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5402:8:6",
														"nodeType": "YulTypedName",
														"src": "5402:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5412:3:6",
														"nodeType": "YulTypedName",
														"src": "5412:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5420:5:6",
														"nodeType": "YulTypedName",
														"src": "5420:5:6",
														"type": ""
													}
												],
												"src": "5366:1073:6"
											},
											{
												"body": {
													"nativeSrc": "6509:217:6",
													"nodeType": "YulBlock",
													"src": "6509:217:6",
													"statements": [
														{
															"nativeSrc": "6519:31:6",
															"nodeType": "YulAssignment",
															"src": "6519:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6545:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6545:4:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6527:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6527:17:6"
																},
																"nativeSrc": "6527:23:6",
																"nodeType": "YulFunctionCall",
																"src": "6527:23:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6519:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6519:4:6"
																}
															]
														},
														{
															"nativeSrc": "6559:37:6",
															"nodeType": "YulAssignment",
															"src": "6559:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6587:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6587:8:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "6571:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "6571:15:6"
																},
																"nativeSrc": "6571:25:6",
																"nodeType": "YulFunctionCall",
																"src": "6571:25:6"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "6559:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6559:8:6"
																}
															]
														},
														{
															"nativeSrc": "6606:113:6",
															"nodeType": "YulAssignment",
															"src": "6606:113:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6636:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6636:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6642:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6642:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:66:6",
																		"nodeType": "YulLiteral",
																		"src": "6652:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "6615:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "6615:20:6"
																},
																"nativeSrc": "6615:104:6",
																"nodeType": "YulFunctionCall",
																"src": "6615:104:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6606:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6606:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "6445:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6484:4:6",
														"nodeType": "YulTypedName",
														"src": "6484:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6490:8:6",
														"nodeType": "YulTypedName",
														"src": "6490:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6503:5:6",
														"nodeType": "YulTypedName",
														"src": "6503:5:6",
														"type": ""
													}
												],
												"src": "6445:281:6"
											},
											{
												"body": {
													"nativeSrc": "6780:362:6",
													"nodeType": "YulBlock",
													"src": "6780:362:6",
													"statements": [
														{
															"nativeSrc": "6790:25:6",
															"nodeType": "YulAssignment",
															"src": "6790:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6813:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6813:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6795:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6795:17:6"
																},
																"nativeSrc": "6795:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6795:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6790:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6790:1:6"
																}
															]
														},
														{
															"nativeSrc": "6824:25:6",
															"nodeType": "YulAssignment",
															"src": "6824:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6847:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6847:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6829:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6829:17:6"
																},
																"nativeSrc": "6829:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6829:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6824:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6824:1:6"
																}
															]
														},
														{
															"nativeSrc": "6858:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6858:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6881:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6881:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6884:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6884:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:6"
																},
																"nativeSrc": "6877:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6877:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6862:11:6",
																	"nodeType": "YulTypedName",
																	"src": "6862:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6895:41:6",
															"nodeType": "YulAssignment",
															"src": "6895:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6924:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "6924:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6906:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6906:17:6"
																},
																"nativeSrc": "6906:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6906:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6895:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6895:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7113:22:6",
																"nodeType": "YulBlock",
																"src": "7113:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7115:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7115:16:6"
																			},
																			"nativeSrc": "7115:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7115:18:6"
																		},
																		"nativeSrc": "7115:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7115:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7046:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7046:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7039:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7039:6:6"
																				},
																				"nativeSrc": "7039:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7039:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7069:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "7069:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7076:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "7076:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7085:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "7085:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7072:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7072:3:6"
																						},
																						"nativeSrc": "7072:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7072:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7066:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "7066:2:6"
																				},
																				"nativeSrc": "7066:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7066:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7019:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7019:2:6"
																		},
																		"nativeSrc": "7019:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7019:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6999:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:6"
																},
																"nativeSrc": "6999:113:6",
																"nodeType": "YulFunctionCall",
																"src": "6999:113:6"
															},
															"nativeSrc": "6996:139:6",
															"nodeType": "YulIf",
															"src": "6996:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6732:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6763:1:6",
														"nodeType": "YulTypedName",
														"src": "6763:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6766:1:6",
														"nodeType": "YulTypedName",
														"src": "6766:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6772:7:6",
														"nodeType": "YulTypedName",
														"src": "6772:7:6",
														"type": ""
													}
												],
												"src": "6732:410:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"267": [
									{
										"length": 32,
										"start": 333
									},
									{
										"length": 32,
										"start": 431
									},
									{
										"length": 32,
										"start": 741
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80638ef1e259116100595780638ef1e259146100c55780639a3bfdf5146100f5578063f2fde38b14610113578063ffdd60f91461012f5761007b565b80636db08f251461007f578063715018a61461009d5780638da5cb5b146100a7575b5f5ffd5b61008761014b565b604051610094919061051e565b60405180910390f35b6100a561016f565b005b6100af610182565b6040516100bc919061051e565b60405180910390f35b6100df60048036038101906100da9190610565565b6101a9565b6040516100ec91906105aa565b60405180910390f35b6100fd61024e565b60405161010a91906105db565b60405180910390f35b61012d60048036038101906101289190610565565b610257565b005b6101496004803603810190610144919061061e565b6102db565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b610177610390565b6101805f610417565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6001547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610206919061051e565b602060405180830381865afa158015610221573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610245919061065d565b10159050919050565b5f600154905090565b61025f610390565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102cf575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016102c6919061051e565b60405180910390fd5b6102d881610417565b50565b6102e3610390565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561034c573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037091906106be565b600a61037c9190610845565b81610387919061088f565b60018190555050565b6103986104d8565b73ffffffffffffffffffffffffffffffffffffffff166103b6610182565b73ffffffffffffffffffffffffffffffffffffffff1614610415576103d96104d8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161040c919061051e565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610508826104df565b9050919050565b610518816104fe565b82525050565b5f6020820190506105315f83018461050f565b92915050565b5f5ffd5b610544816104fe565b811461054e575f5ffd5b50565b5f8135905061055f8161053b565b92915050565b5f6020828403121561057a57610579610537565b5b5f61058784828501610551565b91505092915050565b5f8115159050919050565b6105a481610590565b82525050565b5f6020820190506105bd5f83018461059b565b92915050565b5f819050919050565b6105d5816105c3565b82525050565b5f6020820190506105ee5f8301846105cc565b92915050565b6105fd816105c3565b8114610607575f5ffd5b50565b5f81359050610618816105f4565b92915050565b5f6020828403121561063357610632610537565b5b5f6106408482850161060a565b91505092915050565b5f81519050610657816105f4565b92915050565b5f6020828403121561067257610671610537565b5b5f61067f84828501610649565b91505092915050565b5f60ff82169050919050565b61069d81610688565b81146106a7575f5ffd5b50565b5f815190506106b881610694565b92915050565b5f602082840312156106d3576106d2610537565b5b5f6106e0848285016106aa565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b600185111561076b57808604811115610747576107466106e9565b5b60018516156107565780820291505b808102905061076485610716565b945061072b565b94509492505050565b5f82610783576001905061083e565b81610790575f905061083e565b81600181146107a657600281146107b0576107df565b600191505061083e565b60ff8411156107c2576107c16106e9565b5b8360020a9150848211156107d9576107d86106e9565b5b5061083e565b5060208310610133831016604e8410600b84101617156108145782820a90508381111561080f5761080e6106e9565b5b61083e565b6108218484846001610722565b92509050818404811115610838576108376106e9565b5b81810290505b9392505050565b5f61084f826105c3565b915061085a83610688565b92506108877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610774565b905092915050565b5f610899826105c3565b91506108a4836105c3565b92508282026108b2816105c3565b915082820484148315176108c9576108c86106e9565b5b509291505056fea2646970667358221220cb7b3b85fdb55e1748176087a1bb8412d91e06209a1009810a786a0c927b8bea64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EF1E259 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8EF1E259 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x9A3BFDF5 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xFFDD60F9 EQ PUSH2 0x12F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x6DB08F25 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAF PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST STOP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x180 PUSH0 PUSH2 0x417 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x65D JUMP JUMPDEST LT ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x390 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x390 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0xA PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x845 JUMP JUMPDEST DUP2 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x398 PUSH2 0x4D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3B6 PUSH2 0x182 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x415 JUMPI PUSH2 0x3D9 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x508 DUP3 PUSH2 0x4DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 DUP2 PUSH2 0x4FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH0 DUP4 ADD DUP5 PUSH2 0x50F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x544 DUP2 PUSH2 0x4FE JUMP JUMPDEST DUP2 EQ PUSH2 0x54E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x55F DUP2 PUSH2 0x53B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x587 DUP5 DUP3 DUP6 ADD PUSH2 0x551 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A4 DUP2 PUSH2 0x590 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5BD PUSH0 DUP4 ADD DUP5 PUSH2 0x59B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EE PUSH0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FD DUP2 PUSH2 0x5C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x607 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x618 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x640 DUP5 DUP3 DUP6 ADD PUSH2 0x60A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x657 DUP2 PUSH2 0x5F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x672 JUMPI PUSH2 0x671 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x67F DUP5 DUP3 DUP6 ADD PUSH2 0x649 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69D DUP2 PUSH2 0x688 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B8 DUP2 PUSH2 0x694 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0x537 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E0 DUP5 DUP3 DUP6 ADD PUSH2 0x6AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x76B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x747 JUMPI PUSH2 0x746 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x756 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x764 DUP6 PUSH2 0x716 JUMP JUMPDEST SWAP5 POP PUSH2 0x72B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x783 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x83E JUMP JUMPDEST DUP2 PUSH2 0x790 JUMPI PUSH0 SWAP1 POP PUSH2 0x83E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x7A6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x7B0 JUMPI PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x83E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST POP PUSH2 0x83E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x814 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x80F JUMPI PUSH2 0x80E PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST PUSH2 0x83E JUMP JUMPDEST PUSH2 0x821 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x722 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x84F DUP3 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x85A DUP4 PUSH2 0x688 JUMP JUMPDEST SWAP3 POP PUSH2 0x887 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x774 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x899 DUP3 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A4 DUP4 PUSH2 0x5C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x8B2 DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x8C9 JUMPI PUSH2 0x8C8 PUSH2 0x6E9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB PUSH28 0x3B85FDB55E1748176087A1BB8412D91E06209A1009810A786A0C927B DUP12 0xEA PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "256:752:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:155:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;902:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;735:159:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;310:30;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;572:155:3:-;634:4;704:15;;670:5;663:23;;;687:12;663:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;656:63;;572:155;;;:::o;902:101::-;951:4;980:15;;973:22;;902:101;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;735:159:3:-;1531:13:0;:11;:13::i;:::-;869:5:3::1;853:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;849:2;:37;;;;:::i;:::-;835:13;:51;;;;:::i;:::-;817:15;:69;;;;735:159:::0;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o;1955:77::-;1992:7;2021:5;2010:16;;1955:77;;;:::o;2038:118::-;2125:24;2143:5;2125:24;:::i;:::-;2120:3;2113:37;2038:118;;:::o;2162:222::-;2255:4;2293:2;2282:9;2278:18;2270:26;;2306:71;2374:1;2363:9;2359:17;2350:6;2306:71;:::i;:::-;2162:222;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:143::-;3055:5;3086:6;3080:13;3071:22;;3102:33;3129:5;3102:33;:::i;:::-;2998:143;;;;:::o;3147:351::-;3217:6;3266:2;3254:9;3245:7;3241:23;3237:32;3234:119;;;3272:79;;:::i;:::-;3234:119;3392:1;3417:64;3473:7;3464:6;3453:9;3449:22;3417:64;:::i;:::-;3407:74;;3363:128;3147:351;;;;:::o;3504:86::-;3539:7;3579:4;3572:5;3568:16;3557:27;;3504:86;;;:::o;3596:118::-;3667:22;3683:5;3667:22;:::i;:::-;3660:5;3657:33;3647:61;;3704:1;3701;3694:12;3647:61;3596:118;:::o;3720:139::-;3775:5;3806:6;3800:13;3791:22;;3822:31;3847:5;3822:31;:::i;:::-;3720:139;;;;:::o;3865:347::-;3933:6;3982:2;3970:9;3961:7;3957:23;3953:32;3950:119;;;3988:79;;:::i;:::-;3950:119;4108:1;4133:62;4187:7;4178:6;4167:9;4163:22;4133:62;:::i;:::-;4123:72;;4079:126;3865:347;;;;:::o;4218:180::-;4266:77;4263:1;4256:88;4363:4;4360:1;4353:15;4387:4;4384:1;4377:15;4404:102;4446:8;4493:5;4490:1;4486:13;4465:34;;4404:102;;;:::o;4512:848::-;4573:5;4580:4;4604:6;4595:15;;4628:5;4619:14;;4642:712;4663:1;4653:8;4650:15;4642:712;;;4758:4;4753:3;4749:14;4743:4;4740:24;4737:50;;;4767:18;;:::i;:::-;4737:50;4817:1;4807:8;4803:16;4800:451;;;5232:4;5225:5;5221:16;5212:25;;4800:451;5282:4;5276;5272:15;5264:23;;5312:32;5335:8;5312:32;:::i;:::-;5300:44;;4642:712;;;4512:848;;;;;;;:::o;5366:1073::-;5420:5;5611:8;5601:40;;5632:1;5623:10;;5634:5;;5601:40;5660:4;5650:36;;5677:1;5668:10;;5679:5;;5650:36;5746:4;5794:1;5789:27;;;;5830:1;5825:191;;;;5739:277;;5789:27;5807:1;5798:10;;5809:5;;;5825:191;5870:3;5860:8;5857:17;5854:43;;;5877:18;;:::i;:::-;5854:43;5926:8;5923:1;5919:16;5910:25;;5961:3;5954:5;5951:14;5948:40;;;5968:18;;:::i;:::-;5948:40;6001:5;;;5739:277;;6125:2;6115:8;6112:16;6106:3;6100:4;6097:13;6093:36;6075:2;6065:8;6062:16;6057:2;6051:4;6048:12;6044:35;6028:111;6025:246;;;6181:8;6175:4;6171:19;6162:28;;6216:3;6209:5;6206:14;6203:40;;;6223:18;;:::i;:::-;6203:40;6256:5;;6025:246;6296:42;6334:3;6324:8;6318:4;6315:1;6296:42;:::i;:::-;6281:57;;;;6370:4;6365:3;6361:14;6354:5;6351:25;6348:51;;;6379:18;;:::i;:::-;6348:51;6428:4;6421:5;6417:16;6408:25;;5366:1073;;;;;;:::o;6445:281::-;6503:5;6527:23;6545:4;6527:23;:::i;:::-;6519:31;;6571:25;6587:8;6571:25;:::i;:::-;6559:37;;6615:104;6652:66;6642:8;6636:4;6615:104;:::i;:::-;6606:113;;6445:281;;;;:::o;6732:410::-;6772:7;6795:20;6813:1;6795:20;:::i;:::-;6790:25;;6829:20;6847:1;6829:20;:::i;:::-;6824:25;;6884:1;6881;6877:9;6906:30;6924:11;6906:30;:::i;:::-;6895:41;;7085:1;7076:7;7072:15;7069:1;7066:22;7046:1;7039:9;7019:83;6996:139;;7115:18;;:::i;:::-;6996:139;6780:362;6732:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "462000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CREDI()": "infinite",
								"isWhale(address)": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"setWhaleThreshold(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"whaleThreshold()": "2454"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 378,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "7A120"
								},
								{
									"begin": 347,
									"end": 384,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 347,
									"end": 384,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 393,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 393,
									"end": 564,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 429,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 429,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 429,
									"end": 439,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 439,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 429,
									"end": 441,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 429,
									"end": 441,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 429,
									"end": 441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 429,
									"end": 441,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 429,
									"end": 441,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 468,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 460,
									"end": 474,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 539,
									"end": 544,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 539,
									"end": 544,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 523,
									"end": 554,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 523,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "313CE567"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 523,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 523,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 519,
									"end": 521,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 519,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 519,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 518,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 503,
									"end": 518,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 503,
									"end": 556,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 503,
									"end": 556,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 485,
									"end": 500,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 485,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 485,
									"end": 556,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 485,
									"end": 556,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 485,
									"end": 556,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 393,
									"end": 564,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1640,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1554,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1629,
									"end": 1633,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1622,
									"end": 1627,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1634,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1634,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1640,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1764,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1646,
									"end": 1764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1733,
									"end": 1738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1739,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1717,
									"end": 1739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1739,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1717,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1740,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1697,
									"end": 1758,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1754,
									"end": 1755,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1751,
									"end": 1752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 1756,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1758,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 1697,
									"end": 1758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1764,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1825,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1856,
									"end": 1862,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 1863,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1863,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1863,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1872,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1897,
									"end": 1902,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1872,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1872,
									"end": 1903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1872,
									"end": 1903,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1872,
									"end": 1903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1770,
									"end": 1909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1983,
									"end": 1989,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 2034,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2020,
									"end": 2029,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2007,
									"end": 2030,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2035,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2000,
									"end": 2119,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2000,
									"end": 2119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2000,
									"end": 2119,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2038,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2038,
									"end": 2117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2117,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2038,
									"end": 2117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2000,
									"end": 2119,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2000,
									"end": 2119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2183,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2237,
									"end": 2244,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2217,
									"end": 2226,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2235,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2183,
									"end": 2245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2245,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2183,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2245,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2245,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2129,
									"end": 2255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1915,
									"end": 2262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2268,
									"end": 2448,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2268,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2393,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2313,
									"end": 2314,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2306,
									"end": 2394,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2417,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2410,
									"end": 2411,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2403,
									"end": 2418,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2434,
									"end": 2435,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2427,
									"end": 2442,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2454,
									"end": 2556,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 2454,
									"end": 2556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2496,
									"end": 2504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2543,
									"end": 2548,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2541,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2536,
									"end": 2549,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2515,
									"end": 2549,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2515,
									"end": 2549,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2454,
									"end": 2556,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2454,
									"end": 2556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2454,
									"end": 2556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2454,
									"end": 2556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2628,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2630,
									"end": 2634,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2660,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2645,
									"end": 2660,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2683,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2669,
									"end": 2683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2713,
									"end": 2714,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2703,
									"end": 2711,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2700,
									"end": 2715,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2806,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 2813,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 2797,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2790,
									"end": 2814,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2837,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2837,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2787,
									"end": 2837,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2817,
									"end": 2835,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2817,
									"end": 2835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2835,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 2817,
									"end": 2835,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2837,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2787,
									"end": 2837,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2867,
									"end": 2868,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2857,
									"end": 2865,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2853,
									"end": 2869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2850,
									"end": 3301,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2850,
									"end": 3301,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2850,
									"end": 3301,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3282,
									"end": 3286,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3275,
									"end": 3280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3271,
									"end": 3287,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3287,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3262,
									"end": 3287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2850,
									"end": 3301,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2850,
									"end": 3301,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3332,
									"end": 3336,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3326,
									"end": 3330,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3337,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3362,
									"end": 3394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3385,
									"end": 3393,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3362,
									"end": 3394,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3362,
									"end": 3394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3362,
									"end": 3394,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3362,
									"end": 3394,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3394,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3350,
									"end": 3394,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2692,
									"end": 3404,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3470,
									"end": 3475,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3661,
									"end": 3669,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3651,
									"end": 3691,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 3683,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3673,
									"end": 3683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3673,
									"end": 3683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3684,
									"end": 3689,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3691,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3651,
									"end": 3691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3710,
									"end": 3714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3736,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3700,
									"end": 3736,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3728,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3718,
									"end": 3728,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3718,
									"end": 3728,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3729,
									"end": 3734,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3736,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3700,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3796,
									"end": 3800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3844,
									"end": 3845,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3880,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3789,
									"end": 4066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3789,
									"end": 4066,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3839,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3857,
									"end": 3858,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3848,
									"end": 3858,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3848,
									"end": 3858,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3864,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3859,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3859,
									"end": 3864,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3875,
									"end": 4066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3920,
									"end": 3923,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3910,
									"end": 3918,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3924,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3904,
									"end": 3947,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3904,
									"end": 3947,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3904,
									"end": 3947,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3927,
									"end": 3945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3927,
									"end": 3945,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3904,
									"end": 3947,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3904,
									"end": 3947,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3976,
									"end": 3984,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 3974,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3969,
									"end": 3985,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3960,
									"end": 3985,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3960,
									"end": 3985,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4011,
									"end": 4014,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4009,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4001,
									"end": 4015,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4038,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3998,
									"end": 4038,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4018,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4018,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4018,
									"end": 4036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4018,
									"end": 4036,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4018,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4038,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3998,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4051,
									"end": 4056,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3789,
									"end": 4066,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3789,
									"end": 4066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3789,
									"end": 4066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4175,
									"end": 4177,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4165,
									"end": 4173,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4162,
									"end": 4178,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4156,
									"end": 4159,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4147,
									"end": 4160,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4179,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4125,
									"end": 4127,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 4115,
									"end": 4123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4128,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4107,
									"end": 4109,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 4101,
									"end": 4105,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4098,
									"end": 4110,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4129,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4078,
									"end": 4189,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4321,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4075,
									"end": 4321,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4231,
									"end": 4239,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4225,
									"end": 4229,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4221,
									"end": 4240,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4212,
									"end": 4240,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4269,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4259,
									"end": 4264,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4256,
									"end": 4270,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4293,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4253,
									"end": 4293,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4273,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4273,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4273,
									"end": 4291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4273,
									"end": 4291,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4273,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4253,
									"end": 4293,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4253,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4306,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 4306,
									"end": 4311,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4321,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4075,
									"end": 4321,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4346,
									"end": 4388,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4384,
									"end": 4387,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4372,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4366,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4346,
									"end": 4388,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4346,
									"end": 4388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4346,
									"end": 4388,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4346,
									"end": 4388,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4388,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4388,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4420,
									"end": 4424,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4415,
									"end": 4418,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4411,
									"end": 4425,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4404,
									"end": 4409,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4426,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4398,
									"end": 4449,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4398,
									"end": 4449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4398,
									"end": 4449,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4429,
									"end": 4447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4429,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4398,
									"end": 4449,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4398,
									"end": 4449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4471,
									"end": 4476,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4467,
									"end": 4483,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3416,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4495,
									"end": 4572,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4495,
									"end": 4572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4539,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4561,
									"end": 4566,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4550,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4550,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4495,
									"end": 4572,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4495,
									"end": 4572,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4495,
									"end": 4572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4495,
									"end": 4572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4636,
									"end": 4641,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4660,
									"end": 4683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4678,
									"end": 4682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4660,
									"end": 4683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4683,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4660,
									"end": 4683,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4652,
									"end": 4683,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4652,
									"end": 4683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4720,
									"end": 4728,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4704,
									"end": 4729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4729,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4704,
									"end": 4729,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4692,
									"end": 4729,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4692,
									"end": 4729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4785,
									"end": 4851,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4775,
									"end": 4783,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4769,
									"end": 4773,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4748,
									"end": 4852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4852,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4748,
									"end": 4852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 4852,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4739,
									"end": 4852,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4578,
									"end": 4859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4905,
									"end": 4912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4928,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4946,
									"end": 4947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4928,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4928,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4928,
									"end": 4948,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4928,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4923,
									"end": 4948,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4923,
									"end": 4948,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4962,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4980,
									"end": 4981,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4962,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4962,
									"end": 4982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4962,
									"end": 4982,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4962,
									"end": 4982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 4982,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 4982,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5017,
									"end": 5018,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5014,
									"end": 5015,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5010,
									"end": 5019,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5057,
									"end": 5068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5039,
									"end": 5069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5039,
									"end": 5069,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5039,
									"end": 5069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5069,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5218,
									"end": 5219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5209,
									"end": 5216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5205,
									"end": 5220,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5202,
									"end": 5203,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5199,
									"end": 5221,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5179,
									"end": 5180,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5172,
									"end": 5181,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5152,
									"end": 5235,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5129,
									"end": 5268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5129,
									"end": 5268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5248,
									"end": 5266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5248,
									"end": 5266,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5129,
									"end": 5268,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5129,
									"end": 5268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4913,
									"end": 5275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4865,
									"end": 5275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "267"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 1008,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb7b3b85fdb55e1748176087a1bb8412d91e06209a1009810a786a0c927b8bea64736f6c634300081e0033",
									".code": [
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8EF1E259"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8EF1E259"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "9A3BFDF5"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "FFDD60F9"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "6DB08F25"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 1008,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 310,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 902,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 902,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 310,
											"end": 340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 727,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 670,
											"end": 675,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 663,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 687,
											"end": 699,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 663,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 663,
											"end": 700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 663,
											"end": 719,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 719,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 656,
											"end": 719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 572,
											"end": 727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 980,
											"end": 995,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 973,
											"end": 995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 995,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 853,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 853,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 853,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 849,
											"end": 851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 849,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 849,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 835,
											"end": 848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 835,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 835,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 817,
											"end": 832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 817,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 817,
											"end": 886,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 817,
											"end": 886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 735,
											"end": 894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2143,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2125,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2125,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2306,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2306,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3129,
											"end": 3134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3102,
											"end": 3135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3135,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3102,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3264,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3269,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3234,
											"end": 3353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3272,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3272,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3351,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3272,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3353,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3234,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3417,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3481,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3417,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3481,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3590,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3504,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3714,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3596,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3683,
											"end": 3688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3667,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3690,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3647,
											"end": 3708,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3706,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3708,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3647,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3714,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3813,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3822,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3853,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3822,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3720,
											"end": 3859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 3985,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4069,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3950,
											"end": 4069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3988,
											"end": 4067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 3988,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 4069,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3950,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4167,
											"end": 4176,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4133,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4195,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4133,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4079,
											"end": 4205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4398,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4218,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4343,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4263,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4367,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4353,
											"end": 4368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4387,
											"end": 4391,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4506,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4404,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4490,
											"end": 4491,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4573,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4619,
											"end": 4633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4653,
											"end": 4661,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4650,
											"end": 4665,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4762,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4756,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4763,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4764,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4737,
											"end": 4787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4767,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4787,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4737,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4807,
											"end": 4815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 5251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4800,
											"end": 5251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5236,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5221,
											"end": 5237,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 5251,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4800,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5272,
											"end": 5287,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5335,
											"end": 5343,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5312,
											"end": 5344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5344,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4642,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 5360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5601,
											"end": 5641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5633,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5623,
											"end": 5633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5641,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5601,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5660,
											"end": 5664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5650,
											"end": 5686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5679,
											"end": 5684,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5650,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5739,
											"end": 6016,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5789,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5798,
											"end": 5808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5825,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5873,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5860,
											"end": 5868,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5854,
											"end": 5897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5877,
											"end": 5895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5877,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5897,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5854,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 5934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5919,
											"end": 5935,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 5959,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5965,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 5988,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5948,
											"end": 5988,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5968,
											"end": 5986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5948,
											"end": 5988,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5948,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6016,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5739,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 6016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6125,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6128,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6109,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6100,
											"end": 6104,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6110,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 6065,
											"end": 6073,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6062,
											"end": 6078,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6048,
											"end": 6060,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6079,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6028,
											"end": 6139,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6271,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6025,
											"end": 6271,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6216,
											"end": 6219,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6220,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6243,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6203,
											"end": 6243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6223,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6243,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6203,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6271,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6025,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6332,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6322,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6296,
											"end": 6338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 6296,
											"end": 6338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6338,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6296,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6338,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6281,
											"end": 6338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6368,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6376,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6379,
											"end": 6397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6379,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6433,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 6439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6503,
											"end": 6508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6545,
											"end": 6549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6527,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6527,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6587,
											"end": 6595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6571,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6596,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6571,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6596,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6652,
											"end": 6718,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6642,
											"end": 6650,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6636,
											"end": 6640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6615,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6719,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6615,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6445,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6795,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6795,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6790,
											"end": 6815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6790,
											"end": 6815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6829,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6849,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6829,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6824,
											"end": 6849,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6824,
											"end": 6849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6924,
											"end": 6935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6906,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6936,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6906,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7085,
											"end": 7086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7076,
											"end": 7083,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7087,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7088,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7039,
											"end": 7048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7019,
											"end": 7102,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6996,
											"end": 7135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7115,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7135,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6996,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CREDIWhale.sol",
								"contracts/interface/ICREDIWhale.sol",
								"contracts/interface/IERC20_Decimals.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CREDI()": "6db08f25",
							"isWhale(address)": "8ef1e259",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setWhaleThreshold(uint256)": "ffdd60f9",
							"transferOwnership(address)": "f2fde38b",
							"whaleThreshold()": "9a3bfdf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CREDI\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREDI\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"new_threshold\",\"type\":\"uint256\"}],\"name\":\"setWhaleThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whaleThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CREDIWhale.sol\":\"CREDIWhale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CREDIWhale.sol\":{\"keccak256\":\"0xe0b054a02681427024ad05b21daa1249aac326d02cd98a37e381aa5c3f31f3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e7f8540055ac91b147706205a0d39ed4e60410558b2faa5b14a2d126fe2d800\",\"dweb:/ipfs/Qmc2QFKUU3qeK3oKN2ki6iS1sZ7AWS1HKgmRk8SbbvhsyU\"]},\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]},\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/CREDIWhale.sol:CREDIWhale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 270,
								"contract": "contracts/CREDIWhale.sol:CREDIWhale",
								"label": "_whaleThreshold",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ICREDIWhale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user_address",
									"type": "address"
								}
							],
							"name": "isWhale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "whaleThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isWhale(address)": "8ef1e259",
							"whaleThreshold()": "9a3bfdf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_address\",\"type\":\"address\"}],\"name\":\"isWhale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whaleThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/ICREDIWhale.sol\":\"ICREDIWhale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/ICREDIWhale.sol\":{\"keccak256\":\"0xfceee6ad4c80887953573851857ad0f6b03f2aa5dc9007b15b553224c8d1b035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7872bcdbd1a0674b7932bc82e93fa592e5ab5fcf5c228202acc27e26502f842d\",\"dweb:/ipfs/QmXJcL28dxMaL46vLeqwpxQ7Xf8tPdLTgfoUhuZLMh3Szc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"IERC20_Decimals": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IERC20_Decimals.sol\":\"IERC20_Decimals\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IERC20_Decimals.sol\":{\"keccak256\":\"0x2dde74db1f051dafa94b46c64b4bc80e570d768b4419426d72b5453adf1e9bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://115bf8fb67ace478f6d567c6c436816ca00b134b5c2c19379f86b1587bb6e4c8\",\"dweb:/ipfs/QmbaEdHk666WWVTQhAoqwq2eGeiHA8XZdYhUNHmrpEpghV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/CREDIWhale.sol": {
				"ast": {
					"absolutePath": "contracts/CREDIWhale.sol",
					"exportedSymbols": {
						"CREDIWhale": [
							342
						],
						"Context": [
							255
						],
						"ICREDIWhale": [
							357
						],
						"IERC20": [
							225
						],
						"IERC20_Decimals": [
							365
						],
						"Ownable": [
							147
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 148,
							"src": "60:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 226,
							"src": "114:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IERC20_Decimals.sol",
							"file": "./interface/IERC20_Decimals.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 366,
							"src": "172:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/ICREDIWhale.sol",
							"file": "./interface/ICREDIWhale.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 358,
							"src": "215:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 262,
										"name": "Ownable",
										"nameLocations": [
											"279:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "279:7:3"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:3"
								},
								{
									"baseName": {
										"id": 264,
										"name": "ICREDIWhale",
										"nameLocations": [
											"288:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 357,
										"src": "288:11:3"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "288:11:3"
								}
							],
							"canonicalName": "CREDIWhale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								357,
								147,
								255
							],
							"name": "CREDIWhale",
							"nameLocation": "265:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6db08f25",
									"id": 267,
									"mutability": "immutable",
									"name": "CREDI",
									"nameLocation": "335:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "310:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 270,
									"mutability": "mutable",
									"name": "_whaleThreshold",
									"nameLocation": "360:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "347:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "347:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030303030",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000_by_1",
											"typeString": "int_const 500000"
										},
										"value": "500000"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "448:116:3",
										"statements": [
											{
												"expression": {
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 279,
														"name": "CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "460:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 280,
														"name": "_CREDI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "468:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "460:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "460:14:3"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 283,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "485:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 284,
															"name": "_whaleThreshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "503:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "519:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 287,
																				"name": "CREDI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "539:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 286,
																			"name": "IERC20_Decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "523:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_Decimals_$365_$",
																				"typeString": "type(contract IERC20_Decimals)"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "523:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_Decimals_$365",
																			"typeString": "contract IERC20_Decimals"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "546:8:3",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "523:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "523:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "519:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "503:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "485:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "485:71:3"
											}
										]
									},
									"id": 296,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 275,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "429:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "429:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 277,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 274,
												"name": "Ownable",
												"nameLocations": [
													"421:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "421:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "421:21:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_CREDI",
												"nameLocation": "413:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "405:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:16:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:3"
									},
									"scope": 342,
									"src": "393:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "645:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 307,
																"name": "user_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "687:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "CREDI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "670:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 303,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "663:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "663:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "677:9:3",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "663:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "663:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 309,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "704:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "663:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 302,
												"id": 311,
												"nodeType": "Return",
												"src": "656:63:3"
											}
										]
									},
									"functionSelector": "8ef1e259",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhale",
									"nameLocation": "581:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "597:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "589:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:22:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "634:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "634:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:6:3"
									},
									"scope": 342,
									"src": "572:155:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "806:88:3",
										"statements": [
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "_whaleThreshold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "817:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 321,
															"name": "new_threshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "835:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "849:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 324,
																				"name": "CREDI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "869:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 323,
																			"name": "IERC20_Decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "853:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_Decimals_$365_$",
																				"typeString": "type(contract IERC20_Decimals)"
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "853:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_Decimals_$365",
																			"typeString": "contract IERC20_Decimals"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "876:8:3",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "853:31:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "853:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "849:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "835:51:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "817:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "817:69:3"
											}
										]
									},
									"functionSelector": "ffdd60f9",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 317,
												"name": "onlyOwner",
												"nameLocations": [
													"791:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "791:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "791:9:3"
										}
									],
									"name": "setWhaleThreshold",
									"nameLocation": "744:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "new_threshold",
												"nameLocation": "767:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "762:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:20:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:0:3"
									},
									"scope": 342,
									"src": "735:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										356
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "962:41:3",
										"statements": [
											{
												"expression": {
													"id": 338,
													"name": "_whaleThreshold",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 270,
													"src": "980:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "973:22:3"
											}
										]
									},
									"functionSelector": "9a3bfdf5",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "whaleThreshold",
									"nameLocation": "911:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "951:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:3"
									},
									"scope": 342,
									"src": "902:101:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "256:752:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:977:3"
				},
				"id": 3
			},
			"contracts/interface/ICREDIWhale.sol": {
				"ast": {
					"absolutePath": "contracts/interface/ICREDIWhale.sol",
					"exportedSymbols": {
						"ICREDIWhale": [
							357
						]
					},
					"id": 358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICREDIWhale",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 357,
							"linearizedBaseContracts": [
								357
							],
							"name": "ICREDIWhale",
							"nameLocation": "70:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ef1e259",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhale",
									"nameLocation": "100:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "user_address",
												"nameLocation": "116:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "108:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:22:4"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "153:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "152:6:4"
									},
									"scope": 357,
									"src": "91:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a3bfdf5",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "whaleThreshold",
									"nameLocation": "174:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "214:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "214:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:6:4"
									},
									"scope": 357,
									"src": "165:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 358,
							"src": "60:164:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:191:4"
				},
				"id": 4
			},
			"contracts/interface/IERC20_Decimals.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IERC20_Decimals.sol",
					"exportedSymbols": {
						"IERC20_Decimals": [
							365
						]
					},
					"id": 366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20_Decimals",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "IERC20_Decimals",
							"nameLocation": "71:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "105:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "113:2:5"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "139:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 361,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "139:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:7:5"
									},
									"scope": 365,
									"src": "96:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "61:91:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:121:5"
				},
				"id": 5
			}
		}
	}
}